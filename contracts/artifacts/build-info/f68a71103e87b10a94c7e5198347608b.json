{
	"id": "f68a71103e87b10a94c7e5198347608b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract MyToken is ERC721 {\n    constructor() ERC721(\"MyToken\", \"MTK\") {}\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC-721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol": {
				"ERC721Utils": {
					"abi": [],
					"devdoc": {
						"details": "Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":431:1911  library ERC721Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":431:1911  library ERC721Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220a4a7a4464bea5e7f29b1f1f35e68449e8d5e40ec73b7adfd54d62b8f5fa2ab1964736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a4a7a4464bea5e7f29b1f1f35e68449e8d5e40ec73b7adfd54d62b8f5fa2ab1964736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xA7 LOG4 CHAINID 0x4B 0xEA MCOPY PUSH32 0x29B1F1F35E68449E8D5E40EC73B7ADFD54D62B8F5FA2AB1964736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "431:1480:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a4a7a4464bea5e7f29b1f1f35e68449e8d5e40ec73b7adfd54d62b8f5fa2ab1964736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xA7 LOG4 CHAINID 0x4B 0xEA MCOPY PUSH32 0x29B1F1F35E68449E8D5E40EC73B7ADFD54D62B8F5FA2AB1964736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "431:1480:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"checkOnERC721Received(address,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a4a7a4464bea5e7f29b1f1f35e68449e8d5e40ec73b7adfd54d62b8f5fa2ab1964736f6c634300081c0033",
									".code": [
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220eb8deaba934a873bf92f061f946d2d811c9567eef219271e25586b82cf4f090e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220eb8deaba934a873bf92f061f946d2d811c9567eef219271e25586b82cf4f090e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB DUP14 0xEA 0xBA SWAP4 BLOBBASEFEE DUP8 EXTCODESIZE 0xF9 0x2F MOD 0x1F SWAP5 PUSH14 0x2D811C9567EEF219271E25586B82 0xCF 0x4F MULMOD 0xE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "657:1315:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220eb8deaba934a873bf92f061f946d2d811c9567eef219271e25586b82cf4f090e64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB DUP14 0xEA 0xBA SWAP4 BLOBBASEFEE DUP8 EXTCODESIZE 0xF9 0x2F MOD 0x1F SWAP5 PUSH14 0x2D811C9567EEF219271E25586B82 0xCF 0x4F MULMOD 0xE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "657:1315:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb8deaba934a873bf92f061f946d2d811c9567eef219271e25586b82cf4f090e64736f6c634300081c0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3931  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3931  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220660320078ff89b3b9e1e9ae87fef2272052ea179e4771c29b8e7250fb003e1ea64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220660320078ff89b3b9e1e9ae87fef2272052ea179e4771c29b8e7250fb003e1ea64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x320078FF89B3B SWAP15 0x1E SWAP11 0xE8 PUSH32 0xEF2272052EA179E4771C29B8E7250FB003E1EA64736F6C634300081C00330000 ",
							"sourceMap": "251:3680:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220660320078ff89b3b9e1e9ae87fef2272052ea179e4771c29b8e7250fb003e1ea64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x320078FF89B3B SWAP15 0x1E SWAP11 0xE8 PUSH32 0xEF2272052EA179E4771C29B8E7250FB003E1EA64736F6C634300081C00330000 ",
							"sourceMap": "251:3680:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toChecksumHexString(address)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220660320078ff89b3b9e1e9ae87fef2272052ea179e4771c29b8e7250fb003e1ea64736f6c634300081c0033",
									".code": [
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220525f0dec2adf37452fe3428b740755b34c0f567b83377ecd5ab1e1c5b9c1692264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220525f0dec2adf37452fe3428b740755b34c0f567b83377ecd5ab1e1c5b9c1692264736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE PUSH0 0xD 0xEC 0x2A 0xDF CALLDATACOPY GASLIMIT 0x2F 0xE3 TIMESTAMP DUP12 PUSH21 0x755B34C0F567B83377ECD5AB1E1C5B9C169226473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "281:28026:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220525f0dec2adf37452fe3428b740755b34c0f567b83377ecd5ab1e1c5b9c1692264736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE PUSH0 0xD 0xEC 0x2A 0xDF CALLDATACOPY GASLIMIT 0x2F 0xE3 TIMESTAMP DUP12 PUSH21 0x755B34C0F567B83377ECD5AB1E1C5B9C169226473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "281:28026:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220525f0dec2adf37452fe3428b740755b34c0f567b83377ecd5ab1e1c5b9c1692264736f6c634300081c0033",
									".code": [
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212202cc7b669eb9957609caa47a87338e8ec635afc197cba6d8af481f1b6d4daf79c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202cc7b669eb9957609caa47a87338e8ec635afc197cba6d8af481f1b6d4daf79c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xC7 0xB6 PUSH10 0xEB9957609CAA47A87338 0xE8 0xEC PUSH4 0x5AFC197C 0xBA PUSH14 0x8AF481F1B6D4DAF79C64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "769:34173:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202cc7b669eb9957609caa47a87338e8ec635afc197cba6d8af481f1b6d4daf79c64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xC7 0xB6 PUSH10 0xEB9957609CAA47A87338 0xE8 0xEC PUSH4 0x5AFC197C 0xBA PUSH14 0x8AF481F1B6D4DAF79C64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "769:34173:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202cc7b669eb9957609caa47a87338e8ec635afc197cba6d8af481f1b6d4daf79c64736f6c634300081c0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220b4fd557ab4fe6b2037d830fa8666d39660f694d31c42db2662924136316e751964736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b4fd557ab4fe6b2037d830fa8666d39660f694d31c42db2662924136316e751964736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 REVERT SSTORE PUSH27 0xB4FE6B2037D830FA8666D39660F694D31C42DB2662924136316E75 NOT PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "258:2354:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b4fd557ab4fe6b2037d830fa8666d39660f694d31c42db2662924136316e751964736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 REVERT SSTORE PUSH27 0xB4FE6B2037D830FA8666D39660F694D31C42DB2662924136316E75 NOT PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "258:2354:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite",
								"ternary(bool,int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4fd557ab4fe6b2037d830fa8666d39660f694d31c42db2662924136316e751964736f6c634300081c0033",
									".code": [
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":117:193  contract MyToken is ERC721 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":150:191  constructor() ERC721(\"MyToken\", \"MTK\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1380:1493  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79546f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1454:1459  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1446:1451  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1446:1459  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1469:1476  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1469:1486  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1380:1493  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":117:193  contract MyToken is ERC721 {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyToken.sol\":117:193  contract MyToken is ERC721 {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":117:193  contract MyToken is ERC721 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1560:1860  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2364:2453  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3496:3650  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3322:3435  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4142:4720  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4786:4918  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2184:2302  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2517:2610  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3717:3861  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4984:5217  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2676:2931  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3927:4080  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1560:1860  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1712:1737  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1737  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1708  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1737  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1801  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_76\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1768:1801  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1753:1801  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1753:1764  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1753:1801  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1801  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1853  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1817:1853  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1841:1852  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1817:1840  super.supportsInterface */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1817:1853  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1853  interfaceId == type(IERC721).interfaceId ||... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1678:1853  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1560:1860  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2364:2453  function name() public view virtual returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2409:2422  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2441:2446  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2434:2446  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2364:2453  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3496:3650  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3563:3570  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3582:3604  _requireOwned(tokenId) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3596:3603  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3582:3595  _requireOwned */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3582:3604  _requireOwned(tokenId) */\n      jump\t// in\n    tag_88:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3622:3643  _getApproved(tokenId) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3635:3642  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3622:3634  _getApproved */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3622:3643  _getApproved(tokenId) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3615:3643  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3496:3650  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3322:3435  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3393:3428  _approve(to, tokenId, _msgSender()) */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3402:3404  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3406:3413  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3415:3427  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3415:3425  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3415:3427  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3393:3401  _approve */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3393:3428  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3322:3435  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4142:4720  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4250:4251  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4236:4252  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4236:4238  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4236:4252  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4232:4319  if (to == address(0)) {... */\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4305:4306  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4275:4308  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4232:4319  if (to == address(0)) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4537:4558  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4561:4595  _update(to, tokenId, _msgSender()) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4569:4571  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4573:4580  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4582:4594  _msgSender() */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4582:4592  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4582:4594  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4561:4568  _update */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4561:4595  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4537:4595  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4626:4630  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4609:4630  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4609:4622  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4609:4630  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4605:4714  if (previousOwner != from) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4674:4678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4680:4687  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4689:4702  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4653:4703  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4605:4714  if (previousOwner != from) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4222:4720  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4142:4720  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4786:4918  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4872:4911  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4889:4893  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4895:4897  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4899:4906  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4872:4911  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4872:4888  safeTransferFrom */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4872:4911  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4786:4918  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2184:2302  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2247:2254  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2273:2295  _requireOwned(tokenId) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2287:2294  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2273:2286  _requireOwned */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2273:2295  _requireOwned(tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2266:2295  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2184:2302  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1982:1989  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2022:2023  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2024  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2010  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2024  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2088  if (owner == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2074:2075  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2047:2077  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2088  if (owner == address(0)) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2104:2113  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2104:2120  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2114:2119  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2104:2120  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2097:2120  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2517:2610  function symbol() public view virtual returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2564:2577  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2596:2603  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2589:2603  return _symbol */\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_82\n      jump\t// in\n    tag_114:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_82\n      jump\t// in\n    tag_115:\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_117\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_116)\n    tag_117:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_118:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_118\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2517:2610  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3717:3861  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3802:3854  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3821:3833  _msgSender() */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3821:3831  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3821:3833  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3835:3843  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3845:3853  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3802:3820  _setApprovalForAll */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3802:3854  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3717:3861  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4984:5217  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5097:5128  transferFrom(from, to, tokenId) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5110:5114  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5116:5118  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5120:5127  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5097:5109  transferFrom */\n      tag_41\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5097:5128  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5138:5210  ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5184  _msgSender() */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5182  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5184  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5186:5190  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5192:5194  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5196:5203  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5205:5209  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5138:5171  ERC721Utils.checkOnERC721Received */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5138:5210  ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4984:5217  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2676:2931  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2740:2753  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2765:2787  _requireOwned(tokenId) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2779:2786  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2765:2778  _requireOwned */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2765:2787  _requireOwned(tokenId) */\n      jump\t// in\n    tag_129:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2798:2819  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2822:2832  _baseURI() */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2822:2830  _baseURI */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2822:2832  _baseURI() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2798:2832  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2873:2874  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2855:2862  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2849:2870  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2849:2874  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2849:2924  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_132\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_133)\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2891:2898  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2900:2918  tokenId.toString() */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2900:2907  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2900:2916  tokenId.toString */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2900:2918  tokenId.toString() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2877:2919  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_136\n      swap3\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2849:2924  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2842:2924  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2676:2931  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3927:4080  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4015:4019  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4056  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4057:4062  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4073  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4064:4072  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4073  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4031:4073  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3927:4080  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16212:16453  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16275:16282  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16294:16307  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16310:16327  _ownerOf(tokenId) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16319:16326  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16310:16318  _ownerOf */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16310:16327  _ownerOf(tokenId) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16294:16327  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16358:16359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16341:16360  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16341:16346  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16341:16360  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16337:16425  if (owner == address(0)) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16406:16413  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16383:16414  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16337:16425  if (owner == address(0)) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16441:16446  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16434:16446  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16212:16453  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5963:6090  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6033:6040  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6074  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6075:6082  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6059:6083  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6052:6083  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5963:6090  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14492:14612  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14572:14605  _approve(to, tokenId, auth, true) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14581:14583  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14585:14592  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14594:14598  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14600:14604  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14572:14580  _approve */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14572:14605  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14492:14612  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8861:9656  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8947:8954  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8966:8978  address from */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8981:8998  _ownerOf(tokenId) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8990:8997  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8981:8989  _ownerOf */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8981:8998  _ownerOf(tokenId) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8966:8998  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9074:9075  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9058:9076  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9058:9062  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9058:9076  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9054:9140  if (auth != address(0)) {... */\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9129  _checkAuthorized(from, auth, tokenId) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9109:9113  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9115:9119  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9121:9128  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9108  _checkAuthorized */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9129  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9054:9140  if (auth != address(0)) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9200:9201  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9184:9202  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9184:9188  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9184:9202  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9180:9436  if (from != address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9300:9348  _approve(address(0), tokenId, address(0), false) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9317:9318  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9321:9328  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9338:9339  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9342:9347  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9300:9308  _approve */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9300:9348  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9410:9411  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9400  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9406  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9401:9405  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9406  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9391:9411  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9180:9436  if (from != address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9464:9465  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9450:9466  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9450:9452  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9450:9466  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9446:9553  if (to != address(0)) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9527:9528  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9519  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9523  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9520:9522  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9523  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9510:9528  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9446:9553  if (to != address(0)) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9582:9584  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9570  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9579  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9571:9578  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9579  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9563:9584  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9619:9626  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9617  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9600:9627  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9609:9613  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9600:9627  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9645:9649  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9638:9649  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8861:9656  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15665:15977  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15792:15793  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15772:15794  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15772:15780  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15772:15794  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15859  if (operator == address(0)) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15839:15847  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15817:15848  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15859  if (operator == address(0)) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15906:15914  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15868:15886  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15868:15893  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15892  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15868:15893  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15868:15903  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15894:15902  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15868:15903  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15868:15914  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15951:15959  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15929:15970  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15944:15949  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15929:15970  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15961:15969  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15929:15970  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15665:15977  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":985:1909  function checkOnERC721Received(... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1182:1183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1165:1167  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1165:1179  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1165:1183  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1161:1903  if (to.code.length > 0) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1219:1221  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1203:1239  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1240:1248  operator */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1250:1254  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1256:1263  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1265:1269  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1203:1270  IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_166\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      0x01\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1199:1893  try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {... */\n      tag_169\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_174\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_173)\n    tag_174:\n      0x60\n      swap2\n      pop\n    tag_173:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1577:1578  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1560:1566  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1560:1573  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1560:1578  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1556:1879  if (reason.length == 0) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1700:1702  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1664:1703  IERC721Errors.ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1556:1879  if (reason.length == 0) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1831:1837  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1825:1838  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1816:1822  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1812:1814  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1808:1823  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1801:1839  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1199:1893  try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1327:1368  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1317:1368  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1317:1323  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1317:1368  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1313:1495  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1473:1475  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1437:1476  IERC721Errors.ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1313:1495  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1271:1509  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":1161:1903  if (to.code.length > 0) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":985:1909  function checkOnERC721Received(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3173:3265  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3224:3237  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3249:3258  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3173:3265  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1269  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_184\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_185\n      jumpi\n      tag_186\n      tag_187\n      jump\t// in\n    tag_186:\n    tag_185:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_188\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_188:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":944:950  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":940:942  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":936:951  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":928:934  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:952  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":917:952  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":979:1226  while (true) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":986:990  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":979:1226  while (true) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1015  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1114:1124  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1109:1111  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1102:1107  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1098:1112  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1093:1125  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1091  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1080:1126  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1170:1172  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1161:1172  value /= 10 */\n      dup6\n      dup2\n      tag_191\n      jumpi\n      tag_192\n      tag_193\n      jump\t// in\n    tag_192:\n    tag_191:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1203:1204  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1194:1199  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1194:1204  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":979:1226  while (true) {... */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1190:1211  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":979:1226  while (true) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1246:1252  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1239:1252  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1269  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5732:5847  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5798:5805  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5831  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5832:5839  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:5840  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5817:5840  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5732:5847  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14794:15456  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14954:14963  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14954:14985  emitEvent || auth != address(0) */\n      dup1\n      tag_197\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14983:14984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14967:14985  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14967:14971  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14967:14985  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14954:14985  emitEvent || auth != address(0) */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14950:15410  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15001:15014  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15017:15039  _requireOwned(tokenId) */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15031:15038  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15017:15030  _requireOwned */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15017:15039  _requireOwned(tokenId) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15001:15039  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15183:15184  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15185  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15171  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15185  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15202  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_200\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15198:15202  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15202  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15194  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15202  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15202  auth != address(0) && owner != auth */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15236  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_201\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15207:15236  isApprovedForAll(owner, auth) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15224:15229  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15231:15235  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15207:15223  isApprovedForAll */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15207:15236  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15206:15236  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15236  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15163:15305  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15285:15289  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15263:15290  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15163:15305  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15323:15332  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15319:15400  if (emitEvent) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15377:15384  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15357:15385  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15366:15371  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15357:15385  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15319:15400  if (emitEvent) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14987:15410  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14950:15410  if (emitEvent || auth != address(0)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15447:15449  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15420:15435  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15420:15444  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15436:15443  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15420:15444  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15420:15449  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14794:15456  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7105:7473  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7217:7255  _isAuthorized(owner, spender, tokenId) */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7231:7236  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7238:7245  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7247:7254  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7217:7230  _isAuthorized */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7217:7255  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7212:7467  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7292:7293  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7275:7294  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7275:7280  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7275:7294  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7271:7457  if (owner == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7344:7351  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7352  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7271:7457  if (owner == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7425:7432  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7434:7441  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7398:7442  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7212:7467  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7105:7473  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25316:26232  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25369:25376  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25388:25402  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25405:25406  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25388:25406  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25453:25461  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25444:25449  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25444:25461  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25440:25543  if (value >= 10 ** 64) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25490:25498  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25481:25498  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_217\n      jumpi\n      tag_218\n      tag_193\n      jump\t// in\n    tag_218:\n    tag_217:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25526:25528  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25516:25528  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25440:25543  if (value >= 10 ** 64) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25569:25577  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25560:25565  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25560:25577  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25556:25659  if (value >= 10 ** 32) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25606:25614  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25597:25614  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_220\n      jumpi\n      tag_221\n      tag_193\n      jump\t// in\n    tag_221:\n    tag_220:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25642:25644  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25632:25644  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25556:25659  if (value >= 10 ** 32) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25685:25693  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25676:25681  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25676:25693  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25672:25775  if (value >= 10 ** 16) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25722:25730  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25713:25730  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_223\n      jumpi\n      tag_224\n      tag_193\n      jump\t// in\n    tag_224:\n    tag_223:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25758:25760  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25748:25760  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25672:25775  if (value >= 10 ** 16) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25801:25808  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25792:25797  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25792:25808  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25788:25888  if (value >= 10 ** 8) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25837:25844  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25828:25844  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_226\n      jumpi\n      tag_227\n      tag_193\n      jump\t// in\n    tag_227:\n    tag_226:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25872:25873  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25862:25873  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25788:25888  if (value >= 10 ** 8) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25914:25921  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25905:25910  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25905:25921  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25901:26001  if (value >= 10 ** 4) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25950:25957  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25941:25957  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_229\n      jumpi\n      tag_230\n      tag_193\n      jump\t// in\n    tag_230:\n    tag_229:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25985:25986  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25975:25986  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25901:26001  if (value >= 10 ** 4) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26027:26034  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26018:26023  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26018:26034  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26014:26114  if (value >= 10 ** 2) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26063:26070  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26054:26070  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_232\n      jumpi\n      tag_233\n      tag_193\n      jump\t// in\n    tag_233:\n    tag_232:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26098:26099  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26088:26099  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26014:26114  if (value >= 10 ** 2) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26140:26147  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26131:26136  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26131:26147  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26127:26193  if (value >= 10 ** 1) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26177:26178  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26167:26178  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26127:26193  if (value >= 10 ** 1) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26219:26225  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":26212:26225  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25316:26232  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6401:6673  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6504:6508  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6558:6559  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6539:6560  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6539:6546  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6539:6560  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6539:6666  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_236\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6586:6593  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6593  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6582  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6593  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6629  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_237\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6597:6629  isApprovedForAll(owner, spender) */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6614:6619  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6597:6613  isApprovedForAll */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6597:6629  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6629  owner == spender || isApprovedForAll(owner, spender) */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6665  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_239\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6658:6665  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6665  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6654  _getApproved(tokenId) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6646:6653  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6645  _getApproved */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6654  _getApproved(tokenId) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6665  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6577:6665  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6539:6666  spender != address(0) &&... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6520:6666  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6401:6673  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_241:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_242:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_243:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_244:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_245:\n        /* \"#utility.yul\":561:584   */\n      tag_286\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_244\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_287:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_246:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_289\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_245\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_20:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_292\n      tag_242\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":833:952   */\n    tag_291:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_293\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_246\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_247:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_248:\n        /* \"#utility.yul\":1268:1289   */\n      tag_296\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_247\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_23:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_298\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_248\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_249:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_250:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_251:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_252:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_253:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_304\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_249\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2222:2293   */\n      tag_305\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_250\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_306\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_251\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2392:2421   */\n      tag_307\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_252\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_27:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_309\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_253\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_254:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_255:\n        /* \"#utility.yul\":2909:2933   */\n      tag_312\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_254\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      0x00\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_313:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_256:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_315\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_255\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_30:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_318\n      tag_242\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3185:3304   */\n    tag_317:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_319\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_256\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_257:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_258:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_322\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_257\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_259:\n        /* \"#utility.yul\":3765:3789   */\n      tag_324\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_258\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_33:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_326\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_259\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_260:\n        /* \"#utility.yul\":4103:4127   */\n      tag_328\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_258\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      0x00\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_329:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_261:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_331\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_260\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_36:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      0x00\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_334\n      tag_242\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4396:4515   */\n    tag_333:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_335\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_261\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_336\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_256\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_40:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      0x00\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_339\n      tag_242\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4893:5012   */\n    tag_338:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_340\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_261\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_341\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_261\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_342\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_256\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5737   */\n    tag_51:\n        /* \"#utility.yul\":5467:5473   */\n      0x00\n        /* \"#utility.yul\":5516:5518   */\n      0x20\n        /* \"#utility.yul\":5504:5513   */\n      dup3\n        /* \"#utility.yul\":5495:5502   */\n      dup5\n        /* \"#utility.yul\":5491:5514   */\n      sub\n        /* \"#utility.yul\":5487:5519   */\n      slt\n        /* \"#utility.yul\":5484:5603   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":5522:5601   */\n      tag_345\n      tag_242\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":5484:5603   */\n    tag_344:\n        /* \"#utility.yul\":5642:5643   */\n      0x00\n        /* \"#utility.yul\":5667:5720   */\n      tag_346\n        /* \"#utility.yul\":5712:5719   */\n      dup5\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5692:5701   */\n      dup6\n        /* \"#utility.yul\":5688:5710   */\n      add\n        /* \"#utility.yul\":5667:5720   */\n      tag_261\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5657:5720   */\n      swap2\n      pop\n        /* \"#utility.yul\":5613:5730   */\n      pop\n        /* \"#utility.yul\":5408:5737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5743:5861   */\n    tag_262:\n        /* \"#utility.yul\":5830:5854   */\n      tag_348\n        /* \"#utility.yul\":5848:5853   */\n      dup2\n        /* \"#utility.yul\":5830:5854   */\n      tag_254\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5825:5828   */\n      dup3\n        /* \"#utility.yul\":5818:5855   */\n      mstore\n        /* \"#utility.yul\":5743:5861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6089   */\n    tag_54:\n        /* \"#utility.yul\":5960:5964   */\n      0x00\n        /* \"#utility.yul\":5998:6000   */\n      0x20\n        /* \"#utility.yul\":5987:5996   */\n      dup3\n        /* \"#utility.yul\":5983:6001   */\n      add\n        /* \"#utility.yul\":5975:6001   */\n      swap1\n      pop\n        /* \"#utility.yul\":6011:6082   */\n      tag_350\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6068:6077   */\n      dup4\n        /* \"#utility.yul\":6064:6081   */\n      add\n        /* \"#utility.yul\":6055:6061   */\n      dup5\n        /* \"#utility.yul\":6011:6082   */\n      tag_262\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5867:6089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6095:6211   */\n    tag_263:\n        /* \"#utility.yul\":6165:6186   */\n      tag_352\n        /* \"#utility.yul\":6180:6185   */\n      dup2\n        /* \"#utility.yul\":6165:6186   */\n      tag_247\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":6158:6163   */\n      dup2\n        /* \"#utility.yul\":6155:6187   */\n      eq\n        /* \"#utility.yul\":6145:6205   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":6201:6202   */\n      0x00\n        /* \"#utility.yul\":6198:6199   */\n      0x00\n        /* \"#utility.yul\":6191:6203   */\n      revert\n        /* \"#utility.yul\":6145:6205   */\n    tag_353:\n        /* \"#utility.yul\":6095:6211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6350   */\n    tag_264:\n        /* \"#utility.yul\":6260:6265   */\n      0x00\n        /* \"#utility.yul\":6298:6304   */\n      dup2\n        /* \"#utility.yul\":6285:6305   */\n      calldataload\n        /* \"#utility.yul\":6276:6305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6314:6344   */\n      tag_355\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_263\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":6217:6350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6356:6824   */\n    tag_60:\n        /* \"#utility.yul\":6421:6427   */\n      0x00\n        /* \"#utility.yul\":6429:6435   */\n      0x00\n        /* \"#utility.yul\":6478:6480   */\n      0x40\n        /* \"#utility.yul\":6466:6475   */\n      dup4\n        /* \"#utility.yul\":6457:6464   */\n      dup6\n        /* \"#utility.yul\":6453:6476   */\n      sub\n        /* \"#utility.yul\":6449:6481   */\n      slt\n        /* \"#utility.yul\":6446:6565   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":6484:6563   */\n      tag_358\n      tag_242\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6446:6565   */\n    tag_357:\n        /* \"#utility.yul\":6604:6605   */\n      0x00\n        /* \"#utility.yul\":6629:6682   */\n      tag_359\n        /* \"#utility.yul\":6674:6681   */\n      dup6\n        /* \"#utility.yul\":6665:6671   */\n      dup3\n        /* \"#utility.yul\":6654:6663   */\n      dup7\n        /* \"#utility.yul\":6650:6672   */\n      add\n        /* \"#utility.yul\":6629:6682   */\n      tag_261\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6619:6682   */\n      swap3\n      pop\n        /* \"#utility.yul\":6575:6692   */\n      pop\n        /* \"#utility.yul\":6731:6733   */\n      0x20\n        /* \"#utility.yul\":6757:6807   */\n      tag_360\n        /* \"#utility.yul\":6799:6806   */\n      dup6\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6779:6788   */\n      dup7\n        /* \"#utility.yul\":6775:6797   */\n      add\n        /* \"#utility.yul\":6757:6807   */\n      tag_264\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6747:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6702:6817   */\n      pop\n        /* \"#utility.yul\":6356:6824   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6830:6947   */\n    tag_265:\n        /* \"#utility.yul\":6939:6940   */\n      0x00\n        /* \"#utility.yul\":6936:6937   */\n      0x00\n        /* \"#utility.yul\":6929:6941   */\n      revert\n        /* \"#utility.yul\":6953:7070   */\n    tag_266:\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7059:7060   */\n      0x00\n        /* \"#utility.yul\":7052:7064   */\n      revert\n        /* \"#utility.yul\":7076:7256   */\n    tag_187:\n        /* \"#utility.yul\":7124:7201   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7114:7202   */\n      mstore\n        /* \"#utility.yul\":7221:7225   */\n      0x41\n        /* \"#utility.yul\":7218:7219   */\n      0x04\n        /* \"#utility.yul\":7211:7226   */\n      mstore\n        /* \"#utility.yul\":7245:7249   */\n      0x24\n        /* \"#utility.yul\":7242:7243   */\n      0x00\n        /* \"#utility.yul\":7235:7250   */\n      revert\n        /* \"#utility.yul\":7262:7543   */\n    tag_267:\n        /* \"#utility.yul\":7345:7372   */\n      tag_365\n        /* \"#utility.yul\":7367:7371   */\n      dup3\n        /* \"#utility.yul\":7345:7372   */\n      tag_252\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":7337:7343   */\n      dup2\n        /* \"#utility.yul\":7333:7373   */\n      add\n        /* \"#utility.yul\":7475:7481   */\n      dup2\n        /* \"#utility.yul\":7463:7473   */\n      dup2\n        /* \"#utility.yul\":7460:7482   */\n      lt\n        /* \"#utility.yul\":7439:7457   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7427:7437   */\n      dup3\n        /* \"#utility.yul\":7424:7458   */\n      gt\n        /* \"#utility.yul\":7421:7483   */\n      or\n        /* \"#utility.yul\":7418:7506   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":7486:7504   */\n      tag_367\n      tag_187\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":7418:7506   */\n    tag_366:\n        /* \"#utility.yul\":7526:7536   */\n      dup1\n        /* \"#utility.yul\":7522:7524   */\n      0x40\n        /* \"#utility.yul\":7515:7537   */\n      mstore\n        /* \"#utility.yul\":7305:7543   */\n      pop\n        /* \"#utility.yul\":7262:7543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7678   */\n    tag_268:\n        /* \"#utility.yul\":7583:7589   */\n      0x00\n        /* \"#utility.yul\":7610:7630   */\n      tag_369\n      tag_241\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":7600:7630   */\n      swap1\n      pop\n        /* \"#utility.yul\":7639:7672   */\n      tag_370\n        /* \"#utility.yul\":7667:7671   */\n      dup3\n        /* \"#utility.yul\":7659:7665   */\n      dup3\n        /* \"#utility.yul\":7639:7672   */\n      tag_267\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7549:7678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7991   */\n    tag_269:\n        /* \"#utility.yul\":7745:7749   */\n      0x00\n        /* \"#utility.yul\":7835:7853   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7827:7833   */\n      dup3\n        /* \"#utility.yul\":7824:7854   */\n      gt\n        /* \"#utility.yul\":7821:7877   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":7857:7875   */\n      tag_373\n      tag_187\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7821:7877   */\n    tag_372:\n        /* \"#utility.yul\":7895:7924   */\n      tag_374\n        /* \"#utility.yul\":7917:7923   */\n      dup3\n        /* \"#utility.yul\":7895:7924   */\n      tag_252\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7887:7924   */\n      swap1\n      pop\n        /* \"#utility.yul\":7979:7983   */\n      0x20\n        /* \"#utility.yul\":7973:7977   */\n      dup2\n        /* \"#utility.yul\":7969:7984   */\n      add\n        /* \"#utility.yul\":7961:7984   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7997:8145   */\n    tag_270:\n        /* \"#utility.yul\":8095:8101   */\n      dup3\n        /* \"#utility.yul\":8090:8093   */\n      dup2\n        /* \"#utility.yul\":8085:8088   */\n      dup4\n        /* \"#utility.yul\":8072:8102   */\n      calldatacopy\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup4\n        /* \"#utility.yul\":8122:8125   */\n      dup4\n        /* \"#utility.yul\":8118:8134   */\n      add\n        /* \"#utility.yul\":8111:8138   */\n      mstore\n        /* \"#utility.yul\":7997:8145   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8151:8574   */\n    tag_271:\n        /* \"#utility.yul\":8228:8233   */\n      0x00\n        /* \"#utility.yul\":8253:8318   */\n      tag_377\n        /* \"#utility.yul\":8269:8317   */\n      tag_378\n        /* \"#utility.yul\":8310:8316   */\n      dup5\n        /* \"#utility.yul\":8269:8317   */\n      tag_269\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":8253:8318   */\n      tag_268\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":8244:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":8341:8347   */\n      dup3\n        /* \"#utility.yul\":8334:8339   */\n      dup2\n        /* \"#utility.yul\":8327:8348   */\n      mstore\n        /* \"#utility.yul\":8379:8383   */\n      0x20\n        /* \"#utility.yul\":8372:8377   */\n      dup2\n        /* \"#utility.yul\":8368:8384   */\n      add\n        /* \"#utility.yul\":8417:8420   */\n      dup5\n        /* \"#utility.yul\":8408:8414   */\n      dup5\n        /* \"#utility.yul\":8403:8406   */\n      dup5\n        /* \"#utility.yul\":8399:8415   */\n      add\n        /* \"#utility.yul\":8396:8421   */\n      gt\n        /* \"#utility.yul\":8393:8505   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":8424:8503   */\n      tag_380\n      tag_266\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":8393:8505   */\n    tag_379:\n        /* \"#utility.yul\":8514:8568   */\n      tag_381\n        /* \"#utility.yul\":8561:8567   */\n      dup5\n        /* \"#utility.yul\":8556:8559   */\n      dup3\n        /* \"#utility.yul\":8551:8554   */\n      dup6\n        /* \"#utility.yul\":8514:8568   */\n      tag_270\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":8234:8574   */\n      pop\n        /* \"#utility.yul\":8151:8574   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8593:8931   */\n    tag_272:\n        /* \"#utility.yul\":8648:8653   */\n      0x00\n        /* \"#utility.yul\":8697:8700   */\n      dup3\n        /* \"#utility.yul\":8690:8694   */\n      0x1f\n        /* \"#utility.yul\":8682:8688   */\n      dup4\n        /* \"#utility.yul\":8678:8695   */\n      add\n        /* \"#utility.yul\":8674:8701   */\n      slt\n        /* \"#utility.yul\":8664:8786   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":8705:8784   */\n      tag_384\n      tag_265\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8664:8786   */\n    tag_383:\n        /* \"#utility.yul\":8822:8828   */\n      dup2\n        /* \"#utility.yul\":8809:8829   */\n      calldataload\n        /* \"#utility.yul\":8847:8925   */\n      tag_385\n        /* \"#utility.yul\":8921:8924   */\n      dup5\n        /* \"#utility.yul\":8913:8919   */\n      dup3\n        /* \"#utility.yul\":8906:8910   */\n      0x20\n        /* \"#utility.yul\":8898:8904   */\n      dup7\n        /* \"#utility.yul\":8894:8911   */\n      add\n        /* \"#utility.yul\":8847:8925   */\n      tag_271\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8838:8925   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8931   */\n      pop\n        /* \"#utility.yul\":8593:8931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8937:9880   */\n    tag_64:\n        /* \"#utility.yul\":9032:9038   */\n      0x00\n        /* \"#utility.yul\":9040:9046   */\n      0x00\n        /* \"#utility.yul\":9048:9054   */\n      0x00\n        /* \"#utility.yul\":9056:9062   */\n      0x00\n        /* \"#utility.yul\":9105:9108   */\n      0x80\n        /* \"#utility.yul\":9093:9102   */\n      dup6\n        /* \"#utility.yul\":9084:9091   */\n      dup8\n        /* \"#utility.yul\":9080:9103   */\n      sub\n        /* \"#utility.yul\":9076:9109   */\n      slt\n        /* \"#utility.yul\":9073:9193   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":9112:9191   */\n      tag_388\n      tag_242\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":9073:9193   */\n    tag_387:\n        /* \"#utility.yul\":9232:9233   */\n      0x00\n        /* \"#utility.yul\":9257:9310   */\n      tag_389\n        /* \"#utility.yul\":9302:9309   */\n      dup8\n        /* \"#utility.yul\":9293:9299   */\n      dup3\n        /* \"#utility.yul\":9282:9291   */\n      dup9\n        /* \"#utility.yul\":9278:9300   */\n      add\n        /* \"#utility.yul\":9257:9310   */\n      tag_261\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9247:9310   */\n      swap5\n      pop\n        /* \"#utility.yul\":9203:9320   */\n      pop\n        /* \"#utility.yul\":9359:9361   */\n      0x20\n        /* \"#utility.yul\":9385:9438   */\n      tag_390\n        /* \"#utility.yul\":9430:9437   */\n      dup8\n        /* \"#utility.yul\":9421:9427   */\n      dup3\n        /* \"#utility.yul\":9410:9419   */\n      dup9\n        /* \"#utility.yul\":9406:9428   */\n      add\n        /* \"#utility.yul\":9385:9438   */\n      tag_261\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9375:9438   */\n      swap4\n      pop\n        /* \"#utility.yul\":9330:9448   */\n      pop\n        /* \"#utility.yul\":9487:9489   */\n      0x40\n        /* \"#utility.yul\":9513:9566   */\n      tag_391\n        /* \"#utility.yul\":9558:9565   */\n      dup8\n        /* \"#utility.yul\":9549:9555   */\n      dup3\n        /* \"#utility.yul\":9538:9547   */\n      dup9\n        /* \"#utility.yul\":9534:9556   */\n      add\n        /* \"#utility.yul\":9513:9566   */\n      tag_256\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9503:9566   */\n      swap3\n      pop\n        /* \"#utility.yul\":9458:9576   */\n      pop\n        /* \"#utility.yul\":9643:9645   */\n      0x60\n        /* \"#utility.yul\":9632:9641   */\n      dup6\n        /* \"#utility.yul\":9628:9646   */\n      add\n        /* \"#utility.yul\":9615:9647   */\n      calldataload\n        /* \"#utility.yul\":9674:9692   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9666:9672   */\n      dup2\n        /* \"#utility.yul\":9663:9693   */\n      gt\n        /* \"#utility.yul\":9660:9777   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":9696:9775   */\n      tag_393\n      tag_243\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":9660:9777   */\n    tag_392:\n        /* \"#utility.yul\":9801:9863   */\n      tag_394\n        /* \"#utility.yul\":9855:9862   */\n      dup8\n        /* \"#utility.yul\":9846:9852   */\n      dup3\n        /* \"#utility.yul\":9835:9844   */\n      dup9\n        /* \"#utility.yul\":9831:9853   */\n      add\n        /* \"#utility.yul\":9801:9863   */\n      tag_272\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":9791:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9586:9873   */\n      pop\n        /* \"#utility.yul\":8937:9880   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9886:10360   */\n    tag_72:\n        /* \"#utility.yul\":9954:9960   */\n      0x00\n        /* \"#utility.yul\":9962:9968   */\n      0x00\n        /* \"#utility.yul\":10011:10013   */\n      0x40\n        /* \"#utility.yul\":9999:10008   */\n      dup4\n        /* \"#utility.yul\":9990:9997   */\n      dup6\n        /* \"#utility.yul\":9986:10009   */\n      sub\n        /* \"#utility.yul\":9982:10014   */\n      slt\n        /* \"#utility.yul\":9979:10098   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":10017:10096   */\n      tag_397\n      tag_242\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9979:10098   */\n    tag_396:\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10162:10215   */\n      tag_398\n        /* \"#utility.yul\":10207:10214   */\n      dup6\n        /* \"#utility.yul\":10198:10204   */\n      dup3\n        /* \"#utility.yul\":10187:10196   */\n      dup7\n        /* \"#utility.yul\":10183:10205   */\n      add\n        /* \"#utility.yul\":10162:10215   */\n      tag_261\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":10152:10215   */\n      swap3\n      pop\n        /* \"#utility.yul\":10108:10225   */\n      pop\n        /* \"#utility.yul\":10264:10266   */\n      0x20\n        /* \"#utility.yul\":10290:10343   */\n      tag_399\n        /* \"#utility.yul\":10335:10342   */\n      dup6\n        /* \"#utility.yul\":10326:10332   */\n      dup3\n        /* \"#utility.yul\":10315:10324   */\n      dup7\n        /* \"#utility.yul\":10311:10333   */\n      add\n        /* \"#utility.yul\":10290:10343   */\n      tag_261\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":10280:10343   */\n      swap2\n      pop\n        /* \"#utility.yul\":10235:10353   */\n      pop\n        /* \"#utility.yul\":9886:10360   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10546   */\n    tag_273:\n        /* \"#utility.yul\":10414:10491   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10411:10412   */\n      0x00\n        /* \"#utility.yul\":10404:10492   */\n      mstore\n        /* \"#utility.yul\":10511:10515   */\n      0x22\n        /* \"#utility.yul\":10508:10509   */\n      0x04\n        /* \"#utility.yul\":10501:10516   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x24\n        /* \"#utility.yul\":10532:10533   */\n      0x00\n        /* \"#utility.yul\":10525:10540   */\n      revert\n        /* \"#utility.yul\":10552:10872   */\n    tag_82:\n        /* \"#utility.yul\":10596:10602   */\n      0x00\n        /* \"#utility.yul\":10633:10634   */\n      0x02\n        /* \"#utility.yul\":10627:10631   */\n      dup3\n        /* \"#utility.yul\":10623:10635   */\n      div\n        /* \"#utility.yul\":10613:10635   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10681   */\n      0x01\n        /* \"#utility.yul\":10674:10678   */\n      dup3\n        /* \"#utility.yul\":10670:10682   */\n      and\n        /* \"#utility.yul\":10701:10719   */\n      dup1\n        /* \"#utility.yul\":10691:10772   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":10757:10761   */\n      0x7f\n        /* \"#utility.yul\":10749:10755   */\n      dup3\n        /* \"#utility.yul\":10745:10762   */\n      and\n        /* \"#utility.yul\":10735:10762   */\n      swap2\n      pop\n        /* \"#utility.yul\":10691:10772   */\n    tag_402:\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10811:10817   */\n      dup3\n        /* \"#utility.yul\":10808:10822   */\n      lt\n        /* \"#utility.yul\":10788:10806   */\n      dup2\n        /* \"#utility.yul\":10785:10823   */\n      sub\n        /* \"#utility.yul\":10782:10866   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":10838:10856   */\n      tag_404\n      tag_273\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":10782:10866   */\n    tag_403:\n        /* \"#utility.yul\":10603:10872   */\n      pop\n        /* \"#utility.yul\":10552:10872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10878:11320   */\n    tag_105:\n        /* \"#utility.yul\":11027:11031   */\n      0x00\n        /* \"#utility.yul\":11065:11067   */\n      0x60\n        /* \"#utility.yul\":11054:11063   */\n      dup3\n        /* \"#utility.yul\":11050:11068   */\n      add\n        /* \"#utility.yul\":11042:11068   */\n      swap1\n      pop\n        /* \"#utility.yul\":11078:11149   */\n      tag_406\n        /* \"#utility.yul\":11146:11147   */\n      0x00\n        /* \"#utility.yul\":11135:11144   */\n      dup4\n        /* \"#utility.yul\":11131:11148   */\n      add\n        /* \"#utility.yul\":11122:11128   */\n      dup7\n        /* \"#utility.yul\":11078:11149   */\n      tag_259\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":11159:11231   */\n      tag_407\n        /* \"#utility.yul\":11227:11229   */\n      0x20\n        /* \"#utility.yul\":11216:11225   */\n      dup4\n        /* \"#utility.yul\":11212:11230   */\n      add\n        /* \"#utility.yul\":11203:11209   */\n      dup6\n        /* \"#utility.yul\":11159:11231   */\n      tag_262\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":11241:11313   */\n      tag_408\n        /* \"#utility.yul\":11309:11311   */\n      0x40\n        /* \"#utility.yul\":11298:11307   */\n      dup4\n        /* \"#utility.yul\":11294:11312   */\n      add\n        /* \"#utility.yul\":11285:11291   */\n      dup5\n        /* \"#utility.yul\":11241:11313   */\n      tag_259\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":10878:11320   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11326:11474   */\n    tag_274:\n        /* \"#utility.yul\":11428:11439   */\n      0x00\n        /* \"#utility.yul\":11465:11468   */\n      dup2\n        /* \"#utility.yul\":11450:11468   */\n      swap1\n      pop\n        /* \"#utility.yul\":11326:11474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11480:11870   */\n    tag_275:\n        /* \"#utility.yul\":11586:11589   */\n      0x00\n        /* \"#utility.yul\":11614:11653   */\n      tag_411\n        /* \"#utility.yul\":11647:11652   */\n      dup3\n        /* \"#utility.yul\":11614:11653   */\n      tag_249\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11669:11758   */\n      tag_412\n        /* \"#utility.yul\":11751:11757   */\n      dup2\n        /* \"#utility.yul\":11746:11749   */\n      dup6\n        /* \"#utility.yul\":11669:11758   */\n      tag_274\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11662:11758   */\n      swap4\n      pop\n        /* \"#utility.yul\":11767:11832   */\n      tag_413\n        /* \"#utility.yul\":11825:11831   */\n      dup2\n        /* \"#utility.yul\":11820:11823   */\n      dup6\n        /* \"#utility.yul\":11813:11817   */\n      0x20\n        /* \"#utility.yul\":11806:11811   */\n      dup7\n        /* \"#utility.yul\":11802:11818   */\n      add\n        /* \"#utility.yul\":11767:11832   */\n      tag_251\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11857:11863   */\n      dup1\n        /* \"#utility.yul\":11852:11855   */\n      dup5\n        /* \"#utility.yul\":11848:11864   */\n      add\n        /* \"#utility.yul\":11841:11864   */\n      swap2\n      pop\n        /* \"#utility.yul\":11590:11870   */\n      pop\n        /* \"#utility.yul\":11480:11870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11876:12311   */\n    tag_137:\n        /* \"#utility.yul\":12056:12059   */\n      0x00\n        /* \"#utility.yul\":12078:12173   */\n      tag_415\n        /* \"#utility.yul\":12169:12172   */\n      dup3\n        /* \"#utility.yul\":12160:12166   */\n      dup6\n        /* \"#utility.yul\":12078:12173   */\n      tag_275\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":12071:12173   */\n      swap2\n      pop\n        /* \"#utility.yul\":12190:12285   */\n      tag_416\n        /* \"#utility.yul\":12281:12284   */\n      dup3\n        /* \"#utility.yul\":12272:12278   */\n      dup5\n        /* \"#utility.yul\":12190:12285   */\n      tag_275\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":12183:12285   */\n      swap2\n      pop\n        /* \"#utility.yul\":12302:12305   */\n      dup2\n        /* \"#utility.yul\":12295:12305   */\n      swap1\n      pop\n        /* \"#utility.yul\":11876:12311   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12317:12415   */\n    tag_276:\n        /* \"#utility.yul\":12368:12374   */\n      0x00\n        /* \"#utility.yul\":12402:12407   */\n      dup2\n        /* \"#utility.yul\":12396:12408   */\n      mload\n        /* \"#utility.yul\":12386:12408   */\n      swap1\n      pop\n        /* \"#utility.yul\":12317:12415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12421:12589   */\n    tag_277:\n        /* \"#utility.yul\":12504:12515   */\n      0x00\n        /* \"#utility.yul\":12538:12544   */\n      dup3\n        /* \"#utility.yul\":12533:12536   */\n      dup3\n        /* \"#utility.yul\":12526:12545   */\n      mstore\n        /* \"#utility.yul\":12578:12582   */\n      0x20\n        /* \"#utility.yul\":12573:12576   */\n      dup3\n        /* \"#utility.yul\":12569:12583   */\n      add\n        /* \"#utility.yul\":12554:12583   */\n      swap1\n      pop\n        /* \"#utility.yul\":12421:12589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12595:12968   */\n    tag_278:\n        /* \"#utility.yul\":12681:12684   */\n      0x00\n        /* \"#utility.yul\":12709:12747   */\n      tag_420\n        /* \"#utility.yul\":12741:12746   */\n      dup3\n        /* \"#utility.yul\":12709:12747   */\n      tag_276\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":12763:12833   */\n      tag_421\n        /* \"#utility.yul\":12826:12832   */\n      dup2\n        /* \"#utility.yul\":12821:12824   */\n      dup6\n        /* \"#utility.yul\":12763:12833   */\n      tag_277\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12756:12833   */\n      swap4\n      pop\n        /* \"#utility.yul\":12842:12907   */\n      tag_422\n        /* \"#utility.yul\":12900:12906   */\n      dup2\n        /* \"#utility.yul\":12895:12898   */\n      dup6\n        /* \"#utility.yul\":12888:12892   */\n      0x20\n        /* \"#utility.yul\":12881:12886   */\n      dup7\n        /* \"#utility.yul\":12877:12893   */\n      add\n        /* \"#utility.yul\":12842:12907   */\n      tag_251\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12932:12961   */\n      tag_423\n        /* \"#utility.yul\":12954:12960   */\n      dup2\n        /* \"#utility.yul\":12932:12961   */\n      tag_252\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":12927:12930   */\n      dup5\n        /* \"#utility.yul\":12923:12962   */\n      add\n        /* \"#utility.yul\":12916:12962   */\n      swap2\n      pop\n        /* \"#utility.yul\":12685:12968   */\n      pop\n        /* \"#utility.yul\":12595:12968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12974:13614   */\n    tag_165:\n        /* \"#utility.yul\":13169:13173   */\n      0x00\n        /* \"#utility.yul\":13207:13210   */\n      0x80\n        /* \"#utility.yul\":13196:13205   */\n      dup3\n        /* \"#utility.yul\":13192:13211   */\n      add\n        /* \"#utility.yul\":13184:13211   */\n      swap1\n      pop\n        /* \"#utility.yul\":13221:13292   */\n      tag_425\n        /* \"#utility.yul\":13289:13290   */\n      0x00\n        /* \"#utility.yul\":13278:13287   */\n      dup4\n        /* \"#utility.yul\":13274:13291   */\n      add\n        /* \"#utility.yul\":13265:13271   */\n      dup8\n        /* \"#utility.yul\":13221:13292   */\n      tag_259\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13302:13374   */\n      tag_426\n        /* \"#utility.yul\":13370:13372   */\n      0x20\n        /* \"#utility.yul\":13359:13368   */\n      dup4\n        /* \"#utility.yul\":13355:13373   */\n      add\n        /* \"#utility.yul\":13346:13352   */\n      dup7\n        /* \"#utility.yul\":13302:13374   */\n      tag_259\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":13384:13456   */\n      tag_427\n        /* \"#utility.yul\":13452:13454   */\n      0x40\n        /* \"#utility.yul\":13441:13450   */\n      dup4\n        /* \"#utility.yul\":13437:13455   */\n      add\n        /* \"#utility.yul\":13428:13434   */\n      dup6\n        /* \"#utility.yul\":13384:13456   */\n      tag_262\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":13503:13512   */\n      dup2\n        /* \"#utility.yul\":13497:13501   */\n      dup2\n        /* \"#utility.yul\":13493:13513   */\n      sub\n        /* \"#utility.yul\":13488:13490   */\n      0x60\n        /* \"#utility.yul\":13477:13486   */\n      dup4\n        /* \"#utility.yul\":13473:13491   */\n      add\n        /* \"#utility.yul\":13466:13514   */\n      mstore\n        /* \"#utility.yul\":13531:13607   */\n      tag_428\n        /* \"#utility.yul\":13602:13606   */\n      dup2\n        /* \"#utility.yul\":13593:13599   */\n      dup5\n        /* \"#utility.yul\":13531:13607   */\n      tag_278\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13523:13607   */\n      swap1\n      pop\n        /* \"#utility.yul\":12974:13614   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13620:13761   */\n    tag_279:\n        /* \"#utility.yul\":13676:13681   */\n      0x00\n        /* \"#utility.yul\":13707:13713   */\n      dup2\n        /* \"#utility.yul\":13701:13714   */\n      mload\n        /* \"#utility.yul\":13692:13714   */\n      swap1\n      pop\n        /* \"#utility.yul\":13723:13755   */\n      tag_430\n        /* \"#utility.yul\":13749:13754   */\n      dup2\n        /* \"#utility.yul\":13723:13755   */\n      tag_245\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13620:13761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13767:14116   */\n    tag_168:\n        /* \"#utility.yul\":13836:13842   */\n      0x00\n        /* \"#utility.yul\":13885:13887   */\n      0x20\n        /* \"#utility.yul\":13873:13882   */\n      dup3\n        /* \"#utility.yul\":13864:13871   */\n      dup5\n        /* \"#utility.yul\":13860:13883   */\n      sub\n        /* \"#utility.yul\":13856:13888   */\n      slt\n        /* \"#utility.yul\":13853:13972   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":13891:13970   */\n      tag_433\n      tag_242\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13853:13972   */\n    tag_432:\n        /* \"#utility.yul\":14011:14012   */\n      0x00\n        /* \"#utility.yul\":14036:14099   */\n      tag_434\n        /* \"#utility.yul\":14091:14098   */\n      dup5\n        /* \"#utility.yul\":14082:14088   */\n      dup3\n        /* \"#utility.yul\":14071:14080   */\n      dup6\n        /* \"#utility.yul\":14067:14089   */\n      add\n        /* \"#utility.yul\":14036:14099   */\n      tag_279\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":14026:14099   */\n      swap2\n      pop\n        /* \"#utility.yul\":13982:14109   */\n      pop\n        /* \"#utility.yul\":13767:14116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14122:14302   */\n    tag_193:\n        /* \"#utility.yul\":14170:14247   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14167:14168   */\n      0x00\n        /* \"#utility.yul\":14160:14248   */\n      mstore\n        /* \"#utility.yul\":14267:14271   */\n      0x12\n        /* \"#utility.yul\":14264:14265   */\n      0x04\n        /* \"#utility.yul\":14257:14272   */\n      mstore\n        /* \"#utility.yul\":14291:14295   */\n      0x24\n        /* \"#utility.yul\":14288:14289   */\n      0x00\n        /* \"#utility.yul\":14281:14296   */\n      revert\n        /* \"#utility.yul\":14308:14640   */\n    tag_214:\n        /* \"#utility.yul\":14429:14433   */\n      0x00\n        /* \"#utility.yul\":14467:14469   */\n      0x40\n        /* \"#utility.yul\":14456:14465   */\n      dup3\n        /* \"#utility.yul\":14452:14470   */\n      add\n        /* \"#utility.yul\":14444:14470   */\n      swap1\n      pop\n        /* \"#utility.yul\":14480:14551   */\n      tag_437\n        /* \"#utility.yul\":14548:14549   */\n      0x00\n        /* \"#utility.yul\":14537:14546   */\n      dup4\n        /* \"#utility.yul\":14533:14550   */\n      add\n        /* \"#utility.yul\":14524:14530   */\n      dup6\n        /* \"#utility.yul\":14480:14551   */\n      tag_259\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":14561:14633   */\n      tag_438\n        /* \"#utility.yul\":14629:14631   */\n      0x20\n        /* \"#utility.yul\":14618:14627   */\n      dup4\n        /* \"#utility.yul\":14614:14632   */\n      add\n        /* \"#utility.yul\":14605:14611   */\n      dup5\n        /* \"#utility.yul\":14561:14633   */\n      tag_262\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":14308:14640   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122098c37016f29d3db6e88e9be41db7ce1beaee80eab3811c45283ab34ed21796cc64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_5299": {
									"entryPoint": null,
									"id": 5299,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:15",
										"nodeType": "YulBlock",
										"src": "0:5231:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:15",
													"nodeType": "YulBlock",
													"src": "66:40:15",
													"statements": [
														{
															"nativeSrc": "77:22:15",
															"nodeType": "YulAssignment",
															"src": "77:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:15"
																},
																"nativeSrc": "87:12:15",
																"nodeType": "YulFunctionCall",
																"src": "87:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:15",
														"nodeType": "YulTypedName",
														"src": "49:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:15",
														"nodeType": "YulTypedName",
														"src": "59:6:15",
														"type": ""
													}
												],
												"src": "7:99:15"
											},
											{
												"body": {
													"nativeSrc": "140:152:15",
													"nodeType": "YulBlock",
													"src": "140:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:15",
																		"nodeType": "YulLiteral",
																		"src": "157:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:15",
																		"nodeType": "YulLiteral",
																		"src": "160:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:15"
																},
																"nativeSrc": "150:88:15",
																"nodeType": "YulFunctionCall",
																"src": "150:88:15"
															},
															"nativeSrc": "150:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:15",
																		"nodeType": "YulLiteral",
																		"src": "254:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:15",
																		"nodeType": "YulLiteral",
																		"src": "257:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:15"
																},
																"nativeSrc": "247:15:15",
																"nodeType": "YulFunctionCall",
																"src": "247:15:15"
															},
															"nativeSrc": "247:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:15",
																		"nodeType": "YulLiteral",
																		"src": "278:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:15",
																		"nodeType": "YulLiteral",
																		"src": "281:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:15"
																},
																"nativeSrc": "271:15:15",
																"nodeType": "YulFunctionCall",
																"src": "271:15:15"
															},
															"nativeSrc": "271:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:15"
											},
											{
												"body": {
													"nativeSrc": "326:152:15",
													"nodeType": "YulBlock",
													"src": "326:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:15",
																		"nodeType": "YulLiteral",
																		"src": "343:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:15",
																		"nodeType": "YulLiteral",
																		"src": "346:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:15"
																},
																"nativeSrc": "336:88:15",
																"nodeType": "YulFunctionCall",
																"src": "336:88:15"
															},
															"nativeSrc": "336:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:15",
																		"nodeType": "YulLiteral",
																		"src": "440:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:15",
																		"nodeType": "YulLiteral",
																		"src": "443:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:15"
																},
																"nativeSrc": "433:15:15",
																"nodeType": "YulFunctionCall",
																"src": "433:15:15"
															},
															"nativeSrc": "433:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:15",
																		"nodeType": "YulLiteral",
																		"src": "464:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:15",
																		"nodeType": "YulLiteral",
																		"src": "467:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:15"
																},
																"nativeSrc": "457:15:15",
																"nodeType": "YulFunctionCall",
																"src": "457:15:15"
															},
															"nativeSrc": "457:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:15"
											},
											{
												"body": {
													"nativeSrc": "535:269:15",
													"nodeType": "YulBlock",
													"src": "535:269:15",
													"statements": [
														{
															"nativeSrc": "545:22:15",
															"nodeType": "YulAssignment",
															"src": "545:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:15",
																		"nodeType": "YulLiteral",
																		"src": "565:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:15"
																},
																"nativeSrc": "555:12:15",
																"nodeType": "YulFunctionCall",
																"src": "555:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:15"
																}
															]
														},
														{
															"nativeSrc": "576:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:15",
																		"nodeType": "YulLiteral",
																		"src": "612:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:15"
																},
																"nativeSrc": "602:12:15",
																"nodeType": "YulFunctionCall",
																"src": "602:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:15",
																	"nodeType": "YulTypedName",
																	"src": "580:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:15",
																"nodeType": "YulBlock",
																"src": "653:51:15",
																"statements": [
																	{
																		"nativeSrc": "667:27:15",
																		"nodeType": "YulAssignment",
																		"src": "667:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:15",
																					"nodeType": "YulLiteral",
																					"src": "689:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:15"
																			},
																			"nativeSrc": "677:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:15"
																},
																"nativeSrc": "626:26:15",
																"nodeType": "YulFunctionCall",
																"src": "626:26:15"
															},
															"nativeSrc": "623:81:15",
															"nodeType": "YulIf",
															"src": "623:81:15"
														},
														{
															"body": {
																"nativeSrc": "756:42:15",
																"nodeType": "YulBlock",
																"src": "756:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:15"
																			},
																			"nativeSrc": "770:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:15"
																		},
																		"nativeSrc": "770:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:15",
																				"nodeType": "YulLiteral",
																				"src": "751:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:15"
																		},
																		"nativeSrc": "740:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:15"
																},
																"nativeSrc": "717:38:15",
																"nodeType": "YulFunctionCall",
																"src": "717:38:15"
															},
															"nativeSrc": "714:84:15",
															"nodeType": "YulIf",
															"src": "714:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:15",
														"nodeType": "YulTypedName",
														"src": "519:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:15",
														"nodeType": "YulTypedName",
														"src": "528:6:15",
														"type": ""
													}
												],
												"src": "484:320:15"
											},
											{
												"body": {
													"nativeSrc": "864:87:15",
													"nodeType": "YulBlock",
													"src": "864:87:15",
													"statements": [
														{
															"nativeSrc": "874:11:15",
															"nodeType": "YulAssignment",
															"src": "874:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:15",
																"nodeType": "YulIdentifier",
																"src": "882:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:15",
																		"nodeType": "YulLiteral",
																		"src": "902:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:15"
																},
																"nativeSrc": "895:14:15",
																"nodeType": "YulFunctionCall",
																"src": "895:14:15"
															},
															"nativeSrc": "895:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:15"
														},
														{
															"nativeSrc": "918:26:15",
															"nodeType": "YulAssignment",
															"src": "918:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:15",
																		"nodeType": "YulLiteral",
																		"src": "936:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:15",
																		"nodeType": "YulLiteral",
																		"src": "939:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:15"
																},
																"nativeSrc": "926:18:15",
																"nodeType": "YulFunctionCall",
																"src": "926:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:15",
														"nodeType": "YulTypedName",
														"src": "851:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:15",
														"nodeType": "YulTypedName",
														"src": "859:4:15",
														"type": ""
													}
												],
												"src": "810:141:15"
											},
											{
												"body": {
													"nativeSrc": "1001:49:15",
													"nodeType": "YulBlock",
													"src": "1001:49:15",
													"statements": [
														{
															"nativeSrc": "1011:33:15",
															"nodeType": "YulAssignment",
															"src": "1011:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:15"
																		},
																		"nativeSrc": "1025:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:15"
																},
																"nativeSrc": "1021:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:15",
														"nodeType": "YulTypedName",
														"src": "984:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:15",
														"nodeType": "YulTypedName",
														"src": "994:6:15",
														"type": ""
													}
												],
												"src": "957:93:15"
											},
											{
												"body": {
													"nativeSrc": "1109:54:15",
													"nodeType": "YulBlock",
													"src": "1109:54:15",
													"statements": [
														{
															"nativeSrc": "1119:37:15",
															"nodeType": "YulAssignment",
															"src": "1119:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:15"
																},
																"nativeSrc": "1140:16:15",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:15",
														"nodeType": "YulTypedName",
														"src": "1084:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:15",
														"nodeType": "YulTypedName",
														"src": "1090:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:15",
														"nodeType": "YulTypedName",
														"src": "1100:8:15",
														"type": ""
													}
												],
												"src": "1056:107:15"
											},
											{
												"body": {
													"nativeSrc": "1245:317:15",
													"nodeType": "YulBlock",
													"src": "1245:317:15",
													"statements": [
														{
															"nativeSrc": "1255:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:15"
																},
																"nativeSrc": "1272:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:15",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:15",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:15"
																},
																"nativeSrc": "1311:97:15",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:15",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:15",
															"nodeType": "YulAssignment",
															"src": "1417:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:15"
																},
																"nativeSrc": "1429:39:15",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:15"
																}
															]
														},
														{
															"nativeSrc": "1477:30:15",
															"nodeType": "YulAssignment",
															"src": "1477:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:15"
																		},
																		"nativeSrc": "1497:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:15"
																},
																"nativeSrc": "1486:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:15"
																}
															]
														},
														{
															"nativeSrc": "1516:40:15",
															"nodeType": "YulAssignment",
															"src": "1516:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:15"
																		},
																		"nativeSrc": "1536:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:15"
																},
																"nativeSrc": "1526:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:15",
														"nodeType": "YulTypedName",
														"src": "1206:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:15",
														"nodeType": "YulTypedName",
														"src": "1213:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:15",
														"nodeType": "YulTypedName",
														"src": "1225:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:15",
														"nodeType": "YulTypedName",
														"src": "1238:6:15",
														"type": ""
													}
												],
												"src": "1169:393:15"
											},
											{
												"body": {
													"nativeSrc": "1613:32:15",
													"nodeType": "YulBlock",
													"src": "1613:32:15",
													"statements": [
														{
															"nativeSrc": "1623:16:15",
															"nodeType": "YulAssignment",
															"src": "1623:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:15",
																"nodeType": "YulIdentifier",
																"src": "1634:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:15",
														"nodeType": "YulTypedName",
														"src": "1595:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:15",
														"nodeType": "YulTypedName",
														"src": "1605:7:15",
														"type": ""
													}
												],
												"src": "1568:77:15"
											},
											{
												"body": {
													"nativeSrc": "1683:28:15",
													"nodeType": "YulBlock",
													"src": "1683:28:15",
													"statements": [
														{
															"nativeSrc": "1693:12:15",
															"nodeType": "YulAssignment",
															"src": "1693:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:15",
																"nodeType": "YulIdentifier",
																"src": "1700:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:15",
														"nodeType": "YulTypedName",
														"src": "1669:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:15",
														"nodeType": "YulTypedName",
														"src": "1679:3:15",
														"type": ""
													}
												],
												"src": "1651:60:15"
											},
											{
												"body": {
													"nativeSrc": "1777:82:15",
													"nodeType": "YulBlock",
													"src": "1777:82:15",
													"statements": [
														{
															"nativeSrc": "1787:66:15",
															"nodeType": "YulAssignment",
															"src": "1787:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:15"
																				},
																				"nativeSrc": "1827:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:15"
																		},
																		"nativeSrc": "1818:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:15"
																},
																"nativeSrc": "1800:53:15",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:15",
														"nodeType": "YulTypedName",
														"src": "1757:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:15",
														"nodeType": "YulTypedName",
														"src": "1767:9:15",
														"type": ""
													}
												],
												"src": "1717:142:15"
											},
											{
												"body": {
													"nativeSrc": "1912:28:15",
													"nodeType": "YulBlock",
													"src": "1912:28:15",
													"statements": [
														{
															"nativeSrc": "1922:12:15",
															"nodeType": "YulAssignment",
															"src": "1922:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:15",
																"nodeType": "YulIdentifier",
																"src": "1929:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:15",
														"nodeType": "YulTypedName",
														"src": "1898:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:15",
														"nodeType": "YulTypedName",
														"src": "1908:3:15",
														"type": ""
													}
												],
												"src": "1865:75:15"
											},
											{
												"body": {
													"nativeSrc": "2022:193:15",
													"nodeType": "YulBlock",
													"src": "2022:193:15",
													"statements": [
														{
															"nativeSrc": "2032:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:15"
																},
																"nativeSrc": "2056:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:15",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:15"
																				},
																				"nativeSrc": "2145:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:15"
																				},
																				"nativeSrc": "2166:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:15"
																		},
																		"nativeSrc": "2117:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:15"
																},
																"nativeSrc": "2104:105:15",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:15"
															},
															"nativeSrc": "2104:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:15",
														"nodeType": "YulTypedName",
														"src": "1999:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:15",
														"nodeType": "YulTypedName",
														"src": "2005:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:15",
														"nodeType": "YulTypedName",
														"src": "2013:7:15",
														"type": ""
													}
												],
												"src": "1946:269:15"
											},
											{
												"body": {
													"nativeSrc": "2270:24:15",
													"nodeType": "YulBlock",
													"src": "2270:24:15",
													"statements": [
														{
															"nativeSrc": "2280:8:15",
															"nodeType": "YulAssignment",
															"src": "2280:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:15",
																"nodeType": "YulLiteral",
																"src": "2287:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:15",
														"nodeType": "YulTypedName",
														"src": "2266:3:15",
														"type": ""
													}
												],
												"src": "2221:73:15"
											},
											{
												"body": {
													"nativeSrc": "2353:136:15",
													"nodeType": "YulBlock",
													"src": "2353:136:15",
													"statements": [
														{
															"nativeSrc": "2363:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:15"
																},
																"nativeSrc": "2377:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:15"
																},
																"nativeSrc": "2418:65:15",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:15"
															},
															"nativeSrc": "2418:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:15",
														"nodeType": "YulTypedName",
														"src": "2339:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:15",
														"nodeType": "YulTypedName",
														"src": "2345:6:15",
														"type": ""
													}
												],
												"src": "2300:189:15"
											},
											{
												"body": {
													"nativeSrc": "2545:136:15",
													"nodeType": "YulBlock",
													"src": "2545:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:15",
																"nodeType": "YulBlock",
																"src": "2612:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:15"
																			},
																			"nativeSrc": "2626:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:15"
																		},
																		"nativeSrc": "2626:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:15"
																},
																"nativeSrc": "2562:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:15"
															},
															"nativeSrc": "2555:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:15",
																"nodeType": "YulBlock",
																"src": "2577:26:15",
																"statements": [
																	{
																		"nativeSrc": "2579:22:15",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:15"
																			},
																			"nativeSrc": "2588:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:15",
																"nodeType": "YulBlock",
																"src": "2559:2:15",
																"statements": []
															},
															"src": "2555:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:15",
														"nodeType": "YulTypedName",
														"src": "2533:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:15",
														"nodeType": "YulTypedName",
														"src": "2540:3:15",
														"type": ""
													}
												],
												"src": "2495:186:15"
											},
											{
												"body": {
													"nativeSrc": "2766:464:15",
													"nodeType": "YulBlock",
													"src": "2766:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:15",
																"nodeType": "YulBlock",
																"src": "2792:431:15",
																"statements": [
																	{
																		"nativeSrc": "2806:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:15"
																			},
																			"nativeSrc": "2822:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:15",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:15"
																					},
																					"nativeSrc": "2906:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:15"
																			},
																			"nativeSrc": "2892:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:15",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:15",
																			"nodeType": "YulBlock",
																			"src": "3093:27:15",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:15",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:15",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:15"
																			},
																			"nativeSrc": "3074:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:15"
																		},
																		"nativeSrc": "3071:49:15",
																		"nodeType": "YulIf",
																		"src": "3071:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:15"
																							},
																							"nativeSrc": "3189:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:15"
																					},
																					"nativeSrc": "3175:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:15"
																			},
																			"nativeSrc": "3133:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:15"
																		},
																		"nativeSrc": "3133:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:15"
																},
																"nativeSrc": "2780:11:15",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:15"
															},
															"nativeSrc": "2777:446:15",
															"nodeType": "YulIf",
															"src": "2777:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:15",
														"nodeType": "YulTypedName",
														"src": "2742:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:15",
														"nodeType": "YulTypedName",
														"src": "2749:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:15",
														"nodeType": "YulTypedName",
														"src": "2754:10:15",
														"type": ""
													}
												],
												"src": "2687:543:15"
											},
											{
												"body": {
													"nativeSrc": "3299:54:15",
													"nodeType": "YulBlock",
													"src": "3299:54:15",
													"statements": [
														{
															"nativeSrc": "3309:37:15",
															"nodeType": "YulAssignment",
															"src": "3309:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:15"
																},
																"nativeSrc": "3330:16:15",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:15",
														"nodeType": "YulTypedName",
														"src": "3274:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:15",
														"nodeType": "YulTypedName",
														"src": "3280:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:15",
														"nodeType": "YulTypedName",
														"src": "3290:8:15",
														"type": ""
													}
												],
												"src": "3236:117:15"
											},
											{
												"body": {
													"nativeSrc": "3410:118:15",
													"nodeType": "YulBlock",
													"src": "3410:118:15",
													"statements": [
														{
															"nativeSrc": "3420:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:15"
																				},
																				"nativeSrc": "3465:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:15"
																				},
																				"nativeSrc": "3480:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:15"
																		},
																		"nativeSrc": "3436:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:15"
																},
																"nativeSrc": "3432:56:15",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:15",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:15",
															"nodeType": "YulAssignment",
															"src": "3497:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:15"
																},
																"nativeSrc": "3507:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:15",
														"nodeType": "YulTypedName",
														"src": "3387:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:15",
														"nodeType": "YulTypedName",
														"src": "3393:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:15",
														"nodeType": "YulTypedName",
														"src": "3403:6:15",
														"type": ""
													}
												],
												"src": "3359:169:15"
											},
											{
												"body": {
													"nativeSrc": "3614:214:15",
													"nodeType": "YulBlock",
													"src": "3614:214:15",
													"statements": [
														{
															"nativeSrc": "3747:37:15",
															"nodeType": "YulAssignment",
															"src": "3747:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:15"
																},
																"nativeSrc": "3755:29:15",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:15"
																}
															]
														},
														{
															"nativeSrc": "3793:29:15",
															"nodeType": "YulAssignment",
															"src": "3793:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:15"
																		},
																		"nativeSrc": "3810:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:15"
																},
																"nativeSrc": "3801:21:15",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:15",
														"nodeType": "YulTypedName",
														"src": "3595:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:15",
														"nodeType": "YulTypedName",
														"src": "3601:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:15",
														"nodeType": "YulTypedName",
														"src": "3609:4:15",
														"type": ""
													}
												],
												"src": "3533:295:15"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:15",
													"nodeType": "YulBlock",
													"src": "3925:1303:15",
													"statements": [
														{
															"nativeSrc": "3936:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:15"
																},
																"nativeSrc": "3950:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:15",
																"nodeType": "YulBlock",
																"src": "4072:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:15"
																			},
																			"nativeSrc": "4074:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:15"
																		},
																		"nativeSrc": "4074:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:15",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:15"
																},
																"nativeSrc": "4041:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:15"
															},
															"nativeSrc": "4038:56:15",
															"nodeType": "YulIf",
															"src": "4038:56:15"
														},
														{
															"nativeSrc": "4104:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:15"
																		},
																		"nativeSrc": "4144:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:15"
																},
																"nativeSrc": "4118:38:15",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:15"
																},
																"nativeSrc": "4203:67:15",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:15"
															},
															"nativeSrc": "4203:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:15"
														},
														{
															"nativeSrc": "4280:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:15",
																"nodeType": "YulLiteral",
																"src": "4297:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:15",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:15",
															"nodeType": "YulAssignment",
															"src": "4308:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:15",
																"nodeType": "YulLiteral",
																"src": "4321:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:15",
																		"nodeType": "YulBlock",
																		"src": "4372:611:15",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:15",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:15"
																							},
																							"nativeSrc": "4413:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:15"
																					},
																					"nativeSrc": "4401:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:15",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:15"
																					},
																					"nativeSrc": "4451:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:15",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:15",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:15",
																					"nodeType": "YulBlock",
																					"src": "4569:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:15"
																												},
																												"nativeSrc": "4608:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:15"
																										},
																										"nativeSrc": "4602:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:15"
																								},
																								"nativeSrc": "4587:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:15"
																							},
																							"nativeSrc": "4587:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:15"
																						},
																						{
																							"nativeSrc": "4646:24:15",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:15",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:15"
																								},
																								"nativeSrc": "4656:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:15",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:15",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:15"
																								},
																								"nativeSrc": "4700:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:15"
																					},
																					"nativeSrc": "4532:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:15"
																				},
																				"nativeSrc": "4524:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:15",
																					"nodeType": "YulBlock",
																					"src": "4547:21:15",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:15",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:15",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:15"
																								},
																								"nativeSrc": "4554:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:15",
																					"nodeType": "YulBlock",
																					"src": "4528:3:15",
																					"statements": []
																				},
																				"src": "4524:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:15",
																					"nodeType": "YulBlock",
																					"src": "4768:156:15",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:15"
																										},
																										"nativeSrc": "4809:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:15"
																								},
																								"nativeSrc": "4803:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:15",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:15",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:15"
																												},
																												"nativeSrc": "4891:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:15"
																										},
																										"nativeSrc": "4861:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:15"
																								},
																								"nativeSrc": "4846:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:15"
																							},
																							"nativeSrc": "4846:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:15"
																					},
																					"nativeSrc": "4748:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:15"
																				},
																				"nativeSrc": "4745:179:15",
																				"nodeType": "YulIf",
																				"src": "4745:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:15",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:15"
																									},
																									"nativeSrc": "4954:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:15",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:15"
																							},
																							"nativeSrc": "4950:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:15"
																					},
																					"nativeSrc": "4937:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:15"
																				},
																				"nativeSrc": "4937:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:15"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:15",
																	"nodeType": "YulCase",
																	"src": "4365:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:15",
																		"nodeType": "YulBlock",
																		"src": "5000:222:15",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:15",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:15",
																					"nodeType": "YulBlock",
																					"src": "5051:67:15",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:15",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:15"
																										},
																										"nativeSrc": "5084:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:15"
																								},
																								"nativeSrc": "5078:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:15"
																				},
																				"nativeSrc": "5041:77:15",
																				"nodeType": "YulIf",
																				"src": "5041:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:15"
																							},
																							"nativeSrc": "5144:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:15"
																					},
																					"nativeSrc": "5131:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:15"
																				},
																				"nativeSrc": "5131:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:15"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:15",
																	"nodeType": "YulCase",
																	"src": "4992:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:15"
																},
																"nativeSrc": "4342:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:15"
															},
															"nativeSrc": "4335:887:15",
															"nodeType": "YulSwitch",
															"src": "4335:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:15",
														"nodeType": "YulTypedName",
														"src": "3914:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:15",
														"nodeType": "YulTypedName",
														"src": "3920:3:15",
														"type": ""
													}
												],
												"src": "3833:1395:15"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b0000000000000000000000000000000000000000000000000000000000815250815f908161008a91906102df565b50806001908161009a91906102df565b5050506103ae565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061011d57607f821691505b6020821081036101305761012f6100d9565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610157565b61019c8683610157565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101e06101db6101d6846101b4565b6101bd565b6101b4565b9050919050565b5f819050919050565b6101f9836101c6565b61020d610205826101e7565b848454610163565b825550505050565b5f5f905090565b610224610215565b61022f8184846101f0565b505050565b5b81811015610252576102475f8261021c565b600181019050610235565b5050565b601f8211156102975761026881610136565b61027184610148565b81016020851015610280578190505b61029461028c85610148565b830182610234565b50505b505050565b5f82821c905092915050565b5f6102b75f198460080261029c565b1980831691505092915050565b5f6102cf83836102a8565b9150826002028217905092915050565b6102e8826100a2565b67ffffffffffffffff811115610301576103006100ac565b5b61030b8254610106565b610316828285610256565b5f60209050601f831160018114610347575f8415610335578287015190505b61033f85826102c4565b8655506103a6565b601f19841661035586610136565b5f5b8281101561037c57848901518255600182019150602085019450602081019050610357565b868310156103995784890151610395601f8916826102a8565b8355505b6001600288020188555050505b505050505050565b611bc6806103bb5f395ff3fe608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c80636352211e1161008a578063a22cb46511610064578063a22cb46514610221578063b88d4fde1461023d578063c87b56dd14610259578063e985e9c514610289576100cd565b80636352211e146101a357806370a08231146101d357806395d89b4114610203576100cd565b806301ffc9a7146100d157806306fdde0314610101578063081812fc1461011f578063095ea7b31461014f57806323b872dd1461016b57806342842e0e14610187575b5f5ffd5b6100eb60048036038101906100e69190611471565b6102b9565b6040516100f891906114b6565b60405180910390f35b61010961039a565b604051610116919061153f565b60405180910390f35b61013960048036038101906101349190611592565b610429565b60405161014691906115fc565b60405180910390f35b6101696004803603810190610164919061163f565b610444565b005b6101856004803603810190610180919061167d565b61045a565b005b6101a1600480360381019061019c919061167d565b610559565b005b6101bd60048036038101906101b89190611592565b610578565b6040516101ca91906115fc565b60405180910390f35b6101ed60048036038101906101e891906116cd565b610589565b6040516101fa9190611707565b60405180910390f35b61020b61063f565b604051610218919061153f565b60405180910390f35b61023b6004803603810190610236919061174a565b6106cf565b005b610257600480360381019061025291906118b4565b6106e5565b005b610273600480360381019061026e9190611592565b61070a565b604051610280919061153f565b60405180910390f35b6102a3600480360381019061029e9190611934565b610770565b6040516102b091906114b6565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103935750610392826107fe565b5b9050919050565b60605f80546103a89061199f565b80601f01602080910402602001604051908101604052809291908181526020018280546103d49061199f565b801561041f5780601f106103f65761010080835404028352916020019161041f565b820191905f5260205f20905b81548152906001019060200180831161040257829003601f168201915b5050505050905090565b5f61043382610867565b5061043d826108ed565b9050919050565b6104568282610451610926565b61092d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104ca575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104c191906115fc565b60405180910390fd5b5f6104dd83836104d8610926565b61093f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610553578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161054a939291906119cf565b60405180910390fd5b50505050565b61057383838360405180602001604052805f8152506106e5565b505050565b5f61058282610867565b9050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105fa575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105f191906115fc565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461064e9061199f565b80601f016020809104026020016040519081016040528092919081815260200182805461067a9061199f565b80156106c55780601f1061069c576101008083540402835291602001916106c5565b820191905f5260205f20905b8154815290600101906020018083116106a857829003601f168201915b5050505050905090565b6106e16106da610926565b8383610b4a565b5050565b6106f084848461045a565b6107046106fb610926565b85858585610cb3565b50505050565b606061071582610867565b505f61071f610e5f565b90505f81511161073d5760405180602001604052805f815250610768565b8061074784610e75565b604051602001610758929190611a3e565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f5f61087283610f3f565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108e457826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016108db9190611707565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b61093a8383836001610f78565b505050565b5f5f61094a84610f3f565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461098b5761098a818486611137565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a16576109ca5f855f5f610f78565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610a9557600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bba57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610bb191906115fc565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ca691906114b6565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115610e58578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401610d119493929190611ab3565b6020604051808303815f875af1925050508015610d4c57506040513d601f19601f82011682018060405250810190610d499190611b11565b60015b610dcd573d805f8114610d7a576040519150601f19603f3d011682016040523d82523d5f602084013e610d7f565b606091505b505f815103610dc557836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610dbc91906115fc565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610e5657836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610e4d91906115fc565b60405180910390fd5b505b5050505050565b606060405180602001604052805f815250905090565b60605f6001610e83846111fa565b0190505f8167ffffffffffffffff811115610ea157610ea0611790565b5b6040519080825280601f01601f191660200182016040528015610ed35781602001600182028036833780820191505090505b5090505f82602001820190505b600115610f34578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610f2957610f28611b3c565b5b0494505f8503610ee0575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080610fb057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156110e2575f610fbf84610867565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561102957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561103c575061103a8184610770565b155b1561107e57826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161107591906115fc565b60405180910390fd5b81156110e057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61114283838361134b565b6111f5575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111b657806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016111ad9190611707565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016111ec929190611b69565b60405180910390fd5b505050565b5f5f5f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611256577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161124c5761124b611b3c565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611293576d04ee2d6d415b85acef8100000000838161128957611288611b3c565b5b0492506020810190505b662386f26fc1000083106112c257662386f26fc1000083816112b8576112b7611b3c565b5b0492506010810190505b6305f5e10083106112eb576305f5e10083816112e1576112e0611b3c565b5b0492506008810190505b612710831061131057612710838161130657611305611b3c565b5b0492506004810190505b60648310611333576064838161132957611328611b3c565b5b0492506002810190505b600a8310611342576001810190505b80915050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561140257508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806113c357506113c28484610770565b5b8061140157508273ffffffffffffffffffffffffffffffffffffffff166113e9836108ed565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114508161141c565b811461145a575f5ffd5b50565b5f8135905061146b81611447565b92915050565b5f6020828403121561148657611485611414565b5b5f6114938482850161145d565b91505092915050565b5f8115159050919050565b6114b08161149c565b82525050565b5f6020820190506114c95f8301846114a7565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611511826114cf565b61151b81856114d9565b935061152b8185602086016114e9565b611534816114f7565b840191505092915050565b5f6020820190508181035f8301526115578184611507565b905092915050565b5f819050919050565b6115718161155f565b811461157b575f5ffd5b50565b5f8135905061158c81611568565b92915050565b5f602082840312156115a7576115a6611414565b5b5f6115b48482850161157e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115e6826115bd565b9050919050565b6115f6816115dc565b82525050565b5f60208201905061160f5f8301846115ed565b92915050565b61161e816115dc565b8114611628575f5ffd5b50565b5f8135905061163981611615565b92915050565b5f5f6040838503121561165557611654611414565b5b5f6116628582860161162b565b92505060206116738582860161157e565b9150509250929050565b5f5f5f6060848603121561169457611693611414565b5b5f6116a18682870161162b565b93505060206116b28682870161162b565b92505060406116c38682870161157e565b9150509250925092565b5f602082840312156116e2576116e1611414565b5b5f6116ef8482850161162b565b91505092915050565b6117018161155f565b82525050565b5f60208201905061171a5f8301846116f8565b92915050565b6117298161149c565b8114611733575f5ffd5b50565b5f8135905061174481611720565b92915050565b5f5f604083850312156117605761175f611414565b5b5f61176d8582860161162b565b925050602061177e85828601611736565b9150509250929050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6117c6826114f7565b810181811067ffffffffffffffff821117156117e5576117e4611790565b5b80604052505050565b5f6117f761140b565b905061180382826117bd565b919050565b5f67ffffffffffffffff82111561182257611821611790565b5b61182b826114f7565b9050602081019050919050565b828183375f83830152505050565b5f61185861185384611808565b6117ee565b9050828152602081018484840111156118745761187361178c565b5b61187f848285611838565b509392505050565b5f82601f83011261189b5761189a611788565b5b81356118ab848260208601611846565b91505092915050565b5f5f5f5f608085870312156118cc576118cb611414565b5b5f6118d98782880161162b565b94505060206118ea8782880161162b565b93505060406118fb8782880161157e565b925050606085013567ffffffffffffffff81111561191c5761191b611418565b5b61192887828801611887565b91505092959194509250565b5f5f6040838503121561194a57611949611414565b5b5f6119578582860161162b565b92505060206119688582860161162b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119b657607f821691505b6020821081036119c9576119c8611972565b5b50919050565b5f6060820190506119e25f8301866115ed565b6119ef60208301856116f8565b6119fc60408301846115ed565b949350505050565b5f81905092915050565b5f611a18826114cf565b611a228185611a04565b9350611a328185602086016114e9565b80840191505092915050565b5f611a498285611a0e565b9150611a558284611a0e565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611a8582611a61565b611a8f8185611a6b565b9350611a9f8185602086016114e9565b611aa8816114f7565b840191505092915050565b5f608082019050611ac65f8301876115ed565b611ad360208301866115ed565b611ae060408301856116f8565b8181036060830152611af28184611a7b565b905095945050505050565b5f81519050611b0b81611447565b92915050565b5f60208284031215611b2657611b25611414565b5b5f611b3384828501611afd565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f604082019050611b7c5f8301856115ed565b611b8960208301846116f8565b939250505056fea264697066735822122098c37016f29d3db6e88e9be41db7ce1beaee80eab3811c45283ab34ed21796cc64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x2DF JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x2DF JUMP JUMPDEST POP POP POP PUSH2 0x3AE JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x130 JUMPI PUSH2 0x12F PUSH2 0xD9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x192 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x157 JUMP JUMPDEST PUSH2 0x19C DUP7 DUP4 PUSH2 0x157 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0 PUSH2 0x1DB PUSH2 0x1D6 DUP5 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F9 DUP4 PUSH2 0x1C6 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x205 DUP3 PUSH2 0x1E7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x163 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x215 JUMP JUMPDEST PUSH2 0x22F DUP2 DUP5 DUP5 PUSH2 0x1F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x252 JUMPI PUSH2 0x247 PUSH0 DUP3 PUSH2 0x21C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x235 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x297 JUMPI PUSH2 0x268 DUP2 PUSH2 0x136 JUMP JUMPDEST PUSH2 0x271 DUP5 PUSH2 0x148 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x280 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x294 PUSH2 0x28C DUP6 PUSH2 0x148 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x234 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x29C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CF DUP4 DUP4 PUSH2 0x2A8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E8 DUP3 PUSH2 0xA2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x301 JUMPI PUSH2 0x300 PUSH2 0xAC JUMP JUMPDEST JUMPDEST PUSH2 0x30B DUP3 SLOAD PUSH2 0x106 JUMP JUMPDEST PUSH2 0x316 DUP3 DUP3 DUP6 PUSH2 0x256 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x347 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x335 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x33F DUP6 DUP3 PUSH2 0x2C4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x355 DUP7 PUSH2 0x136 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x357 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x399 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x395 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2A8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1BC6 DUP1 PUSH2 0x3BB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x289 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x383 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0x7FE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x199F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x199F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x402 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0x867 JUMP JUMPDEST POP PUSH2 0x43D DUP3 PUSH2 0x8ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x456 DUP3 DUP3 PUSH2 0x451 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4CA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4DD DUP4 DUP4 PUSH2 0x4D8 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x553 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x573 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x6E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x582 DUP3 PUSH2 0x867 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x64E SWAP1 PUSH2 0x199F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67A SWAP1 PUSH2 0x199F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x69C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6E1 PUSH2 0x6DA PUSH2 0x926 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xB4A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6F0 DUP5 DUP5 DUP5 PUSH2 0x45A JUMP JUMPDEST PUSH2 0x704 PUSH2 0x6FB PUSH2 0x926 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0xCB3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x715 DUP3 PUSH2 0x867 JUMP JUMPDEST POP PUSH0 PUSH2 0x71F PUSH2 0xE5F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x768 JUMP JUMPDEST DUP1 PUSH2 0x747 DUP5 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x758 SWAP3 SWAP2 SWAP1 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x872 DUP4 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E4 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x93A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x94A DUP5 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98B JUMPI PUSH2 0x98A DUP2 DUP5 DUP7 PUSH2 0x1137 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA16 JUMPI PUSH2 0x9CA PUSH0 DUP6 PUSH0 PUSH0 PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA95 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBBA JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB1 SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xE58 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD11 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD4C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDCD JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xDC5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBC SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xE56 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4D SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0xE83 DUP5 PUSH2 0x11FA JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0x1790 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xED3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xF34 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xF29 JUMPI PUSH2 0xF28 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0xEE0 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xFB0 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x10E2 JUMPI PUSH0 PUSH2 0xFBF DUP5 PUSH2 0x867 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1029 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x103C JUMPI POP PUSH2 0x103A DUP2 DUP5 PUSH2 0x770 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x107E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1075 SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x10E0 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1142 DUP4 DUP4 DUP4 PUSH2 0x134B JUMP JUMPDEST PUSH2 0x11F5 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B6 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AD SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EC SWAP3 SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1256 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x124C JUMPI PUSH2 0x124B PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1293 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1289 JUMPI PUSH2 0x1288 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x12C2 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x12B8 JUMPI PUSH2 0x12B7 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x12EB JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x12E1 JUMPI PUSH2 0x12E0 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1310 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1306 JUMPI PUSH2 0x1305 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1333 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1329 JUMPI PUSH2 0x1328 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1342 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1402 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x13C3 JUMPI POP PUSH2 0x13C2 DUP5 DUP5 PUSH2 0x770 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1401 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13E9 DUP4 PUSH2 0x8ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1450 DUP2 PUSH2 0x141C JUMP JUMPDEST DUP2 EQ PUSH2 0x145A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146B DUP2 PUSH2 0x1447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1485 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1493 DUP5 DUP3 DUP6 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B0 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14C9 PUSH0 DUP4 ADD DUP5 PUSH2 0x14A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1511 DUP3 PUSH2 0x14CF JUMP JUMPDEST PUSH2 0x151B DUP2 DUP6 PUSH2 0x14D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x152B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST PUSH2 0x1534 DUP2 PUSH2 0x14F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1557 DUP2 DUP5 PUSH2 0x1507 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1571 DUP2 PUSH2 0x155F JUMP JUMPDEST DUP2 EQ PUSH2 0x157B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x158C DUP2 PUSH2 0x1568 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B4 DUP5 DUP3 DUP6 ADD PUSH2 0x157E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15E6 DUP3 PUSH2 0x15BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F6 DUP2 PUSH2 0x15DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x160F PUSH0 DUP4 ADD DUP5 PUSH2 0x15ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x161E DUP2 PUSH2 0x15DC JUMP JUMPDEST DUP2 EQ PUSH2 0x1628 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x1615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1662 DUP6 DUP3 DUP7 ADD PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1673 DUP6 DUP3 DUP7 ADD PUSH2 0x157E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1694 JUMPI PUSH2 0x1693 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16A1 DUP7 DUP3 DUP8 ADD PUSH2 0x162B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16B2 DUP7 DUP3 DUP8 ADD PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16C3 DUP7 DUP3 DUP8 ADD PUSH2 0x157E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E2 JUMPI PUSH2 0x16E1 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16EF DUP5 DUP3 DUP6 ADD PUSH2 0x162B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1701 DUP2 PUSH2 0x155F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171A PUSH0 DUP4 ADD DUP5 PUSH2 0x16F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1729 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP2 EQ PUSH2 0x1733 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1744 DUP2 PUSH2 0x1720 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1760 JUMPI PUSH2 0x175F PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x176D DUP6 DUP3 DUP7 ADD PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x177E DUP6 DUP3 DUP7 ADD PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17C6 DUP3 PUSH2 0x14F7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17E5 JUMPI PUSH2 0x17E4 PUSH2 0x1790 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17F7 PUSH2 0x140B JUMP JUMPDEST SWAP1 POP PUSH2 0x1803 DUP3 DUP3 PUSH2 0x17BD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1822 JUMPI PUSH2 0x1821 PUSH2 0x1790 JUMP JUMPDEST JUMPDEST PUSH2 0x182B DUP3 PUSH2 0x14F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1858 PUSH2 0x1853 DUP5 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1874 JUMPI PUSH2 0x1873 PUSH2 0x178C JUMP JUMPDEST JUMPDEST PUSH2 0x187F DUP5 DUP3 DUP6 PUSH2 0x1838 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x1788 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18AB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1846 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18CC JUMPI PUSH2 0x18CB PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D9 DUP8 DUP3 DUP9 ADD PUSH2 0x162B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x18EA DUP8 DUP3 DUP9 ADD PUSH2 0x162B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18FB DUP8 DUP3 DUP9 ADD PUSH2 0x157E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x191C JUMPI PUSH2 0x191B PUSH2 0x1418 JUMP JUMPDEST JUMPDEST PUSH2 0x1928 DUP8 DUP3 DUP9 ADD PUSH2 0x1887 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x194A JUMPI PUSH2 0x1949 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1957 DUP6 DUP3 DUP7 ADD PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1968 DUP6 DUP3 DUP7 ADD PUSH2 0x162B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19C9 JUMPI PUSH2 0x19C8 PUSH2 0x1972 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19E2 PUSH0 DUP4 ADD DUP7 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x19EF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0x19FC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15ED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A18 DUP3 PUSH2 0x14CF JUMP JUMPDEST PUSH2 0x1A22 DUP2 DUP6 PUSH2 0x1A04 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A32 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A49 DUP3 DUP6 PUSH2 0x1A0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A55 DUP3 DUP5 PUSH2 0x1A0E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A85 DUP3 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x1A8F DUP2 DUP6 PUSH2 0x1A6B JUMP JUMPDEST SWAP4 POP PUSH2 0x1A9F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST PUSH2 0x1AA8 DUP2 PUSH2 0x14F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1AC6 PUSH0 DUP4 ADD DUP8 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x1AD3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x1AE0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16F8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1AF2 DUP2 DUP5 PUSH2 0x1A7B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B0B DUP2 PUSH2 0x1447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B26 JUMPI PUSH2 0x1B25 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B33 DUP5 DUP3 DUP6 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B7C PUSH0 DUP4 ADD DUP6 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x1B89 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xC3 PUSH17 0x16F29D3DB6E88E9BE41DB7CE1BEAEE80EA 0xB3 DUP2 SHR GASLIMIT 0x28 GASPRICE 0xB3 0x4E 0xD2 OR SWAP7 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "117:76:14:-:0;;;150:41;;;;;;;;;;1380:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;117:76:14;;7:99:15;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;117:76:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1026": {
									"entryPoint": 3960,
									"id": 1026,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_960": {
									"entryPoint": 2349,
									"id": 960,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_341": {
									"entryPoint": 3679,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_600": {
									"entryPoint": 4407,
									"id": 600,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_getApproved_527": {
									"entryPoint": 2285,
									"id": 527,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_563": {
									"entryPoint": 4939,
									"id": 563,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSender_1345": {
									"entryPoint": 2342,
									"id": 1345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_514": {
									"entryPoint": 3903,
									"id": 514,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1092": {
									"entryPoint": 2151,
									"id": 1092,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1063": {
									"entryPoint": 2890,
									"id": 1063,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_706": {
									"entryPoint": 2367,
									"id": 706,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_357": {
									"entryPoint": 1092,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_265": {
									"entryPoint": 1417,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkOnERC721Received_1332": {
									"entryPoint": 3251,
									"id": 1332,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@getApproved_374": {
									"entryPoint": 1065,
									"id": 374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_407": {
									"entryPoint": 1904,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_3149": {
									"entryPoint": 4602,
									"id": 3149,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_287": {
									"entryPoint": 922,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_278": {
									"entryPoint": 1400,
									"id": 278,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_471": {
									"entryPoint": 1369,
									"id": 471,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_501": {
									"entryPoint": 1765,
									"id": 501,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_390": {
									"entryPoint": 1743,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1758": {
									"entryPoint": 2046,
									"id": 1758,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_237": {
									"entryPoint": 697,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_296": {
									"entryPoint": 1599,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1483": {
									"entryPoint": 3701,
									"id": 1483,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_332": {
									"entryPoint": 1802,
									"id": 332,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_453": {
									"entryPoint": 1114,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6214,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6718,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6835,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7017,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 6607,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5353,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6028,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5144,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14643:15",
										"nodeType": "YulBlock",
										"src": "0:14643:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "378:105:15",
													"nodeType": "YulBlock",
													"src": "378:105:15",
													"statements": [
														{
															"nativeSrc": "388:89:15",
															"nodeType": "YulAssignment",
															"src": "388:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:15",
																		"nodeType": "YulLiteral",
																		"src": "410:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:15"
																},
																"nativeSrc": "399:78:15",
																"nodeType": "YulFunctionCall",
																"src": "399:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:15",
														"nodeType": "YulTypedName",
														"src": "360:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:15",
														"nodeType": "YulTypedName",
														"src": "370:7:15",
														"type": ""
													}
												],
												"src": "334:149:15"
											},
											{
												"body": {
													"nativeSrc": "531:78:15",
													"nodeType": "YulBlock",
													"src": "531:78:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:15",
																"nodeType": "YulBlock",
																"src": "587:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:15",
																					"nodeType": "YulLiteral",
																					"src": "596:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:15",
																					"nodeType": "YulLiteral",
																					"src": "599:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:15"
																			},
																			"nativeSrc": "589:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:15"
																		},
																		"nativeSrc": "589:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:15",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:15"
																				},
																				"nativeSrc": "561:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:15"
																		},
																		"nativeSrc": "551:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:15"
																},
																"nativeSrc": "544:42:15",
																"nodeType": "YulFunctionCall",
																"src": "544:42:15"
															},
															"nativeSrc": "541:62:15",
															"nodeType": "YulIf",
															"src": "541:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:15",
														"nodeType": "YulTypedName",
														"src": "524:5:15",
														"type": ""
													}
												],
												"src": "489:120:15"
											},
											{
												"body": {
													"nativeSrc": "666:86:15",
													"nodeType": "YulBlock",
													"src": "666:86:15",
													"statements": [
														{
															"nativeSrc": "676:29:15",
															"nodeType": "YulAssignment",
															"src": "676:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:15"
																},
																"nativeSrc": "685:20:15",
																"nodeType": "YulFunctionCall",
																"src": "685:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:15"
																},
																"nativeSrc": "714:32:15",
																"nodeType": "YulFunctionCall",
																"src": "714:32:15"
															},
															"nativeSrc": "714:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:15",
														"nodeType": "YulTypedName",
														"src": "644:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:15",
														"nodeType": "YulTypedName",
														"src": "652:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:15",
														"nodeType": "YulTypedName",
														"src": "660:5:15",
														"type": ""
													}
												],
												"src": "615:137:15"
											},
											{
												"body": {
													"nativeSrc": "823:262:15",
													"nodeType": "YulBlock",
													"src": "823:262:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:15",
																"nodeType": "YulBlock",
																"src": "869:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:15"
																			},
																			"nativeSrc": "871:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:15"
																		},
																		"nativeSrc": "871:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:15"
																		},
																		"nativeSrc": "840:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:15",
																		"nodeType": "YulLiteral",
																		"src": "865:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:15"
																},
																"nativeSrc": "836:32:15",
																"nodeType": "YulFunctionCall",
																"src": "836:32:15"
															},
															"nativeSrc": "833:119:15",
															"nodeType": "YulIf",
															"src": "833:119:15"
														},
														{
															"nativeSrc": "962:116:15",
															"nodeType": "YulBlock",
															"src": "962:116:15",
															"statements": [
																{
																	"nativeSrc": "977:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:15",
																		"nodeType": "YulLiteral",
																		"src": "991:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:15",
																			"nodeType": "YulTypedName",
																			"src": "981:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:15",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:15"
																				},
																				"nativeSrc": "1036:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:15"
																		},
																		"nativeSrc": "1016:52:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:15",
														"nodeType": "YulTypedName",
														"src": "793:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:15",
														"nodeType": "YulTypedName",
														"src": "804:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:15",
														"nodeType": "YulTypedName",
														"src": "816:6:15",
														"type": ""
													}
												],
												"src": "758:327:15"
											},
											{
												"body": {
													"nativeSrc": "1133:48:15",
													"nodeType": "YulBlock",
													"src": "1133:48:15",
													"statements": [
														{
															"nativeSrc": "1143:32:15",
															"nodeType": "YulAssignment",
															"src": "1143:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:15"
																		},
																		"nativeSrc": "1161:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:15"
																},
																"nativeSrc": "1154:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:15",
														"nodeType": "YulTypedName",
														"src": "1115:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:15",
														"nodeType": "YulTypedName",
														"src": "1125:7:15",
														"type": ""
													}
												],
												"src": "1091:90:15"
											},
											{
												"body": {
													"nativeSrc": "1246:50:15",
													"nodeType": "YulBlock",
													"src": "1246:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:15"
																		},
																		"nativeSrc": "1268:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:15"
																},
																"nativeSrc": "1256:34:15",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:15"
															},
															"nativeSrc": "1256:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:15",
														"nodeType": "YulTypedName",
														"src": "1234:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:15",
														"nodeType": "YulTypedName",
														"src": "1241:3:15",
														"type": ""
													}
												],
												"src": "1187:109:15"
											},
											{
												"body": {
													"nativeSrc": "1394:118:15",
													"nodeType": "YulBlock",
													"src": "1394:118:15",
													"statements": [
														{
															"nativeSrc": "1404:26:15",
															"nodeType": "YulAssignment",
															"src": "1404:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:15"
																},
																"nativeSrc": "1412:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:15"
																		},
																		"nativeSrc": "1487:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:15"
																},
																"nativeSrc": "1440:65:15",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:15"
															},
															"nativeSrc": "1440:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:15",
														"nodeType": "YulTypedName",
														"src": "1366:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:15",
														"nodeType": "YulTypedName",
														"src": "1378:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:15",
														"nodeType": "YulTypedName",
														"src": "1389:4:15",
														"type": ""
													}
												],
												"src": "1302:210:15"
											},
											{
												"body": {
													"nativeSrc": "1577:40:15",
													"nodeType": "YulBlock",
													"src": "1577:40:15",
													"statements": [
														{
															"nativeSrc": "1588:22:15",
															"nodeType": "YulAssignment",
															"src": "1588:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:15"
																},
																"nativeSrc": "1598:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:15",
														"nodeType": "YulTypedName",
														"src": "1560:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:15",
														"nodeType": "YulTypedName",
														"src": "1570:6:15",
														"type": ""
													}
												],
												"src": "1518:99:15"
											},
											{
												"body": {
													"nativeSrc": "1719:73:15",
													"nodeType": "YulBlock",
													"src": "1719:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:15"
																},
																"nativeSrc": "1729:19:15",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:15"
															},
															"nativeSrc": "1729:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:15"
														},
														{
															"nativeSrc": "1757:29:15",
															"nodeType": "YulAssignment",
															"src": "1757:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:15"
																},
																"nativeSrc": "1772:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:15",
														"nodeType": "YulTypedName",
														"src": "1691:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:15",
														"nodeType": "YulTypedName",
														"src": "1696:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:15",
														"nodeType": "YulTypedName",
														"src": "1707:11:15",
														"type": ""
													}
												],
												"src": "1623:169:15"
											},
											{
												"body": {
													"nativeSrc": "1860:77:15",
													"nodeType": "YulBlock",
													"src": "1860:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:15"
																},
																"nativeSrc": "1871:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:15"
															},
															"nativeSrc": "1871:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:15"
																		},
																		"nativeSrc": "1910:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:15"
																},
																"nativeSrc": "1903:27:15",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:15"
															},
															"nativeSrc": "1903:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:15",
														"nodeType": "YulTypedName",
														"src": "1842:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:15",
														"nodeType": "YulTypedName",
														"src": "1847:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:15",
														"nodeType": "YulTypedName",
														"src": "1852:6:15",
														"type": ""
													}
												],
												"src": "1798:139:15"
											},
											{
												"body": {
													"nativeSrc": "1991:54:15",
													"nodeType": "YulBlock",
													"src": "1991:54:15",
													"statements": [
														{
															"nativeSrc": "2001:38:15",
															"nodeType": "YulAssignment",
															"src": "2001:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:15"
																		},
																		"nativeSrc": "2015:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:15"
																		},
																		"nativeSrc": "2031:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:15"
																},
																"nativeSrc": "2011:28:15",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:15",
														"nodeType": "YulTypedName",
														"src": "1974:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:15",
														"nodeType": "YulTypedName",
														"src": "1984:6:15",
														"type": ""
													}
												],
												"src": "1943:102:15"
											},
											{
												"body": {
													"nativeSrc": "2143:285:15",
													"nodeType": "YulBlock",
													"src": "2143:285:15",
													"statements": [
														{
															"nativeSrc": "2153:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:15"
																},
																"nativeSrc": "2167:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:15",
															"nodeType": "YulAssignment",
															"src": "2215:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:15"
																},
																"nativeSrc": "2222:71:15",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:15"
																		},
																		"nativeSrc": "2337:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:15"
																},
																"nativeSrc": "2302:65:15",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:15"
															},
															"nativeSrc": "2302:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:15"
														},
														{
															"nativeSrc": "2376:46:15",
															"nodeType": "YulAssignment",
															"src": "2376:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:15"
																		},
																		"nativeSrc": "2392:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:15"
																},
																"nativeSrc": "2383:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:15",
														"nodeType": "YulTypedName",
														"src": "2124:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:15",
														"nodeType": "YulTypedName",
														"src": "2131:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:15",
														"nodeType": "YulTypedName",
														"src": "2139:3:15",
														"type": ""
													}
												],
												"src": "2051:377:15"
											},
											{
												"body": {
													"nativeSrc": "2552:195:15",
													"nodeType": "YulBlock",
													"src": "2552:195:15",
													"statements": [
														{
															"nativeSrc": "2562:26:15",
															"nodeType": "YulAssignment",
															"src": "2562:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:15"
																},
																"nativeSrc": "2570:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:15"
																		},
																		"nativeSrc": "2605:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:15"
																		},
																		"nativeSrc": "2624:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:15"
																},
																"nativeSrc": "2598:47:15",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:15"
															},
															"nativeSrc": "2598:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:15"
														},
														{
															"nativeSrc": "2654:86:15",
															"nodeType": "YulAssignment",
															"src": "2654:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:15"
																},
																"nativeSrc": "2662:78:15",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:15",
														"nodeType": "YulTypedName",
														"src": "2524:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:15",
														"nodeType": "YulTypedName",
														"src": "2536:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:15",
														"nodeType": "YulTypedName",
														"src": "2547:4:15",
														"type": ""
													}
												],
												"src": "2434:313:15"
											},
											{
												"body": {
													"nativeSrc": "2798:32:15",
													"nodeType": "YulBlock",
													"src": "2798:32:15",
													"statements": [
														{
															"nativeSrc": "2808:16:15",
															"nodeType": "YulAssignment",
															"src": "2808:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:15",
																"nodeType": "YulIdentifier",
																"src": "2819:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:15",
														"nodeType": "YulTypedName",
														"src": "2780:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:15",
														"nodeType": "YulTypedName",
														"src": "2790:7:15",
														"type": ""
													}
												],
												"src": "2753:77:15"
											},
											{
												"body": {
													"nativeSrc": "2879:79:15",
													"nodeType": "YulBlock",
													"src": "2879:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:15",
																"nodeType": "YulBlock",
																"src": "2936:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:15"
																			},
																			"nativeSrc": "2938:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:15"
																		},
																		"nativeSrc": "2938:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:15"
																				},
																				"nativeSrc": "2909:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:15"
																		},
																		"nativeSrc": "2899:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:15"
																},
																"nativeSrc": "2892:43:15",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:15"
															},
															"nativeSrc": "2889:63:15",
															"nodeType": "YulIf",
															"src": "2889:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:15",
														"nodeType": "YulTypedName",
														"src": "2872:5:15",
														"type": ""
													}
												],
												"src": "2836:122:15"
											},
											{
												"body": {
													"nativeSrc": "3016:87:15",
													"nodeType": "YulBlock",
													"src": "3016:87:15",
													"statements": [
														{
															"nativeSrc": "3026:29:15",
															"nodeType": "YulAssignment",
															"src": "3026:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:15"
																},
																"nativeSrc": "3035:20:15",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:15"
																},
																"nativeSrc": "3064:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:15"
															},
															"nativeSrc": "3064:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:15",
														"nodeType": "YulTypedName",
														"src": "2994:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:15",
														"nodeType": "YulTypedName",
														"src": "3002:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:15",
														"nodeType": "YulTypedName",
														"src": "3010:5:15",
														"type": ""
													}
												],
												"src": "2964:139:15"
											},
											{
												"body": {
													"nativeSrc": "3175:263:15",
													"nodeType": "YulBlock",
													"src": "3175:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:15",
																"nodeType": "YulBlock",
																"src": "3221:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:15"
																			},
																			"nativeSrc": "3223:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:15"
																		},
																		"nativeSrc": "3223:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:15"
																		},
																		"nativeSrc": "3192:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:15"
																},
																"nativeSrc": "3188:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:15"
															},
															"nativeSrc": "3185:119:15",
															"nodeType": "YulIf",
															"src": "3185:119:15"
														},
														{
															"nativeSrc": "3314:117:15",
															"nodeType": "YulBlock",
															"src": "3314:117:15",
															"statements": [
																{
																	"nativeSrc": "3329:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:15",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:15"
																				},
																				"nativeSrc": "3389:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:15"
																		},
																		"nativeSrc": "3368:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:15",
														"nodeType": "YulTypedName",
														"src": "3145:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:15",
														"nodeType": "YulTypedName",
														"src": "3156:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:15",
														"nodeType": "YulTypedName",
														"src": "3168:6:15",
														"type": ""
													}
												],
												"src": "3109:329:15"
											},
											{
												"body": {
													"nativeSrc": "3489:81:15",
													"nodeType": "YulBlock",
													"src": "3489:81:15",
													"statements": [
														{
															"nativeSrc": "3499:65:15",
															"nodeType": "YulAssignment",
															"src": "3499:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:15",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:15"
																},
																"nativeSrc": "3510:54:15",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:15",
														"nodeType": "YulTypedName",
														"src": "3471:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:15",
														"nodeType": "YulTypedName",
														"src": "3481:7:15",
														"type": ""
													}
												],
												"src": "3444:126:15"
											},
											{
												"body": {
													"nativeSrc": "3621:51:15",
													"nodeType": "YulBlock",
													"src": "3621:51:15",
													"statements": [
														{
															"nativeSrc": "3631:35:15",
															"nodeType": "YulAssignment",
															"src": "3631:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:15"
																},
																"nativeSrc": "3642:24:15",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:15",
														"nodeType": "YulTypedName",
														"src": "3603:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:15",
														"nodeType": "YulTypedName",
														"src": "3613:7:15",
														"type": ""
													}
												],
												"src": "3576:96:15"
											},
											{
												"body": {
													"nativeSrc": "3743:53:15",
													"nodeType": "YulBlock",
													"src": "3743:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:15"
																		},
																		"nativeSrc": "3765:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:15"
																},
																"nativeSrc": "3753:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:15"
															},
															"nativeSrc": "3753:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:15",
														"nodeType": "YulTypedName",
														"src": "3731:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:15",
														"nodeType": "YulTypedName",
														"src": "3738:3:15",
														"type": ""
													}
												],
												"src": "3678:118:15"
											},
											{
												"body": {
													"nativeSrc": "3900:124:15",
													"nodeType": "YulBlock",
													"src": "3900:124:15",
													"statements": [
														{
															"nativeSrc": "3910:26:15",
															"nodeType": "YulAssignment",
															"src": "3910:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:15"
																},
																"nativeSrc": "3918:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:15"
																		},
																		"nativeSrc": "3999:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:15"
																},
																"nativeSrc": "3946:71:15",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:15"
															},
															"nativeSrc": "3946:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:15",
														"nodeType": "YulTypedName",
														"src": "3872:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:15",
														"nodeType": "YulTypedName",
														"src": "3884:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:15",
														"nodeType": "YulTypedName",
														"src": "3895:4:15",
														"type": ""
													}
												],
												"src": "3802:222:15"
											},
											{
												"body": {
													"nativeSrc": "4073:79:15",
													"nodeType": "YulBlock",
													"src": "4073:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:15",
																"nodeType": "YulBlock",
																"src": "4130:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:15"
																			},
																			"nativeSrc": "4132:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:15"
																		},
																		"nativeSrc": "4132:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:15"
																				},
																				"nativeSrc": "4103:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:15"
																		},
																		"nativeSrc": "4093:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:15"
																},
																"nativeSrc": "4086:43:15",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:15"
															},
															"nativeSrc": "4083:63:15",
															"nodeType": "YulIf",
															"src": "4083:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:15",
														"nodeType": "YulTypedName",
														"src": "4066:5:15",
														"type": ""
													}
												],
												"src": "4030:122:15"
											},
											{
												"body": {
													"nativeSrc": "4210:87:15",
													"nodeType": "YulBlock",
													"src": "4210:87:15",
													"statements": [
														{
															"nativeSrc": "4220:29:15",
															"nodeType": "YulAssignment",
															"src": "4220:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:15"
																},
																"nativeSrc": "4229:20:15",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:15"
																},
																"nativeSrc": "4258:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:15"
															},
															"nativeSrc": "4258:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:15",
														"nodeType": "YulTypedName",
														"src": "4188:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:15",
														"nodeType": "YulTypedName",
														"src": "4196:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:15",
														"nodeType": "YulTypedName",
														"src": "4204:5:15",
														"type": ""
													}
												],
												"src": "4158:139:15"
											},
											{
												"body": {
													"nativeSrc": "4386:391:15",
													"nodeType": "YulBlock",
													"src": "4386:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:15",
																"nodeType": "YulBlock",
																"src": "4432:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:15"
																			},
																			"nativeSrc": "4434:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:15"
																		},
																		"nativeSrc": "4434:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:15"
																		},
																		"nativeSrc": "4403:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:15"
																},
																"nativeSrc": "4399:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:15"
															},
															"nativeSrc": "4396:119:15",
															"nodeType": "YulIf",
															"src": "4396:119:15"
														},
														{
															"nativeSrc": "4525:117:15",
															"nodeType": "YulBlock",
															"src": "4525:117:15",
															"statements": [
																{
																	"nativeSrc": "4540:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:15"
																				},
																				"nativeSrc": "4600:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:15"
																		},
																		"nativeSrc": "4579:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:15",
															"nodeType": "YulBlock",
															"src": "4652:118:15",
															"statements": [
																{
																	"nativeSrc": "4667:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:15"
																				},
																				"nativeSrc": "4728:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:15"
																		},
																		"nativeSrc": "4707:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:15",
														"nodeType": "YulTypedName",
														"src": "4348:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:15",
														"nodeType": "YulTypedName",
														"src": "4359:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:15",
														"nodeType": "YulTypedName",
														"src": "4371:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:15",
														"nodeType": "YulTypedName",
														"src": "4379:6:15",
														"type": ""
													}
												],
												"src": "4303:474:15"
											},
											{
												"body": {
													"nativeSrc": "4883:519:15",
													"nodeType": "YulBlock",
													"src": "4883:519:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:15",
																"nodeType": "YulBlock",
																"src": "4929:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:15"
																			},
																			"nativeSrc": "4931:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:15"
																		},
																		"nativeSrc": "4931:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:15"
																		},
																		"nativeSrc": "4900:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:15"
																},
																"nativeSrc": "4896:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:15"
															},
															"nativeSrc": "4893:119:15",
															"nodeType": "YulIf",
															"src": "4893:119:15"
														},
														{
															"nativeSrc": "5022:117:15",
															"nodeType": "YulBlock",
															"src": "5022:117:15",
															"statements": [
																{
																	"nativeSrc": "5037:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:15"
																				},
																				"nativeSrc": "5097:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:15"
																		},
																		"nativeSrc": "5076:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:15",
															"nodeType": "YulBlock",
															"src": "5149:118:15",
															"statements": [
																{
																	"nativeSrc": "5164:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:15"
																				},
																				"nativeSrc": "5225:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:15"
																		},
																		"nativeSrc": "5204:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:15",
															"nodeType": "YulBlock",
															"src": "5277:118:15",
															"statements": [
																{
																	"nativeSrc": "5292:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:15"
																				},
																				"nativeSrc": "5353:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:15"
																		},
																		"nativeSrc": "5332:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:15",
														"nodeType": "YulTypedName",
														"src": "4837:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:15",
														"nodeType": "YulTypedName",
														"src": "4848:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:15",
														"nodeType": "YulTypedName",
														"src": "4860:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:15",
														"nodeType": "YulTypedName",
														"src": "4868:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:15",
														"nodeType": "YulTypedName",
														"src": "4876:6:15",
														"type": ""
													}
												],
												"src": "4783:619:15"
											},
											{
												"body": {
													"nativeSrc": "5474:263:15",
													"nodeType": "YulBlock",
													"src": "5474:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5520:83:15",
																"nodeType": "YulBlock",
																"src": "5520:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5522:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5522:77:15"
																			},
																			"nativeSrc": "5522:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5522:79:15"
																		},
																		"nativeSrc": "5522:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5522:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5495:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5495:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5504:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5504:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5491:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5491:3:15"
																		},
																		"nativeSrc": "5491:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5491:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5516:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5516:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5487:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:15"
																},
																"nativeSrc": "5487:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5487:32:15"
															},
															"nativeSrc": "5484:119:15",
															"nodeType": "YulIf",
															"src": "5484:119:15"
														},
														{
															"nativeSrc": "5613:117:15",
															"nodeType": "YulBlock",
															"src": "5613:117:15",
															"statements": [
																{
																	"nativeSrc": "5628:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5628:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5642:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5642:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5632:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5632:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5657:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5657:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5692:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5692:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5703:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5703:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5688:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:15"
																				},
																				"nativeSrc": "5688:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5688:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5712:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5712:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5667:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5667:20:15"
																		},
																		"nativeSrc": "5667:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5657:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5657:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5408:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5444:9:15",
														"nodeType": "YulTypedName",
														"src": "5444:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5455:7:15",
														"nodeType": "YulTypedName",
														"src": "5455:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5467:6:15",
														"nodeType": "YulTypedName",
														"src": "5467:6:15",
														"type": ""
													}
												],
												"src": "5408:329:15"
											},
											{
												"body": {
													"nativeSrc": "5808:53:15",
													"nodeType": "YulBlock",
													"src": "5808:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5825:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5825:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5848:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5848:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5830:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "5830:17:15"
																		},
																		"nativeSrc": "5830:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5818:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5818:6:15"
																},
																"nativeSrc": "5818:37:15",
																"nodeType": "YulFunctionCall",
																"src": "5818:37:15"
															},
															"nativeSrc": "5818:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "5818:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5743:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5796:5:15",
														"nodeType": "YulTypedName",
														"src": "5796:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5803:3:15",
														"nodeType": "YulTypedName",
														"src": "5803:3:15",
														"type": ""
													}
												],
												"src": "5743:118:15"
											},
											{
												"body": {
													"nativeSrc": "5965:124:15",
													"nodeType": "YulBlock",
													"src": "5965:124:15",
													"statements": [
														{
															"nativeSrc": "5975:26:15",
															"nodeType": "YulAssignment",
															"src": "5975:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5987:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5987:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5998:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5983:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:15"
																},
																"nativeSrc": "5983:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5983:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5975:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5975:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6055:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6055:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6068:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6079:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6079:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6064:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:15"
																		},
																		"nativeSrc": "6064:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6064:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6011:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "6011:43:15"
																},
																"nativeSrc": "6011:71:15",
																"nodeType": "YulFunctionCall",
																"src": "6011:71:15"
															},
															"nativeSrc": "6011:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "6011:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5867:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5937:9:15",
														"nodeType": "YulTypedName",
														"src": "5937:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5949:6:15",
														"nodeType": "YulTypedName",
														"src": "5949:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5960:4:15",
														"nodeType": "YulTypedName",
														"src": "5960:4:15",
														"type": ""
													}
												],
												"src": "5867:222:15"
											},
											{
												"body": {
													"nativeSrc": "6135:76:15",
													"nodeType": "YulBlock",
													"src": "6135:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6189:16:15",
																"nodeType": "YulBlock",
																"src": "6189:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6198:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6198:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6201:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6201:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6191:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6191:6:15"
																			},
																			"nativeSrc": "6191:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6191:12:15"
																		},
																		"nativeSrc": "6191:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6191:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6158:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6158:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6180:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "6180:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6165:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "6165:14:15"
																				},
																				"nativeSrc": "6165:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6165:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6155:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6155:2:15"
																		},
																		"nativeSrc": "6155:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6148:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:15"
																},
																"nativeSrc": "6148:40:15",
																"nodeType": "YulFunctionCall",
																"src": "6148:40:15"
															},
															"nativeSrc": "6145:60:15",
															"nodeType": "YulIf",
															"src": "6145:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6095:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6128:5:15",
														"nodeType": "YulTypedName",
														"src": "6128:5:15",
														"type": ""
													}
												],
												"src": "6095:116:15"
											},
											{
												"body": {
													"nativeSrc": "6266:84:15",
													"nodeType": "YulBlock",
													"src": "6266:84:15",
													"statements": [
														{
															"nativeSrc": "6276:29:15",
															"nodeType": "YulAssignment",
															"src": "6276:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6298:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6298:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6285:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6285:12:15"
																},
																"nativeSrc": "6285:20:15",
																"nodeType": "YulFunctionCall",
																"src": "6285:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6276:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6276:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6338:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6314:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:15"
																},
																"nativeSrc": "6314:30:15",
																"nodeType": "YulFunctionCall",
																"src": "6314:30:15"
															},
															"nativeSrc": "6314:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6217:133:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6244:6:15",
														"nodeType": "YulTypedName",
														"src": "6244:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6252:3:15",
														"nodeType": "YulTypedName",
														"src": "6252:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6260:5:15",
														"nodeType": "YulTypedName",
														"src": "6260:5:15",
														"type": ""
													}
												],
												"src": "6217:133:15"
											},
											{
												"body": {
													"nativeSrc": "6436:388:15",
													"nodeType": "YulBlock",
													"src": "6436:388:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6482:83:15",
																"nodeType": "YulBlock",
																"src": "6482:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6484:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "6484:77:15"
																			},
																			"nativeSrc": "6484:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6484:79:15"
																		},
																		"nativeSrc": "6484:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6484:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6457:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6457:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6466:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6466:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6453:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6453:3:15"
																		},
																		"nativeSrc": "6453:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6478:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6478:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6449:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6449:3:15"
																},
																"nativeSrc": "6449:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6449:32:15"
															},
															"nativeSrc": "6446:119:15",
															"nodeType": "YulIf",
															"src": "6446:119:15"
														},
														{
															"nativeSrc": "6575:117:15",
															"nodeType": "YulBlock",
															"src": "6575:117:15",
															"statements": [
																{
																	"nativeSrc": "6590:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6590:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6604:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6604:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6594:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6594:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6619:63:15",
																	"nodeType": "YulAssignment",
																	"src": "6619:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6654:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6654:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6665:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6665:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6650:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6650:3:15"
																				},
																				"nativeSrc": "6650:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6650:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6674:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6674:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6629:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "6629:20:15"
																		},
																		"nativeSrc": "6629:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6619:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6619:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6702:115:15",
															"nodeType": "YulBlock",
															"src": "6702:115:15",
															"statements": [
																{
																	"nativeSrc": "6717:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6717:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6731:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6731:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6721:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6721:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6747:60:15",
																	"nodeType": "YulAssignment",
																	"src": "6747:60:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6779:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6790:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6790:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6775:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:15"
																				},
																				"nativeSrc": "6775:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6775:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6799:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6799:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6757:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "6757:17:15"
																		},
																		"nativeSrc": "6757:50:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6757:50:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6747:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6747:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6356:468:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6398:9:15",
														"nodeType": "YulTypedName",
														"src": "6398:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6409:7:15",
														"nodeType": "YulTypedName",
														"src": "6409:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6421:6:15",
														"nodeType": "YulTypedName",
														"src": "6421:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6429:6:15",
														"nodeType": "YulTypedName",
														"src": "6429:6:15",
														"type": ""
													}
												],
												"src": "6356:468:15"
											},
											{
												"body": {
													"nativeSrc": "6919:28:15",
													"nodeType": "YulBlock",
													"src": "6919:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6936:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6936:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6929:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:15"
																},
																"nativeSrc": "6929:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6929:12:15"
															},
															"nativeSrc": "6929:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "6929:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6830:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6830:117:15"
											},
											{
												"body": {
													"nativeSrc": "7042:28:15",
													"nodeType": "YulBlock",
													"src": "7042:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7059:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7059:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7062:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7062:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7052:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:15"
																},
																"nativeSrc": "7052:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7052:12:15"
															},
															"nativeSrc": "7052:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "7052:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6953:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6953:117:15"
											},
											{
												"body": {
													"nativeSrc": "7104:152:15",
													"nodeType": "YulBlock",
													"src": "7104:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7121:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7121:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7124:77:15",
																		"nodeType": "YulLiteral",
																		"src": "7124:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7114:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7114:6:15"
																},
																"nativeSrc": "7114:88:15",
																"nodeType": "YulFunctionCall",
																"src": "7114:88:15"
															},
															"nativeSrc": "7114:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "7114:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7218:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7218:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7221:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7221:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7211:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:15"
																},
																"nativeSrc": "7211:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7211:15:15"
															},
															"nativeSrc": "7211:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7211:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7242:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7242:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7245:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7245:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7235:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:15"
																},
																"nativeSrc": "7235:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7235:15:15"
															},
															"nativeSrc": "7235:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7235:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7076:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7076:180:15"
											},
											{
												"body": {
													"nativeSrc": "7305:238:15",
													"nodeType": "YulBlock",
													"src": "7305:238:15",
													"statements": [
														{
															"nativeSrc": "7315:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7315:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7337:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7337:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7367:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "7367:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7345:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "7345:21:15"
																		},
																		"nativeSrc": "7345:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7345:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7333:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:15"
																},
																"nativeSrc": "7333:40:15",
																"nodeType": "YulFunctionCall",
																"src": "7333:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7319:10:15",
																	"nodeType": "YulTypedName",
																	"src": "7319:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7484:22:15",
																"nodeType": "YulBlock",
																"src": "7484:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7486:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7486:16:15"
																			},
																			"nativeSrc": "7486:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7486:18:15"
																		},
																		"nativeSrc": "7486:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7486:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7427:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "7427:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:18:15",
																				"nodeType": "YulLiteral",
																				"src": "7439:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7424:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7424:2:15"
																		},
																		"nativeSrc": "7424:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7463:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "7463:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7475:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7460:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7460:2:15"
																		},
																		"nativeSrc": "7460:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7460:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7421:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7421:2:15"
																},
																"nativeSrc": "7421:62:15",
																"nodeType": "YulFunctionCall",
																"src": "7421:62:15"
															},
															"nativeSrc": "7418:88:15",
															"nodeType": "YulIf",
															"src": "7418:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7522:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7522:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7526:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "7526:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7515:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:15"
																},
																"nativeSrc": "7515:22:15",
																"nodeType": "YulFunctionCall",
																"src": "7515:22:15"
															},
															"nativeSrc": "7515:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "7515:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7262:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7291:6:15",
														"nodeType": "YulTypedName",
														"src": "7291:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7299:4:15",
														"nodeType": "YulTypedName",
														"src": "7299:4:15",
														"type": ""
													}
												],
												"src": "7262:281:15"
											},
											{
												"body": {
													"nativeSrc": "7590:88:15",
													"nodeType": "YulBlock",
													"src": "7590:88:15",
													"statements": [
														{
															"nativeSrc": "7600:30:15",
															"nodeType": "YulAssignment",
															"src": "7600:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7610:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "7610:18:15"
																},
																"nativeSrc": "7610:20:15",
																"nodeType": "YulFunctionCall",
																"src": "7610:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7600:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7600:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7659:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7659:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7667:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7667:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7639:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "7639:19:15"
																},
																"nativeSrc": "7639:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7639:33:15"
															},
															"nativeSrc": "7639:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "7639:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7549:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7574:4:15",
														"nodeType": "YulTypedName",
														"src": "7574:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7583:6:15",
														"nodeType": "YulTypedName",
														"src": "7583:6:15",
														"type": ""
													}
												],
												"src": "7549:129:15"
											},
											{
												"body": {
													"nativeSrc": "7750:241:15",
													"nodeType": "YulBlock",
													"src": "7750:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7855:22:15",
																"nodeType": "YulBlock",
																"src": "7855:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7857:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7857:16:15"
																			},
																			"nativeSrc": "7857:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7857:18:15"
																		},
																		"nativeSrc": "7857:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7857:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7827:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7827:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7835:18:15",
																		"nodeType": "YulLiteral",
																		"src": "7835:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7824:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7824:2:15"
																},
																"nativeSrc": "7824:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7824:30:15"
															},
															"nativeSrc": "7821:56:15",
															"nodeType": "YulIf",
															"src": "7821:56:15"
														},
														{
															"nativeSrc": "7887:37:15",
															"nodeType": "YulAssignment",
															"src": "7887:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7917:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7895:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "7895:21:15"
																},
																"nativeSrc": "7895:29:15",
																"nodeType": "YulFunctionCall",
																"src": "7895:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7887:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:15"
																}
															]
														},
														{
															"nativeSrc": "7961:23:15",
															"nodeType": "YulAssignment",
															"src": "7961:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7973:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7973:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7979:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7969:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7969:3:15"
																},
																"nativeSrc": "7969:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7969:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7961:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7961:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7684:307:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7734:6:15",
														"nodeType": "YulTypedName",
														"src": "7734:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7745:4:15",
														"nodeType": "YulTypedName",
														"src": "7745:4:15",
														"type": ""
													}
												],
												"src": "7684:307:15"
											},
											{
												"body": {
													"nativeSrc": "8061:84:15",
													"nodeType": "YulBlock",
													"src": "8061:84:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8085:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8085:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8090:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8090:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8095:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8072:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8072:12:15"
																},
																"nativeSrc": "8072:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8072:30:15"
															},
															"nativeSrc": "8072:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8072:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8122:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8122:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8127:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8118:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:15"
																		},
																		"nativeSrc": "8118:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8118:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8136:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8111:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:15"
																},
																"nativeSrc": "8111:27:15",
																"nodeType": "YulFunctionCall",
																"src": "8111:27:15"
															},
															"nativeSrc": "8111:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "8111:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7997:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8043:3:15",
														"nodeType": "YulTypedName",
														"src": "8043:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8048:3:15",
														"nodeType": "YulTypedName",
														"src": "8048:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8053:6:15",
														"nodeType": "YulTypedName",
														"src": "8053:6:15",
														"type": ""
													}
												],
												"src": "7997:148:15"
											},
											{
												"body": {
													"nativeSrc": "8234:340:15",
													"nodeType": "YulBlock",
													"src": "8234:340:15",
													"statements": [
														{
															"nativeSrc": "8244:74:15",
															"nodeType": "YulAssignment",
															"src": "8244:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8310:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8269:40:15",
																			"nodeType": "YulIdentifier",
																			"src": "8269:40:15"
																		},
																		"nativeSrc": "8269:48:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8253:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "8253:15:15"
																},
																"nativeSrc": "8253:65:15",
																"nodeType": "YulFunctionCall",
																"src": "8253:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8244:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8244:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8334:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8334:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8341:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8327:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:15"
																},
																"nativeSrc": "8327:21:15",
																"nodeType": "YulFunctionCall",
																"src": "8327:21:15"
															},
															"nativeSrc": "8327:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "8327:21:15"
														},
														{
															"nativeSrc": "8357:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8357:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8372:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8372:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8379:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8368:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8368:3:15"
																},
																"nativeSrc": "8368:16:15",
																"nodeType": "YulFunctionCall",
																"src": "8368:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8361:3:15",
																	"nodeType": "YulTypedName",
																	"src": "8361:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8422:83:15",
																"nodeType": "YulBlock",
																"src": "8422:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8424:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8424:77:15"
																			},
																			"nativeSrc": "8424:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8424:79:15"
																		},
																		"nativeSrc": "8424:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8424:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8403:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8408:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:15"
																		},
																		"nativeSrc": "8399:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8417:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8417:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8396:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8396:2:15"
																},
																"nativeSrc": "8396:25:15",
																"nodeType": "YulFunctionCall",
																"src": "8396:25:15"
															},
															"nativeSrc": "8393:112:15",
															"nodeType": "YulIf",
															"src": "8393:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8551:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8551:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8556:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8556:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8561:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8561:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8514:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "8514:36:15"
																},
																"nativeSrc": "8514:54:15",
																"nodeType": "YulFunctionCall",
																"src": "8514:54:15"
															},
															"nativeSrc": "8514:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "8514:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8151:423:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8207:3:15",
														"nodeType": "YulTypedName",
														"src": "8207:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8212:6:15",
														"nodeType": "YulTypedName",
														"src": "8212:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8220:3:15",
														"nodeType": "YulTypedName",
														"src": "8220:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8228:5:15",
														"nodeType": "YulTypedName",
														"src": "8228:5:15",
														"type": ""
													}
												],
												"src": "8151:423:15"
											},
											{
												"body": {
													"nativeSrc": "8654:277:15",
													"nodeType": "YulBlock",
													"src": "8654:277:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8703:83:15",
																"nodeType": "YulBlock",
																"src": "8703:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8705:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8705:77:15"
																			},
																			"nativeSrc": "8705:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:79:15"
																		},
																		"nativeSrc": "8705:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8682:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8682:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8690:4:15",
																						"nodeType": "YulLiteral",
																						"src": "8690:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8678:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8678:3:15"
																				},
																				"nativeSrc": "8678:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8678:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8697:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8697:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8674:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:15"
																		},
																		"nativeSrc": "8674:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8674:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8667:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:15"
																},
																"nativeSrc": "8667:35:15",
																"nodeType": "YulFunctionCall",
																"src": "8667:35:15"
															},
															"nativeSrc": "8664:122:15",
															"nodeType": "YulIf",
															"src": "8664:122:15"
														},
														{
															"nativeSrc": "8795:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8795:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8822:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8822:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8809:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8809:12:15"
																},
																"nativeSrc": "8809:20:15",
																"nodeType": "YulFunctionCall",
																"src": "8809:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8799:6:15",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8838:87:15",
															"nodeType": "YulAssignment",
															"src": "8838:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8898:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8898:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8906:4:15",
																				"nodeType": "YulLiteral",
																				"src": "8906:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8894:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:15"
																		},
																		"nativeSrc": "8894:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8913:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8913:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8921:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8847:46:15",
																	"nodeType": "YulIdentifier",
																	"src": "8847:46:15"
																},
																"nativeSrc": "8847:78:15",
																"nodeType": "YulFunctionCall",
																"src": "8847:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8838:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8838:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8593:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8632:6:15",
														"nodeType": "YulTypedName",
														"src": "8632:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8640:3:15",
														"nodeType": "YulTypedName",
														"src": "8640:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8648:5:15",
														"nodeType": "YulTypedName",
														"src": "8648:5:15",
														"type": ""
													}
												],
												"src": "8593:338:15"
											},
											{
												"body": {
													"nativeSrc": "9063:817:15",
													"nodeType": "YulBlock",
													"src": "9063:817:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9110:83:15",
																"nodeType": "YulBlock",
																"src": "9110:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9112:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "9112:77:15"
																			},
																			"nativeSrc": "9112:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9112:79:15"
																		},
																		"nativeSrc": "9112:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9112:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9084:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9093:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9080:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:15"
																		},
																		"nativeSrc": "9080:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9105:3:15",
																		"nodeType": "YulLiteral",
																		"src": "9105:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9076:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9076:3:15"
																},
																"nativeSrc": "9076:33:15",
																"nodeType": "YulFunctionCall",
																"src": "9076:33:15"
															},
															"nativeSrc": "9073:120:15",
															"nodeType": "YulIf",
															"src": "9073:120:15"
														},
														{
															"nativeSrc": "9203:117:15",
															"nodeType": "YulBlock",
															"src": "9203:117:15",
															"statements": [
																{
																	"nativeSrc": "9218:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9218:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9232:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9232:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9222:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9222:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9247:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9247:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9282:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9282:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9293:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9293:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9278:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9278:3:15"
																				},
																				"nativeSrc": "9278:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9278:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9302:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9302:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9257:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9257:20:15"
																		},
																		"nativeSrc": "9257:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9257:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9247:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9247:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9330:118:15",
															"nodeType": "YulBlock",
															"src": "9330:118:15",
															"statements": [
																{
																	"nativeSrc": "9345:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9345:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9359:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9359:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9349:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9349:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9375:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9375:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9410:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9410:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9421:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9421:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9406:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9406:3:15"
																				},
																				"nativeSrc": "9406:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9406:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9430:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9430:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9385:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9385:20:15"
																		},
																		"nativeSrc": "9385:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9385:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9375:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9375:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9458:118:15",
															"nodeType": "YulBlock",
															"src": "9458:118:15",
															"statements": [
																{
																	"nativeSrc": "9473:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9473:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9487:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9477:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9477:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9503:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9503:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9538:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9538:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9549:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9549:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9534:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9534:3:15"
																				},
																				"nativeSrc": "9534:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9534:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9558:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9558:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9513:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9513:20:15"
																		},
																		"nativeSrc": "9513:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9503:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9503:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9586:287:15",
															"nodeType": "YulBlock",
															"src": "9586:287:15",
															"statements": [
																{
																	"nativeSrc": "9601:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9601:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9632:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9632:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9643:2:15",
																						"nodeType": "YulLiteral",
																						"src": "9643:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9628:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9628:3:15"
																				},
																				"nativeSrc": "9628:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9628:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9615:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "9615:12:15"
																		},
																		"nativeSrc": "9615:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9605:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9605:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9694:83:15",
																		"nodeType": "YulBlock",
																		"src": "9694:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9696:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "9696:77:15"
																					},
																					"nativeSrc": "9696:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9696:79:15"
																				},
																				"nativeSrc": "9696:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "9696:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9666:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9666:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9674:18:15",
																				"nodeType": "YulLiteral",
																				"src": "9674:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9663:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9663:2:15"
																		},
																		"nativeSrc": "9663:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9663:30:15"
																	},
																	"nativeSrc": "9660:117:15",
																	"nodeType": "YulIf",
																	"src": "9660:117:15"
																},
																{
																	"nativeSrc": "9791:72:15",
																	"nodeType": "YulAssignment",
																	"src": "9791:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9835:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9835:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9846:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9846:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9831:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9831:3:15"
																				},
																				"nativeSrc": "9831:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9831:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9855:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9855:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9801:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "9801:29:15"
																		},
																		"nativeSrc": "9801:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9791:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9791:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "8937:943:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9009:9:15",
														"nodeType": "YulTypedName",
														"src": "9009:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9020:7:15",
														"nodeType": "YulTypedName",
														"src": "9020:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9032:6:15",
														"nodeType": "YulTypedName",
														"src": "9032:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9040:6:15",
														"nodeType": "YulTypedName",
														"src": "9040:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9048:6:15",
														"nodeType": "YulTypedName",
														"src": "9048:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9056:6:15",
														"nodeType": "YulTypedName",
														"src": "9056:6:15",
														"type": ""
													}
												],
												"src": "8937:943:15"
											},
											{
												"body": {
													"nativeSrc": "9969:391:15",
													"nodeType": "YulBlock",
													"src": "9969:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10015:83:15",
																"nodeType": "YulBlock",
																"src": "10015:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10017:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10017:77:15"
																			},
																			"nativeSrc": "10017:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10017:79:15"
																		},
																		"nativeSrc": "10017:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10017:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9990:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9990:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9999:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9986:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9986:3:15"
																		},
																		"nativeSrc": "9986:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10011:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10011:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9982:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9982:3:15"
																},
																"nativeSrc": "9982:32:15",
																"nodeType": "YulFunctionCall",
																"src": "9982:32:15"
															},
															"nativeSrc": "9979:119:15",
															"nodeType": "YulIf",
															"src": "9979:119:15"
														},
														{
															"nativeSrc": "10108:117:15",
															"nodeType": "YulBlock",
															"src": "10108:117:15",
															"statements": [
																{
																	"nativeSrc": "10123:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10123:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10137:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10137:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10127:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10127:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10152:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10152:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10187:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10187:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10198:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10198:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10183:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10183:3:15"
																				},
																				"nativeSrc": "10183:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10183:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10207:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10207:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10162:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10162:20:15"
																		},
																		"nativeSrc": "10162:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10162:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10152:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10152:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10235:118:15",
															"nodeType": "YulBlock",
															"src": "10235:118:15",
															"statements": [
																{
																	"nativeSrc": "10250:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10250:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10264:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10254:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10254:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10280:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10280:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10315:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10315:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10326:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10326:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10311:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10311:3:15"
																				},
																				"nativeSrc": "10311:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10311:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10290:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10290:20:15"
																		},
																		"nativeSrc": "10290:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10290:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10280:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10280:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9886:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9931:9:15",
														"nodeType": "YulTypedName",
														"src": "9931:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9942:7:15",
														"nodeType": "YulTypedName",
														"src": "9942:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9954:6:15",
														"nodeType": "YulTypedName",
														"src": "9954:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9962:6:15",
														"nodeType": "YulTypedName",
														"src": "9962:6:15",
														"type": ""
													}
												],
												"src": "9886:474:15"
											},
											{
												"body": {
													"nativeSrc": "10394:152:15",
													"nodeType": "YulBlock",
													"src": "10394:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10411:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10411:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10414:77:15",
																		"nodeType": "YulLiteral",
																		"src": "10414:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10404:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:15"
																},
																"nativeSrc": "10404:88:15",
																"nodeType": "YulFunctionCall",
																"src": "10404:88:15"
															},
															"nativeSrc": "10404:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "10404:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10508:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10508:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10511:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10511:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10501:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:15"
																},
																"nativeSrc": "10501:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10501:15:15"
															},
															"nativeSrc": "10501:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10501:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10532:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10532:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10525:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10525:6:15"
																},
																"nativeSrc": "10525:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10525:15:15"
															},
															"nativeSrc": "10525:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10525:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10366:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "10366:180:15"
											},
											{
												"body": {
													"nativeSrc": "10603:269:15",
													"nodeType": "YulBlock",
													"src": "10603:269:15",
													"statements": [
														{
															"nativeSrc": "10613:22:15",
															"nodeType": "YulAssignment",
															"src": "10613:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10627:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10627:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10633:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10623:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:15"
																},
																"nativeSrc": "10623:12:15",
																"nodeType": "YulFunctionCall",
																"src": "10623:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10613:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10613:6:15"
																}
															]
														},
														{
															"nativeSrc": "10644:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10644:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10674:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10674:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10670:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10670:3:15"
																},
																"nativeSrc": "10670:12:15",
																"nodeType": "YulFunctionCall",
																"src": "10670:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10648:18:15",
																	"nodeType": "YulTypedName",
																	"src": "10648:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10721:51:15",
																"nodeType": "YulBlock",
																"src": "10721:51:15",
																"statements": [
																	{
																		"nativeSrc": "10735:27:15",
																		"nodeType": "YulAssignment",
																		"src": "10735:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10749:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "10749:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10757:4:15",
																					"nodeType": "YulLiteral",
																					"src": "10757:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10745:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "10745:3:15"
																			},
																			"nativeSrc": "10745:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10745:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10735:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10735:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10701:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "10701:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10694:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:15"
																},
																"nativeSrc": "10694:26:15",
																"nodeType": "YulFunctionCall",
																"src": "10694:26:15"
															},
															"nativeSrc": "10691:81:15",
															"nodeType": "YulIf",
															"src": "10691:81:15"
														},
														{
															"body": {
																"nativeSrc": "10824:42:15",
																"nodeType": "YulBlock",
																"src": "10824:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10838:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "10838:16:15"
																			},
																			"nativeSrc": "10838:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10838:18:15"
																		},
																		"nativeSrc": "10838:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10838:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10788:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "10788:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10811:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10811:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10819:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10819:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10808:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10808:2:15"
																		},
																		"nativeSrc": "10808:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10808:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10785:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10785:2:15"
																},
																"nativeSrc": "10785:38:15",
																"nodeType": "YulFunctionCall",
																"src": "10785:38:15"
															},
															"nativeSrc": "10782:84:15",
															"nodeType": "YulIf",
															"src": "10782:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10552:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10587:4:15",
														"nodeType": "YulTypedName",
														"src": "10587:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10596:6:15",
														"nodeType": "YulTypedName",
														"src": "10596:6:15",
														"type": ""
													}
												],
												"src": "10552:320:15"
											},
											{
												"body": {
													"nativeSrc": "11032:288:15",
													"nodeType": "YulBlock",
													"src": "11032:288:15",
													"statements": [
														{
															"nativeSrc": "11042:26:15",
															"nodeType": "YulAssignment",
															"src": "11042:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11054:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11054:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11065:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11065:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11050:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11050:3:15"
																},
																"nativeSrc": "11050:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11050:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11042:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11042:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11122:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11122:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11135:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11135:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11146:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11146:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11131:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11131:3:15"
																		},
																		"nativeSrc": "11131:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11131:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11078:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "11078:43:15"
																},
																"nativeSrc": "11078:71:15",
																"nodeType": "YulFunctionCall",
																"src": "11078:71:15"
															},
															"nativeSrc": "11078:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "11078:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11203:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11203:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11216:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11216:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11227:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11227:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11212:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11212:3:15"
																		},
																		"nativeSrc": "11212:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11212:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11159:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "11159:43:15"
																},
																"nativeSrc": "11159:72:15",
																"nodeType": "YulFunctionCall",
																"src": "11159:72:15"
															},
															"nativeSrc": "11159:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "11159:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11285:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11285:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11298:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11298:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11309:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11309:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11294:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11294:3:15"
																		},
																		"nativeSrc": "11294:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11294:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11241:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "11241:43:15"
																},
																"nativeSrc": "11241:72:15",
																"nodeType": "YulFunctionCall",
																"src": "11241:72:15"
															},
															"nativeSrc": "11241:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "11241:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "10878:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10988:9:15",
														"nodeType": "YulTypedName",
														"src": "10988:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11000:6:15",
														"nodeType": "YulTypedName",
														"src": "11000:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11008:6:15",
														"nodeType": "YulTypedName",
														"src": "11008:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11016:6:15",
														"nodeType": "YulTypedName",
														"src": "11016:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11027:4:15",
														"nodeType": "YulTypedName",
														"src": "11027:4:15",
														"type": ""
													}
												],
												"src": "10878:442:15"
											},
											{
												"body": {
													"nativeSrc": "11440:34:15",
													"nodeType": "YulBlock",
													"src": "11440:34:15",
													"statements": [
														{
															"nativeSrc": "11450:18:15",
															"nodeType": "YulAssignment",
															"src": "11450:18:15",
															"value": {
																"name": "pos",
																"nativeSrc": "11465:3:15",
																"nodeType": "YulIdentifier",
																"src": "11465:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11450:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "11450:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11326:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11412:3:15",
														"nodeType": "YulTypedName",
														"src": "11412:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11417:6:15",
														"nodeType": "YulTypedName",
														"src": "11417:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11428:11:15",
														"nodeType": "YulTypedName",
														"src": "11428:11:15",
														"type": ""
													}
												],
												"src": "11326:148:15"
											},
											{
												"body": {
													"nativeSrc": "11590:280:15",
													"nodeType": "YulBlock",
													"src": "11590:280:15",
													"statements": [
														{
															"nativeSrc": "11600:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11600:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11647:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11647:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "11614:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "11614:32:15"
																},
																"nativeSrc": "11614:39:15",
																"nodeType": "YulFunctionCall",
																"src": "11614:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11604:6:15",
																	"nodeType": "YulTypedName",
																	"src": "11604:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11662:96:15",
															"nodeType": "YulAssignment",
															"src": "11662:96:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11746:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11746:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11751:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11751:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11669:76:15",
																	"nodeType": "YulIdentifier",
																	"src": "11669:76:15"
																},
																"nativeSrc": "11669:89:15",
																"nodeType": "YulFunctionCall",
																"src": "11669:89:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11662:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11662:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11806:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11806:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11813:4:15",
																				"nodeType": "YulLiteral",
																				"src": "11813:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11802:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11802:3:15"
																		},
																		"nativeSrc": "11802:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11802:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11820:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11820:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11825:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11825:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11767:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "11767:34:15"
																},
																"nativeSrc": "11767:65:15",
																"nodeType": "YulFunctionCall",
																"src": "11767:65:15"
															},
															"nativeSrc": "11767:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "11767:65:15"
														},
														{
															"nativeSrc": "11841:23:15",
															"nodeType": "YulAssignment",
															"src": "11841:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11852:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11852:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11857:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11857:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11848:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11848:3:15"
																},
																"nativeSrc": "11848:16:15",
																"nodeType": "YulFunctionCall",
																"src": "11848:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11841:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11841:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11480:390:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11571:5:15",
														"nodeType": "YulTypedName",
														"src": "11571:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11578:3:15",
														"nodeType": "YulTypedName",
														"src": "11578:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11586:3:15",
														"nodeType": "YulTypedName",
														"src": "11586:3:15",
														"type": ""
													}
												],
												"src": "11480:390:15"
											},
											{
												"body": {
													"nativeSrc": "12060:251:15",
													"nodeType": "YulBlock",
													"src": "12060:251:15",
													"statements": [
														{
															"nativeSrc": "12071:102:15",
															"nodeType": "YulAssignment",
															"src": "12071:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12160:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12160:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12169:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12169:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12078:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "12078:81:15"
																},
																"nativeSrc": "12078:95:15",
																"nodeType": "YulFunctionCall",
																"src": "12078:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12071:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12071:3:15"
																}
															]
														},
														{
															"nativeSrc": "12183:102:15",
															"nodeType": "YulAssignment",
															"src": "12183:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12272:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12272:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12281:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12281:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12190:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "12190:81:15"
																},
																"nativeSrc": "12190:95:15",
																"nodeType": "YulFunctionCall",
																"src": "12190:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12183:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12183:3:15"
																}
															]
														},
														{
															"nativeSrc": "12295:10:15",
															"nodeType": "YulAssignment",
															"src": "12295:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "12302:3:15",
																"nodeType": "YulIdentifier",
																"src": "12302:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12295:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12295:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11876:435:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12031:3:15",
														"nodeType": "YulTypedName",
														"src": "12031:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12037:6:15",
														"nodeType": "YulTypedName",
														"src": "12037:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12045:6:15",
														"nodeType": "YulTypedName",
														"src": "12045:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12056:3:15",
														"nodeType": "YulTypedName",
														"src": "12056:3:15",
														"type": ""
													}
												],
												"src": "11876:435:15"
											},
											{
												"body": {
													"nativeSrc": "12375:40:15",
													"nodeType": "YulBlock",
													"src": "12375:40:15",
													"statements": [
														{
															"nativeSrc": "12386:22:15",
															"nodeType": "YulAssignment",
															"src": "12386:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12402:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12402:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12396:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12396:5:15"
																},
																"nativeSrc": "12396:12:15",
																"nodeType": "YulFunctionCall",
																"src": "12396:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12386:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12386:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12317:98:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12358:5:15",
														"nodeType": "YulTypedName",
														"src": "12358:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12368:6:15",
														"nodeType": "YulTypedName",
														"src": "12368:6:15",
														"type": ""
													}
												],
												"src": "12317:98:15"
											},
											{
												"body": {
													"nativeSrc": "12516:73:15",
													"nodeType": "YulBlock",
													"src": "12516:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12533:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12533:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12538:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12538:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12526:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12526:6:15"
																},
																"nativeSrc": "12526:19:15",
																"nodeType": "YulFunctionCall",
																"src": "12526:19:15"
															},
															"nativeSrc": "12526:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "12526:19:15"
														},
														{
															"nativeSrc": "12554:29:15",
															"nodeType": "YulAssignment",
															"src": "12554:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12573:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12573:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12578:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12578:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12569:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12569:3:15"
																},
																"nativeSrc": "12569:14:15",
																"nodeType": "YulFunctionCall",
																"src": "12569:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12554:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "12554:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "12421:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12488:3:15",
														"nodeType": "YulTypedName",
														"src": "12488:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12493:6:15",
														"nodeType": "YulTypedName",
														"src": "12493:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12504:11:15",
														"nodeType": "YulTypedName",
														"src": "12504:11:15",
														"type": ""
													}
												],
												"src": "12421:168:15"
											},
											{
												"body": {
													"nativeSrc": "12685:283:15",
													"nodeType": "YulBlock",
													"src": "12685:283:15",
													"statements": [
														{
															"nativeSrc": "12695:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "12695:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12741:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12741:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12709:31:15",
																	"nodeType": "YulIdentifier",
																	"src": "12709:31:15"
																},
																"nativeSrc": "12709:38:15",
																"nodeType": "YulFunctionCall",
																"src": "12709:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12699:6:15",
																	"nodeType": "YulTypedName",
																	"src": "12699:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12756:77:15",
															"nodeType": "YulAssignment",
															"src": "12756:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12821:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12821:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12826:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12826:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "12763:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "12763:57:15"
																},
																"nativeSrc": "12763:70:15",
																"nodeType": "YulFunctionCall",
																"src": "12763:70:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12756:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12756:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12881:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "12881:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12888:4:15",
																				"nodeType": "YulLiteral",
																				"src": "12888:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12877:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12877:3:15"
																		},
																		"nativeSrc": "12877:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12877:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12895:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12895:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12900:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12900:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12842:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "12842:34:15"
																},
																"nativeSrc": "12842:65:15",
																"nodeType": "YulFunctionCall",
																"src": "12842:65:15"
															},
															"nativeSrc": "12842:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "12842:65:15"
														},
														{
															"nativeSrc": "12916:46:15",
															"nodeType": "YulAssignment",
															"src": "12916:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12927:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12927:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12954:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12954:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "12932:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "12932:21:15"
																		},
																		"nativeSrc": "12932:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12932:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12923:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12923:3:15"
																},
																"nativeSrc": "12923:39:15",
																"nodeType": "YulFunctionCall",
																"src": "12923:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12916:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12916:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "12595:373:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12666:5:15",
														"nodeType": "YulTypedName",
														"src": "12666:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12673:3:15",
														"nodeType": "YulTypedName",
														"src": "12673:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12681:3:15",
														"nodeType": "YulTypedName",
														"src": "12681:3:15",
														"type": ""
													}
												],
												"src": "12595:373:15"
											},
											{
												"body": {
													"nativeSrc": "13174:440:15",
													"nodeType": "YulBlock",
													"src": "13174:440:15",
													"statements": [
														{
															"nativeSrc": "13184:27:15",
															"nodeType": "YulAssignment",
															"src": "13184:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13196:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13196:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13207:3:15",
																		"nodeType": "YulLiteral",
																		"src": "13207:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13192:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13192:3:15"
																},
																"nativeSrc": "13192:19:15",
																"nodeType": "YulFunctionCall",
																"src": "13192:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13184:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13184:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13265:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13265:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13278:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13278:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13289:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13289:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13274:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13274:3:15"
																		},
																		"nativeSrc": "13274:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13274:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13221:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13221:43:15"
																},
																"nativeSrc": "13221:71:15",
																"nodeType": "YulFunctionCall",
																"src": "13221:71:15"
															},
															"nativeSrc": "13221:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "13221:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13346:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13346:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13359:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13359:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13370:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13370:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13355:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13355:3:15"
																		},
																		"nativeSrc": "13355:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13355:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13302:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13302:43:15"
																},
																"nativeSrc": "13302:72:15",
																"nodeType": "YulFunctionCall",
																"src": "13302:72:15"
															},
															"nativeSrc": "13302:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "13302:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13428:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13428:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13441:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13441:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13452:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13452:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13437:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13437:3:15"
																		},
																		"nativeSrc": "13437:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13437:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13384:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13384:43:15"
																},
																"nativeSrc": "13384:72:15",
																"nodeType": "YulFunctionCall",
																"src": "13384:72:15"
															},
															"nativeSrc": "13384:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "13384:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13477:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13477:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13488:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13488:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13473:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13473:3:15"
																		},
																		"nativeSrc": "13473:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13473:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13497:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "13497:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13503:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13503:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13493:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13493:3:15"
																		},
																		"nativeSrc": "13493:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13493:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13466:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13466:6:15"
																},
																"nativeSrc": "13466:48:15",
																"nodeType": "YulFunctionCall",
																"src": "13466:48:15"
															},
															"nativeSrc": "13466:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "13466:48:15"
														},
														{
															"nativeSrc": "13523:84:15",
															"nodeType": "YulAssignment",
															"src": "13523:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13593:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13593:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13602:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "13602:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13531:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "13531:61:15"
																},
																"nativeSrc": "13531:76:15",
																"nodeType": "YulFunctionCall",
																"src": "13531:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13523:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13523:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "12974:640:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13122:9:15",
														"nodeType": "YulTypedName",
														"src": "13122:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13134:6:15",
														"nodeType": "YulTypedName",
														"src": "13134:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13142:6:15",
														"nodeType": "YulTypedName",
														"src": "13142:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13150:6:15",
														"nodeType": "YulTypedName",
														"src": "13150:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13158:6:15",
														"nodeType": "YulTypedName",
														"src": "13158:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13169:4:15",
														"nodeType": "YulTypedName",
														"src": "13169:4:15",
														"type": ""
													}
												],
												"src": "12974:640:15"
											},
											{
												"body": {
													"nativeSrc": "13682:79:15",
													"nodeType": "YulBlock",
													"src": "13682:79:15",
													"statements": [
														{
															"nativeSrc": "13692:22:15",
															"nodeType": "YulAssignment",
															"src": "13692:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13707:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13707:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13701:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "13701:5:15"
																},
																"nativeSrc": "13701:13:15",
																"nodeType": "YulFunctionCall",
																"src": "13701:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13692:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "13692:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13749:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "13749:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "13723:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "13723:25:15"
																},
																"nativeSrc": "13723:32:15",
																"nodeType": "YulFunctionCall",
																"src": "13723:32:15"
															},
															"nativeSrc": "13723:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "13723:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "13620:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13660:6:15",
														"nodeType": "YulTypedName",
														"src": "13660:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13668:3:15",
														"nodeType": "YulTypedName",
														"src": "13668:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13676:5:15",
														"nodeType": "YulTypedName",
														"src": "13676:5:15",
														"type": ""
													}
												],
												"src": "13620:141:15"
											},
											{
												"body": {
													"nativeSrc": "13843:273:15",
													"nodeType": "YulBlock",
													"src": "13843:273:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "13889:83:15",
																"nodeType": "YulBlock",
																"src": "13889:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13891:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "13891:77:15"
																			},
																			"nativeSrc": "13891:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13891:79:15"
																		},
																		"nativeSrc": "13891:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13891:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13864:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "13864:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13873:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13873:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13860:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13860:3:15"
																		},
																		"nativeSrc": "13860:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13860:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13885:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13885:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13856:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13856:3:15"
																},
																"nativeSrc": "13856:32:15",
																"nodeType": "YulFunctionCall",
																"src": "13856:32:15"
															},
															"nativeSrc": "13853:119:15",
															"nodeType": "YulIf",
															"src": "13853:119:15"
														},
														{
															"nativeSrc": "13982:127:15",
															"nodeType": "YulBlock",
															"src": "13982:127:15",
															"statements": [
																{
																	"nativeSrc": "13997:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13997:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14011:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14011:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14001:6:15",
																			"nodeType": "YulTypedName",
																			"src": "14001:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14026:73:15",
																	"nodeType": "YulAssignment",
																	"src": "14026:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14071:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "14071:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14082:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "14082:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14067:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "14067:3:15"
																				},
																				"nativeSrc": "14067:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14067:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14091:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "14091:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "14036:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "14036:30:15"
																		},
																		"nativeSrc": "14036:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14036:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14026:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "14026:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "13767:349:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13813:9:15",
														"nodeType": "YulTypedName",
														"src": "13813:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13824:7:15",
														"nodeType": "YulTypedName",
														"src": "13824:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13836:6:15",
														"nodeType": "YulTypedName",
														"src": "13836:6:15",
														"type": ""
													}
												],
												"src": "13767:349:15"
											},
											{
												"body": {
													"nativeSrc": "14150:152:15",
													"nodeType": "YulBlock",
													"src": "14150:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14167:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14167:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14170:77:15",
																		"nodeType": "YulLiteral",
																		"src": "14170:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14160:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14160:6:15"
																},
																"nativeSrc": "14160:88:15",
																"nodeType": "YulFunctionCall",
																"src": "14160:88:15"
															},
															"nativeSrc": "14160:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "14160:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14264:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14264:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14267:4:15",
																		"nodeType": "YulLiteral",
																		"src": "14267:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14257:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14257:6:15"
																},
																"nativeSrc": "14257:15:15",
																"nodeType": "YulFunctionCall",
																"src": "14257:15:15"
															},
															"nativeSrc": "14257:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "14257:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14288:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14288:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14291:4:15",
																		"nodeType": "YulLiteral",
																		"src": "14291:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14281:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14281:6:15"
																},
																"nativeSrc": "14281:15:15",
																"nodeType": "YulFunctionCall",
																"src": "14281:15:15"
															},
															"nativeSrc": "14281:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "14281:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14122:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "14122:180:15"
											},
											{
												"body": {
													"nativeSrc": "14434:206:15",
													"nodeType": "YulBlock",
													"src": "14434:206:15",
													"statements": [
														{
															"nativeSrc": "14444:26:15",
															"nodeType": "YulAssignment",
															"src": "14444:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14456:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14456:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14467:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14467:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14452:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14452:3:15"
																},
																"nativeSrc": "14452:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14452:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14444:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14444:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14524:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14524:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14537:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14537:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14548:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14548:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14533:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14533:3:15"
																		},
																		"nativeSrc": "14533:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14533:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14480:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "14480:43:15"
																},
																"nativeSrc": "14480:71:15",
																"nodeType": "YulFunctionCall",
																"src": "14480:71:15"
															},
															"nativeSrc": "14480:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "14480:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14605:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14605:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14618:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14618:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14629:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14629:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14614:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14614:3:15"
																		},
																		"nativeSrc": "14614:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14614:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14561:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "14561:43:15"
																},
																"nativeSrc": "14561:72:15",
																"nodeType": "YulFunctionCall",
																"src": "14561:72:15"
															},
															"nativeSrc": "14561:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "14561:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14308:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14398:9:15",
														"nodeType": "YulTypedName",
														"src": "14398:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14410:6:15",
														"nodeType": "YulTypedName",
														"src": "14410:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14418:6:15",
														"nodeType": "YulTypedName",
														"src": "14418:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14429:4:15",
														"nodeType": "YulTypedName",
														"src": "14429:4:15",
														"type": ""
													}
												],
												"src": "14308:332:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c80636352211e1161008a578063a22cb46511610064578063a22cb46514610221578063b88d4fde1461023d578063c87b56dd14610259578063e985e9c514610289576100cd565b80636352211e146101a357806370a08231146101d357806395d89b4114610203576100cd565b806301ffc9a7146100d157806306fdde0314610101578063081812fc1461011f578063095ea7b31461014f57806323b872dd1461016b57806342842e0e14610187575b5f5ffd5b6100eb60048036038101906100e69190611471565b6102b9565b6040516100f891906114b6565b60405180910390f35b61010961039a565b604051610116919061153f565b60405180910390f35b61013960048036038101906101349190611592565b610429565b60405161014691906115fc565b60405180910390f35b6101696004803603810190610164919061163f565b610444565b005b6101856004803603810190610180919061167d565b61045a565b005b6101a1600480360381019061019c919061167d565b610559565b005b6101bd60048036038101906101b89190611592565b610578565b6040516101ca91906115fc565b60405180910390f35b6101ed60048036038101906101e891906116cd565b610589565b6040516101fa9190611707565b60405180910390f35b61020b61063f565b604051610218919061153f565b60405180910390f35b61023b6004803603810190610236919061174a565b6106cf565b005b610257600480360381019061025291906118b4565b6106e5565b005b610273600480360381019061026e9190611592565b61070a565b604051610280919061153f565b60405180910390f35b6102a3600480360381019061029e9190611934565b610770565b6040516102b091906114b6565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103935750610392826107fe565b5b9050919050565b60605f80546103a89061199f565b80601f01602080910402602001604051908101604052809291908181526020018280546103d49061199f565b801561041f5780601f106103f65761010080835404028352916020019161041f565b820191905f5260205f20905b81548152906001019060200180831161040257829003601f168201915b5050505050905090565b5f61043382610867565b5061043d826108ed565b9050919050565b6104568282610451610926565b61092d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104ca575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104c191906115fc565b60405180910390fd5b5f6104dd83836104d8610926565b61093f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610553578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161054a939291906119cf565b60405180910390fd5b50505050565b61057383838360405180602001604052805f8152506106e5565b505050565b5f61058282610867565b9050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105fa575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105f191906115fc565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461064e9061199f565b80601f016020809104026020016040519081016040528092919081815260200182805461067a9061199f565b80156106c55780601f1061069c576101008083540402835291602001916106c5565b820191905f5260205f20905b8154815290600101906020018083116106a857829003601f168201915b5050505050905090565b6106e16106da610926565b8383610b4a565b5050565b6106f084848461045a565b6107046106fb610926565b85858585610cb3565b50505050565b606061071582610867565b505f61071f610e5f565b90505f81511161073d5760405180602001604052805f815250610768565b8061074784610e75565b604051602001610758929190611a3e565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f5f61087283610f3f565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108e457826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016108db9190611707565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b61093a8383836001610f78565b505050565b5f5f61094a84610f3f565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461098b5761098a818486611137565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a16576109ca5f855f5f610f78565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610a9557600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bba57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610bb191906115fc565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ca691906114b6565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115610e58578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401610d119493929190611ab3565b6020604051808303815f875af1925050508015610d4c57506040513d601f19601f82011682018060405250810190610d499190611b11565b60015b610dcd573d805f8114610d7a576040519150601f19603f3d011682016040523d82523d5f602084013e610d7f565b606091505b505f815103610dc557836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610dbc91906115fc565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610e5657836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610e4d91906115fc565b60405180910390fd5b505b5050505050565b606060405180602001604052805f815250905090565b60605f6001610e83846111fa565b0190505f8167ffffffffffffffff811115610ea157610ea0611790565b5b6040519080825280601f01601f191660200182016040528015610ed35781602001600182028036833780820191505090505b5090505f82602001820190505b600115610f34578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610f2957610f28611b3c565b5b0494505f8503610ee0575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080610fb057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156110e2575f610fbf84610867565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561102957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561103c575061103a8184610770565b155b1561107e57826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161107591906115fc565b60405180910390fd5b81156110e057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61114283838361134b565b6111f5575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111b657806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016111ad9190611707565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016111ec929190611b69565b60405180910390fd5b505050565b5f5f5f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611256577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161124c5761124b611b3c565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611293576d04ee2d6d415b85acef8100000000838161128957611288611b3c565b5b0492506020810190505b662386f26fc1000083106112c257662386f26fc1000083816112b8576112b7611b3c565b5b0492506010810190505b6305f5e10083106112eb576305f5e10083816112e1576112e0611b3c565b5b0492506008810190505b612710831061131057612710838161130657611305611b3c565b5b0492506004810190505b60648310611333576064838161132957611328611b3c565b5b0492506002810190505b600a8310611342576001810190505b80915050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561140257508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806113c357506113c28484610770565b5b8061140157508273ffffffffffffffffffffffffffffffffffffffff166113e9836108ed565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114508161141c565b811461145a575f5ffd5b50565b5f8135905061146b81611447565b92915050565b5f6020828403121561148657611485611414565b5b5f6114938482850161145d565b91505092915050565b5f8115159050919050565b6114b08161149c565b82525050565b5f6020820190506114c95f8301846114a7565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611511826114cf565b61151b81856114d9565b935061152b8185602086016114e9565b611534816114f7565b840191505092915050565b5f6020820190508181035f8301526115578184611507565b905092915050565b5f819050919050565b6115718161155f565b811461157b575f5ffd5b50565b5f8135905061158c81611568565b92915050565b5f602082840312156115a7576115a6611414565b5b5f6115b48482850161157e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115e6826115bd565b9050919050565b6115f6816115dc565b82525050565b5f60208201905061160f5f8301846115ed565b92915050565b61161e816115dc565b8114611628575f5ffd5b50565b5f8135905061163981611615565b92915050565b5f5f6040838503121561165557611654611414565b5b5f6116628582860161162b565b92505060206116738582860161157e565b9150509250929050565b5f5f5f6060848603121561169457611693611414565b5b5f6116a18682870161162b565b93505060206116b28682870161162b565b92505060406116c38682870161157e565b9150509250925092565b5f602082840312156116e2576116e1611414565b5b5f6116ef8482850161162b565b91505092915050565b6117018161155f565b82525050565b5f60208201905061171a5f8301846116f8565b92915050565b6117298161149c565b8114611733575f5ffd5b50565b5f8135905061174481611720565b92915050565b5f5f604083850312156117605761175f611414565b5b5f61176d8582860161162b565b925050602061177e85828601611736565b9150509250929050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6117c6826114f7565b810181811067ffffffffffffffff821117156117e5576117e4611790565b5b80604052505050565b5f6117f761140b565b905061180382826117bd565b919050565b5f67ffffffffffffffff82111561182257611821611790565b5b61182b826114f7565b9050602081019050919050565b828183375f83830152505050565b5f61185861185384611808565b6117ee565b9050828152602081018484840111156118745761187361178c565b5b61187f848285611838565b509392505050565b5f82601f83011261189b5761189a611788565b5b81356118ab848260208601611846565b91505092915050565b5f5f5f5f608085870312156118cc576118cb611414565b5b5f6118d98782880161162b565b94505060206118ea8782880161162b565b93505060406118fb8782880161157e565b925050606085013567ffffffffffffffff81111561191c5761191b611418565b5b61192887828801611887565b91505092959194509250565b5f5f6040838503121561194a57611949611414565b5b5f6119578582860161162b565b92505060206119688582860161162b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119b657607f821691505b6020821081036119c9576119c8611972565b5b50919050565b5f6060820190506119e25f8301866115ed565b6119ef60208301856116f8565b6119fc60408301846115ed565b949350505050565b5f81905092915050565b5f611a18826114cf565b611a228185611a04565b9350611a328185602086016114e9565b80840191505092915050565b5f611a498285611a0e565b9150611a558284611a0e565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f611a8582611a61565b611a8f8185611a6b565b9350611a9f8185602086016114e9565b611aa8816114f7565b840191505092915050565b5f608082019050611ac65f8301876115ed565b611ad360208301866115ed565b611ae060408301856116f8565b8181036060830152611af28184611a7b565b905095945050505050565b5f81519050611b0b81611447565b92915050565b5f60208284031215611b2657611b25611414565b5b5f611b3384828501611afd565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f604082019050611b7c5f8301856115ed565b611b8960208301846116f8565b939250505056fea264697066735822122098c37016f29d3db6e88e9be41db7ce1beaee80eab3811c45283ab34ed21796cc64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x289 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x383 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0x7FE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x199F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D4 SWAP1 PUSH2 0x199F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x41F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x41F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x402 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0x867 JUMP JUMPDEST POP PUSH2 0x43D DUP3 PUSH2 0x8ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x456 DUP3 DUP3 PUSH2 0x451 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4CA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4DD DUP4 DUP4 PUSH2 0x4D8 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x553 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x573 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x6E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x582 DUP3 PUSH2 0x867 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x64E SWAP1 PUSH2 0x199F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67A SWAP1 PUSH2 0x199F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x69C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6E1 PUSH2 0x6DA PUSH2 0x926 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xB4A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6F0 DUP5 DUP5 DUP5 PUSH2 0x45A JUMP JUMPDEST PUSH2 0x704 PUSH2 0x6FB PUSH2 0x926 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0xCB3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x715 DUP3 PUSH2 0x867 JUMP JUMPDEST POP PUSH0 PUSH2 0x71F PUSH2 0xE5F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x768 JUMP JUMPDEST DUP1 PUSH2 0x747 DUP5 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x758 SWAP3 SWAP2 SWAP1 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x872 DUP4 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E4 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x93A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x94A DUP5 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98B JUMPI PUSH2 0x98A DUP2 DUP5 DUP7 PUSH2 0x1137 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA16 JUMPI PUSH2 0x9CA PUSH0 DUP6 PUSH0 PUSH0 PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA95 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBBA JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB1 SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xE58 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD11 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD4C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDCD JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xDC5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBC SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xE56 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4D SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0xE83 DUP5 PUSH2 0x11FA JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0x1790 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xED3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xF34 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xF29 JUMPI PUSH2 0xF28 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0xEE0 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xFB0 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x10E2 JUMPI PUSH0 PUSH2 0xFBF DUP5 PUSH2 0x867 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1029 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x103C JUMPI POP PUSH2 0x103A DUP2 DUP5 PUSH2 0x770 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x107E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1075 SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x10E0 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1142 DUP4 DUP4 DUP4 PUSH2 0x134B JUMP JUMPDEST PUSH2 0x11F5 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B6 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AD SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EC SWAP3 SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1256 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x124C JUMPI PUSH2 0x124B PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1293 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1289 JUMPI PUSH2 0x1288 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x12C2 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x12B8 JUMPI PUSH2 0x12B7 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x12EB JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x12E1 JUMPI PUSH2 0x12E0 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1310 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1306 JUMPI PUSH2 0x1305 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1333 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1329 JUMPI PUSH2 0x1328 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1342 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1402 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x13C3 JUMPI POP PUSH2 0x13C2 DUP5 DUP5 PUSH2 0x770 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1401 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13E9 DUP4 PUSH2 0x8ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1450 DUP2 PUSH2 0x141C JUMP JUMPDEST DUP2 EQ PUSH2 0x145A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146B DUP2 PUSH2 0x1447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1485 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1493 DUP5 DUP3 DUP6 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B0 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14C9 PUSH0 DUP4 ADD DUP5 PUSH2 0x14A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1511 DUP3 PUSH2 0x14CF JUMP JUMPDEST PUSH2 0x151B DUP2 DUP6 PUSH2 0x14D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x152B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST PUSH2 0x1534 DUP2 PUSH2 0x14F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1557 DUP2 DUP5 PUSH2 0x1507 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1571 DUP2 PUSH2 0x155F JUMP JUMPDEST DUP2 EQ PUSH2 0x157B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x158C DUP2 PUSH2 0x1568 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B4 DUP5 DUP3 DUP6 ADD PUSH2 0x157E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15E6 DUP3 PUSH2 0x15BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F6 DUP2 PUSH2 0x15DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x160F PUSH0 DUP4 ADD DUP5 PUSH2 0x15ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x161E DUP2 PUSH2 0x15DC JUMP JUMPDEST DUP2 EQ PUSH2 0x1628 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x1615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1662 DUP6 DUP3 DUP7 ADD PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1673 DUP6 DUP3 DUP7 ADD PUSH2 0x157E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1694 JUMPI PUSH2 0x1693 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16A1 DUP7 DUP3 DUP8 ADD PUSH2 0x162B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16B2 DUP7 DUP3 DUP8 ADD PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16C3 DUP7 DUP3 DUP8 ADD PUSH2 0x157E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E2 JUMPI PUSH2 0x16E1 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16EF DUP5 DUP3 DUP6 ADD PUSH2 0x162B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1701 DUP2 PUSH2 0x155F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171A PUSH0 DUP4 ADD DUP5 PUSH2 0x16F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1729 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP2 EQ PUSH2 0x1733 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1744 DUP2 PUSH2 0x1720 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1760 JUMPI PUSH2 0x175F PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x176D DUP6 DUP3 DUP7 ADD PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x177E DUP6 DUP3 DUP7 ADD PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17C6 DUP3 PUSH2 0x14F7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17E5 JUMPI PUSH2 0x17E4 PUSH2 0x1790 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17F7 PUSH2 0x140B JUMP JUMPDEST SWAP1 POP PUSH2 0x1803 DUP3 DUP3 PUSH2 0x17BD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1822 JUMPI PUSH2 0x1821 PUSH2 0x1790 JUMP JUMPDEST JUMPDEST PUSH2 0x182B DUP3 PUSH2 0x14F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1858 PUSH2 0x1853 DUP5 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x17EE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1874 JUMPI PUSH2 0x1873 PUSH2 0x178C JUMP JUMPDEST JUMPDEST PUSH2 0x187F DUP5 DUP3 DUP6 PUSH2 0x1838 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x1788 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18AB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1846 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18CC JUMPI PUSH2 0x18CB PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D9 DUP8 DUP3 DUP9 ADD PUSH2 0x162B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x18EA DUP8 DUP3 DUP9 ADD PUSH2 0x162B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18FB DUP8 DUP3 DUP9 ADD PUSH2 0x157E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x191C JUMPI PUSH2 0x191B PUSH2 0x1418 JUMP JUMPDEST JUMPDEST PUSH2 0x1928 DUP8 DUP3 DUP9 ADD PUSH2 0x1887 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x194A JUMPI PUSH2 0x1949 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1957 DUP6 DUP3 DUP7 ADD PUSH2 0x162B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1968 DUP6 DUP3 DUP7 ADD PUSH2 0x162B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19C9 JUMPI PUSH2 0x19C8 PUSH2 0x1972 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19E2 PUSH0 DUP4 ADD DUP7 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x19EF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0x19FC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15ED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A18 DUP3 PUSH2 0x14CF JUMP JUMPDEST PUSH2 0x1A22 DUP2 DUP6 PUSH2 0x1A04 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A32 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A49 DUP3 DUP6 PUSH2 0x1A0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A55 DUP3 DUP5 PUSH2 0x1A0E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A85 DUP3 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x1A8F DUP2 DUP6 PUSH2 0x1A6B JUMP JUMPDEST SWAP4 POP PUSH2 0x1A9F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST PUSH2 0x1AA8 DUP2 PUSH2 0x14F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1AC6 PUSH0 DUP4 ADD DUP8 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x1AD3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x1AE0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16F8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1AF2 DUP2 DUP5 PUSH2 0x1A7B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B0B DUP2 PUSH2 0x1447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B26 JUMPI PUSH2 0x1B25 PUSH2 0x1414 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B33 DUP5 DUP3 DUP6 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B7C PUSH0 DUP4 ADD DUP6 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x1B89 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xC3 PUSH17 0x16F29D3DB6E88E9BE41DB7CE1BEAEE80EA 0xB3 DUP2 SHR GASLIMIT 0x28 GASPRICE 0xB3 0x4E 0xD2 OR SWAP7 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "117:76:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4786:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1919:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4984:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2676:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1560:300;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;2364:89::-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;4142:578::-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;4786:132::-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2184:118::-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;1919:208::-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2517:93::-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;3927:153::-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;763:146:9:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;16212:241:1:-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;14492:120:1:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;8861:795::-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;15665:312::-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;985:924:5:-;1182:1;1165:2;:14;;;:18;1161:742;;;1219:2;1203:36;;;1240:8;1250:4;1256:7;1265:4;1203:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:1;1560:6;:13;:18;1556:323;;1700:2;1664:39;;;;;;;;;;;:::i;:::-;;;;;;;;1556:323;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;1327:41;;;1317:51;;;:6;:51;;;;1313:182;;1473:2;1437:39;;;;;;;;;;;:::i;:::-;;;;;;;;1313:182;1271:238;1161:742;985:924;;;;;:::o;3173:92:1:-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;637:632:8:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;944:6;940:2;936:15;928:6;924:28;917:35;;979:247;986:4;979:247;;;1010:5;;;;;;;;1114:10;1109:2;1102:5;1098:14;1093:32;1088:3;1080:46;1170:2;1161:11;;;;;;:::i;:::-;;;;;1203:1;1194:5;:10;979:247;1190:21;979:247;1246:6;1239:13;;;;;637:632;;;:::o;5732:115:1:-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;25316:916:11:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;6401:272:1:-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:329::-;5467:6;5516:2;5504:9;5495:7;5491:23;5487:32;5484:119;;;5522:79;;:::i;:::-;5484:119;5642:1;5667:53;5712:7;5703:6;5692:9;5688:22;5667:53;:::i;:::-;5657:63;;5613:117;5408:329;;;;:::o;5743:118::-;5830:24;5848:5;5830:24;:::i;:::-;5825:3;5818:37;5743:118;;:::o;5867:222::-;5960:4;5998:2;5987:9;5983:18;5975:26;;6011:71;6079:1;6068:9;6064:17;6055:6;6011:71;:::i;:::-;5867:222;;;;:::o;6095:116::-;6165:21;6180:5;6165:21;:::i;:::-;6158:5;6155:32;6145:60;;6201:1;6198;6191:12;6145:60;6095:116;:::o;6217:133::-;6260:5;6298:6;6285:20;6276:29;;6314:30;6338:5;6314:30;:::i;:::-;6217:133;;;;:::o;6356:468::-;6421:6;6429;6478:2;6466:9;6457:7;6453:23;6449:32;6446:119;;;6484:79;;:::i;:::-;6446:119;6604:1;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;:::i;:::-;6619:63;;6575:117;6731:2;6757:50;6799:7;6790:6;6779:9;6775:22;6757:50;:::i;:::-;6747:60;;6702:115;6356:468;;;;;:::o;6830:117::-;6939:1;6936;6929:12;6953:117;7062:1;7059;7052:12;7076:180;7124:77;7121:1;7114:88;7221:4;7218:1;7211:15;7245:4;7242:1;7235:15;7262:281;7345:27;7367:4;7345:27;:::i;:::-;7337:6;7333:40;7475:6;7463:10;7460:22;7439:18;7427:10;7424:34;7421:62;7418:88;;;7486:18;;:::i;:::-;7418:88;7526:10;7522:2;7515:22;7305:238;7262:281;;:::o;7549:129::-;7583:6;7610:20;;:::i;:::-;7600:30;;7639:33;7667:4;7659:6;7639:33;:::i;:::-;7549:129;;;:::o;7684:307::-;7745:4;7835:18;7827:6;7824:30;7821:56;;;7857:18;;:::i;:::-;7821:56;7895:29;7917:6;7895:29;:::i;:::-;7887:37;;7979:4;7973;7969:15;7961:23;;7684:307;;;:::o;7997:148::-;8095:6;8090:3;8085;8072:30;8136:1;8127:6;8122:3;8118:16;8111:27;7997:148;;;:::o;8151:423::-;8228:5;8253:65;8269:48;8310:6;8269:48;:::i;:::-;8253:65;:::i;:::-;8244:74;;8341:6;8334:5;8327:21;8379:4;8372:5;8368:16;8417:3;8408:6;8403:3;8399:16;8396:25;8393:112;;;8424:79;;:::i;:::-;8393:112;8514:54;8561:6;8556:3;8551;8514:54;:::i;:::-;8234:340;8151:423;;;;;:::o;8593:338::-;8648:5;8697:3;8690:4;8682:6;8678:17;8674:27;8664:122;;8705:79;;:::i;:::-;8664:122;8822:6;8809:20;8847:78;8921:3;8913:6;8906:4;8898:6;8894:17;8847:78;:::i;:::-;8838:87;;8654:277;8593:338;;;;:::o;8937:943::-;9032:6;9040;9048;9056;9105:3;9093:9;9084:7;9080:23;9076:33;9073:120;;;9112:79;;:::i;:::-;9073:120;9232:1;9257:53;9302:7;9293:6;9282:9;9278:22;9257:53;:::i;:::-;9247:63;;9203:117;9359:2;9385:53;9430:7;9421:6;9410:9;9406:22;9385:53;:::i;:::-;9375:63;;9330:118;9487:2;9513:53;9558:7;9549:6;9538:9;9534:22;9513:53;:::i;:::-;9503:63;;9458:118;9643:2;9632:9;9628:18;9615:32;9674:18;9666:6;9663:30;9660:117;;;9696:79;;:::i;:::-;9660:117;9801:62;9855:7;9846:6;9835:9;9831:22;9801:62;:::i;:::-;9791:72;;9586:287;8937:943;;;;;;;:::o;9886:474::-;9954:6;9962;10011:2;9999:9;9990:7;9986:23;9982:32;9979:119;;;10017:79;;:::i;:::-;9979:119;10137:1;10162:53;10207:7;10198:6;10187:9;10183:22;10162:53;:::i;:::-;10152:63;;10108:117;10264:2;10290:53;10335:7;10326:6;10315:9;10311:22;10290:53;:::i;:::-;10280:63;;10235:118;9886:474;;;;;:::o;10366:180::-;10414:77;10411:1;10404:88;10511:4;10508:1;10501:15;10535:4;10532:1;10525:15;10552:320;10596:6;10633:1;10627:4;10623:12;10613:22;;10680:1;10674:4;10670:12;10701:18;10691:81;;10757:4;10749:6;10745:17;10735:27;;10691:81;10819:2;10811:6;10808:14;10788:18;10785:38;10782:84;;10838:18;;:::i;:::-;10782:84;10603:269;10552:320;;;:::o;10878:442::-;11027:4;11065:2;11054:9;11050:18;11042:26;;11078:71;11146:1;11135:9;11131:17;11122:6;11078:71;:::i;:::-;11159:72;11227:2;11216:9;11212:18;11203:6;11159:72;:::i;:::-;11241;11309:2;11298:9;11294:18;11285:6;11241:72;:::i;:::-;10878:442;;;;;;:::o;11326:148::-;11428:11;11465:3;11450:18;;11326:148;;;;:::o;11480:390::-;11586:3;11614:39;11647:5;11614:39;:::i;:::-;11669:89;11751:6;11746:3;11669:89;:::i;:::-;11662:96;;11767:65;11825:6;11820:3;11813:4;11806:5;11802:16;11767:65;:::i;:::-;11857:6;11852:3;11848:16;11841:23;;11590:280;11480:390;;;;:::o;11876:435::-;12056:3;12078:95;12169:3;12160:6;12078:95;:::i;:::-;12071:102;;12190:95;12281:3;12272:6;12190:95;:::i;:::-;12183:102;;12302:3;12295:10;;11876:435;;;;;:::o;12317:98::-;12368:6;12402:5;12396:12;12386:22;;12317:98;;;:::o;12421:168::-;12504:11;12538:6;12533:3;12526:19;12578:4;12573:3;12569:14;12554:29;;12421:168;;;;:::o;12595:373::-;12681:3;12709:38;12741:5;12709:38;:::i;:::-;12763:70;12826:6;12821:3;12763:70;:::i;:::-;12756:77;;12842:65;12900:6;12895:3;12888:4;12881:5;12877:16;12842:65;:::i;:::-;12932:29;12954:6;12932:29;:::i;:::-;12927:3;12923:39;12916:46;;12685:283;12595:373;;;;:::o;12974:640::-;13169:4;13207:3;13196:9;13192:19;13184:27;;13221:71;13289:1;13278:9;13274:17;13265:6;13221:71;:::i;:::-;13302:72;13370:2;13359:9;13355:18;13346:6;13302:72;:::i;:::-;13384;13452:2;13441:9;13437:18;13428:6;13384:72;:::i;:::-;13503:9;13497:4;13493:20;13488:2;13477:9;13473:18;13466:48;13531:76;13602:4;13593:6;13531:76;:::i;:::-;13523:84;;12974:640;;;;;;;:::o;13620:141::-;13676:5;13707:6;13701:13;13692:22;;13723:32;13749:5;13723:32;:::i;:::-;13620:141;;;;:::o;13767:349::-;13836:6;13885:2;13873:9;13864:7;13860:23;13856:32;13853:119;;;13891:79;;:::i;:::-;13853:119;14011:1;14036:63;14091:7;14082:6;14071:9;14067:22;14036:63;:::i;:::-;14026:73;;13982:127;13767:349;;;;:::o;14122:180::-;14170:77;14167:1;14160:88;14267:4;14264:1;14257:15;14291:4;14288:1;14281:15;14308:332;14429:4;14467:2;14456:9;14452:18;14444:26;;14480:71;14548:1;14537:9;14533:17;14524:6;14480:71;:::i;:::-;14561:72;14629:2;14618:9;14614:18;14605:6;14561:72;:::i;:::-;14308:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1422000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 193,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 193,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 193,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 150,
									"end": 191,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 150,
									"end": 191,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 150,
									"end": 191,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 150,
									"end": 191,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 191,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 150,
									"end": 191,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 191,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 191,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 150,
									"end": 191,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 191,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 150,
									"end": 191,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "4D79546F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "4D544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1454,
									"end": 1459,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1451,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1446,
									"end": 1459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1476,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1469,
									"end": 1486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 117,
									"end": 193,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 117,
									"end": 193,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 15,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 117,
									"end": 193,
									"name": "tag",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 117,
									"end": 193,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 117,
									"end": 193,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 193,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 117,
									"end": 193,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 193,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 193,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 117,
									"end": 193,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 193,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098c37016f29d3db6e88e9be41db7ce1beaee80eab3811c45283ab34ed21796cc64736f6c634300081c0033",
									".code": [
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "B88D4FDE"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "C87B56DD"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "E985E9C5"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "6FDDE03"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "81812FC"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "95EA7B3"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "42842E0E"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 193,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1560,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1560,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2364,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2364,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3496,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3496,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3496,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3322,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3322,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4142,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4142,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4786,
											"end": 4918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4786,
											"end": 4918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2184,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2184,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2184,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1919,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1919,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1919,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2517,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2517,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3717,
											"end": 3861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3717,
											"end": 3861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4984,
											"end": 5217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4984,
											"end": 5217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2676,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2676,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2676,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3927,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3927,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3927,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1801,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1841,
											"end": 1852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1817,
											"end": 1853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1853,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1817,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2422,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2434,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2434,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3582,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3604,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3582,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3635,
											"end": 3642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3622,
											"end": 3643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3643,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3622,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3415,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3393,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3393,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4232,
											"end": 4319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4275,
											"end": 4308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4319,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4232,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4561,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4569,
											"end": 4571,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4573,
											"end": 4580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4582,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4582,
											"end": 4594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4594,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4582,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4561,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4595,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4561,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4626,
											"end": 4630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4605,
											"end": 4714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4689,
											"end": 4702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4653,
											"end": 4703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4714,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4605,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4222,
											"end": 4720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4889,
											"end": 4893,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4895,
											"end": 4897,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4899,
											"end": 4906,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4872,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2287,
											"end": 2294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2273,
											"end": 2295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2295,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2273,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"source": 1,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2047,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2577,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2596,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2589,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2589,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3821,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3821,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3821,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3833,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3821,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3843,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3853,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3802,
											"end": 3854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3854,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3802,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5110,
											"end": 5114,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5118,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5120,
											"end": 5127,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5097,
											"end": 5128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5128,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5097,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5172,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5172,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5172,
											"end": 5184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5184,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5172,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5190,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5194,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5203,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5209,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5138,
											"end": 5210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5210,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5138,
											"end": 5210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2753,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2779,
											"end": 2786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2765,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2765,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2822,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2822,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2874,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2900,
											"end": 2907,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2900,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2900,
											"end": 2918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2877,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4062,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4072,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 4080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16212,
											"end": 16453,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 16212,
											"end": 16453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16275,
											"end": 16282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16294,
											"end": 16307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16310,
											"end": 16327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 16319,
											"end": 16326,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 16310,
											"end": 16327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16310,
											"end": 16327,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 16310,
											"end": 16327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16358,
											"end": 16359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16341,
											"end": 16360,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16341,
											"end": 16360,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16341,
											"end": 16346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16341,
											"end": 16360,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16341,
											"end": 16360,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16341,
											"end": 16360,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16337,
											"end": 16425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 16337,
											"end": 16425,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16406,
											"end": 16413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 16383,
											"end": 16414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16383,
											"end": 16414,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16337,
											"end": 16425,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 16337,
											"end": 16425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16441,
											"end": 16446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16212,
											"end": 16453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16212,
											"end": 16453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16212,
											"end": 16453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16212,
											"end": 16453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6090,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5963,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6059,
											"end": 6074,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6059,
											"end": 6083,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14492,
											"end": 14612,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 14492,
											"end": 14612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14572,
											"end": 14605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 14581,
											"end": 14583,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14585,
											"end": 14592,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14594,
											"end": 14598,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14600,
											"end": 14604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14572,
											"end": 14580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 14572,
											"end": 14605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14572,
											"end": 14605,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 14572,
											"end": 14605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14492,
											"end": 14612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 9656,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 8861,
											"end": 9656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8947,
											"end": 8954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8966,
											"end": 8978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8981,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8990,
											"end": 8997,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8981,
											"end": 8989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 8981,
											"end": 8998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8981,
											"end": 8998,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8981,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 8998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 8998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9054,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9054,
											"end": 9140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 9109,
											"end": 9113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9121,
											"end": 9128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 9092,
											"end": 9129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9129,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 9092,
											"end": 9129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9054,
											"end": 9140,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9054,
											"end": 9140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9200,
											"end": 9201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9184,
											"end": 9188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9180,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 9180,
											"end": 9436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9300,
											"end": 9348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 9317,
											"end": 9318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9328,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9338,
											"end": 9339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9342,
											"end": 9347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 9308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 9300,
											"end": 9348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9300,
											"end": 9348,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 9300,
											"end": 9348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 9411,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9391,
											"end": 9400,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9401,
											"end": 9405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9180,
											"end": 9436,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 9180,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9450,
											"end": 9466,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9450,
											"end": 9466,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9466,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9450,
											"end": 9466,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9466,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9446,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 9446,
											"end": 9553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9527,
											"end": 9528,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9510,
											"end": 9519,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9520,
											"end": 9522,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9446,
											"end": 9553,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 9446,
											"end": 9553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9582,
											"end": 9584,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9570,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9578,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9619,
											"end": 9626,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9617,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9609,
											"end": 9613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9627,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 9645,
											"end": 9649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 9656,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 9656,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 9656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 9656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 9656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 9656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15665,
											"end": 15977,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 15665,
											"end": 15977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15792,
											"end": 15793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15772,
											"end": 15794,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15772,
											"end": 15794,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15772,
											"end": 15780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15772,
											"end": 15794,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15772,
											"end": 15794,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15772,
											"end": 15794,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15768,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 15768,
											"end": 15859,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15839,
											"end": 15847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "PUSH",
											"source": 1,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 15817,
											"end": 15848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15848,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15768,
											"end": 15859,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 15768,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15906,
											"end": 15914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15886,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15887,
											"end": 15892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15868,
											"end": 15893,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15894,
											"end": 15902,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15951,
											"end": 15959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15944,
											"end": 15949,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15961,
											"end": 15969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 15929,
											"end": 15970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15970,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 15665,
											"end": 15977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15665,
											"end": 15977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15665,
											"end": 15977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15665,
											"end": 15977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1909,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 985,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1182,
											"end": 1183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1167,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1165,
											"end": 1179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1179,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1903,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1161,
											"end": 1903,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1239,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1239,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1239,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 1240,
											"end": 1248,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1254,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1263,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1269,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1203,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1203,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1203,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1573,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1578,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1556,
											"end": 1879,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1664,
											"end": 1703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1879,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1556,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 1838,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1814,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1823,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1839,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1199,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1368,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 1327,
											"end": 1368,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1327,
											"end": 1368,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1368,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1368,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1368,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1368,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1368,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1368,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1368,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1313,
											"end": 1495,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1437,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1476,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1495,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1313,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1903,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1161,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3265,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3173,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 940,
											"end": 942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 928,
											"end": 934,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 924,
											"end": 952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 917,
											"end": 952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 917,
											"end": 952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 986,
											"end": 990,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1124,
											"name": "PUSH",
											"source": 8,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1109,
											"end": 1111,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1112,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1125,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1088,
											"end": 1091,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1126,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1161,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1204,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 1190,
											"end": 1211,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 979,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1252,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5847,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5732,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5839,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5817,
											"end": 5840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5817,
											"end": 5840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14794,
											"end": 15456,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 14794,
											"end": 15456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14954,
											"end": 14963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14954,
											"end": 14985,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14954,
											"end": 14985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 14954,
											"end": 14985,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14954,
											"end": 14985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14983,
											"end": 14984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 14971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14954,
											"end": 14985,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 14954,
											"end": 14985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14950,
											"end": 15410,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14950,
											"end": 15410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 14950,
											"end": 15410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15001,
											"end": 15014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15017,
											"end": 15039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 15031,
											"end": 15038,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15017,
											"end": 15030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 15017,
											"end": 15039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15017,
											"end": 15039,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 15017,
											"end": 15039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15001,
											"end": 15039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15001,
											"end": 15039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15183,
											"end": 15184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15167,
											"end": 15185,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15167,
											"end": 15185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15171,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15185,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15167,
											"end": 15185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15185,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15185,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 15167,
											"end": 15202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15198,
											"end": 15202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15202,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15189,
											"end": 15202,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15202,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15189,
											"end": 15202,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15202,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15202,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 15167,
											"end": 15202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15236,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 15167,
											"end": 15236,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15207,
											"end": 15236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 15224,
											"end": 15229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15231,
											"end": 15235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15207,
											"end": 15223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 15207,
											"end": 15236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15207,
											"end": 15236,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 15207,
											"end": 15236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15236,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15236,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 15167,
											"end": 15236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15163,
											"end": 15305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15163,
											"end": 15305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 15163,
											"end": 15305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15285,
											"end": 15289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "PUSH",
											"source": 1,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 15263,
											"end": 15290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15290,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15163,
											"end": 15305,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 15163,
											"end": 15305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15323,
											"end": 15332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15319,
											"end": 15400,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15319,
											"end": 15400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 15319,
											"end": 15400,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15377,
											"end": 15384,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15366,
											"end": 15371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15357,
											"end": 15385,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 15319,
											"end": 15400,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 15319,
											"end": 15400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14987,
											"end": 15410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14950,
											"end": 15410,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 14950,
											"end": 15410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15447,
											"end": 15449,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15435,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15436,
											"end": 15443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14794,
											"end": 15456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14794,
											"end": 15456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14794,
											"end": 15456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14794,
											"end": 15456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14794,
											"end": 15456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7473,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 7105,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7217,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 7231,
											"end": 7236,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7238,
											"end": 7245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7254,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7217,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7217,
											"end": 7255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7217,
											"end": 7255,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 7217,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7212,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 7212,
											"end": 7467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7275,
											"end": 7294,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7275,
											"end": 7294,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7275,
											"end": 7280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7275,
											"end": 7294,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7275,
											"end": 7294,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7275,
											"end": 7294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 7271,
											"end": 7457,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7321,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7352,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7457,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 7271,
											"end": 7457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7434,
											"end": 7441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7398,
											"end": 7442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7442,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7212,
											"end": 7467,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 7212,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25369,
											"end": 25376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25388,
											"end": 25402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25405,
											"end": 25406,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 25388,
											"end": 25406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25388,
											"end": 25406,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25453,
											"end": 25461,
											"name": "PUSH",
											"source": 11,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 25444,
											"end": 25449,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25444,
											"end": 25461,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 25440,
											"end": 25543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 25440,
											"end": 25543,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25490,
											"end": 25498,
											"name": "PUSH",
											"source": 11,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 25481,
											"end": 25498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25481,
											"end": 25498,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25526,
											"end": 25528,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 25516,
											"end": 25528,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25516,
											"end": 25528,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25516,
											"end": 25528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25516,
											"end": 25528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25440,
											"end": 25543,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 25440,
											"end": 25543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25569,
											"end": 25577,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 25560,
											"end": 25565,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25560,
											"end": 25577,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 25556,
											"end": 25659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 25556,
											"end": 25659,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25606,
											"end": 25614,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 25597,
											"end": 25614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25597,
											"end": 25614,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25642,
											"end": 25644,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 25632,
											"end": 25644,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25632,
											"end": 25644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25632,
											"end": 25644,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25632,
											"end": 25644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25556,
											"end": 25659,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 25556,
											"end": 25659,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25685,
											"end": 25693,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 25676,
											"end": 25681,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25676,
											"end": 25693,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 25672,
											"end": 25775,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 25672,
											"end": 25775,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25722,
											"end": 25730,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 25713,
											"end": 25730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25713,
											"end": 25730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25758,
											"end": 25760,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 25748,
											"end": 25760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25748,
											"end": 25760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25748,
											"end": 25760,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25748,
											"end": 25760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25672,
											"end": 25775,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 25672,
											"end": 25775,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25801,
											"end": 25808,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 25792,
											"end": 25797,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25792,
											"end": 25808,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 25788,
											"end": 25888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 25788,
											"end": 25888,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25837,
											"end": 25844,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 25828,
											"end": 25844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25828,
											"end": 25844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25872,
											"end": 25873,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 25862,
											"end": 25873,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25862,
											"end": 25873,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25862,
											"end": 25873,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25862,
											"end": 25873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25788,
											"end": 25888,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 25788,
											"end": 25888,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25914,
											"end": 25921,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 25905,
											"end": 25910,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25905,
											"end": 25921,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 25901,
											"end": 26001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 25901,
											"end": 26001,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25950,
											"end": 25957,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 25941,
											"end": 25957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25985,
											"end": 25986,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 25975,
											"end": 25986,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 25975,
											"end": 25986,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 25975,
											"end": 25986,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25975,
											"end": 25986,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25901,
											"end": 26001,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 25901,
											"end": 26001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26027,
											"end": 26034,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 26018,
											"end": 26023,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26018,
											"end": 26034,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 26014,
											"end": 26114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 26014,
											"end": 26114,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 26063,
											"end": 26070,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 26054,
											"end": 26070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 26054,
											"end": 26070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26098,
											"end": 26099,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 26088,
											"end": 26099,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26088,
											"end": 26099,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26088,
											"end": 26099,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26088,
											"end": 26099,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26014,
											"end": 26114,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 26014,
											"end": 26114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26140,
											"end": 26147,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 26131,
											"end": 26136,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 26131,
											"end": 26147,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 26127,
											"end": 26193,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 26127,
											"end": 26193,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 26177,
											"end": 26178,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 26167,
											"end": 26178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26127,
											"end": 26193,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 26127,
											"end": 26193,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 26219,
											"end": 26225,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 26212,
											"end": 26225,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 26212,
											"end": 26225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 26212,
											"end": 26225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 25316,
											"end": 26232,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 25316,
											"end": 26232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6401,
											"end": 6673,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6401,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6504,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6560,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6539,
											"end": 6560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6546,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6560,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6539,
											"end": 6560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6560,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6560,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6666,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 6539,
											"end": 6666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6586,
											"end": 6593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6582,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6593,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 6577,
											"end": 6629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6614,
											"end": 6619,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6597,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6597,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6629,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 6577,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6577,
											"end": 6665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6658,
											"end": 6665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6633,
											"end": 6665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6633,
											"end": 6654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6654,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6633,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6633,
											"end": 6665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6665,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6665,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6577,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6666,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 6539,
											"end": 6666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6520,
											"end": 6666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6520,
											"end": 6666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6673,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6673,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5518,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5495,
											"end": 5502,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5487,
											"end": 5519,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 5522,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 5522,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 5484,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 5712,
											"end": 5719,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5688,
											"end": 5710,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 5667,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5613,
											"end": 5730,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5737,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "tag",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 5848,
											"end": 5853,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 5830,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 5830,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5825,
											"end": 5828,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5818,
											"end": 5855,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5743,
											"end": 5861,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5743,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5960,
											"end": 5964,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 5996,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5975,
											"end": 6001,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6064,
											"end": 6081,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 6011,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 6011,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 6089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5867,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "tag",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 6165,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6158,
											"end": 6163,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6155,
											"end": 6187,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6203,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6095,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "tag",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6285,
											"end": 6305,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6478,
											"end": 6480,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6453,
											"end": 6476,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6449,
											"end": 6481,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 6484,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 6674,
											"end": 6681,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6665,
											"end": 6671,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 6629,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6575,
											"end": 6692,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6731,
											"end": 6733,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 6799,
											"end": 6806,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 6757,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "tag",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7124,
											"end": 7201,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7202,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7211,
											"end": 7226,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 7367,
											"end": 7371,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 7345,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7333,
											"end": 7373,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7463,
											"end": 7473,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7460,
											"end": 7482,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7427,
											"end": 7437,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7424,
											"end": 7458,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7421,
											"end": 7483,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 7486,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7522,
											"end": 7524,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7537,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7305,
											"end": 7543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7262,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 7610,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 7639,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7549,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7745,
											"end": 7749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 7857,
											"end": 7875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 7895,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7969,
											"end": 7984,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7684,
											"end": 7991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8072,
											"end": 8102,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8118,
											"end": 8134,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8111,
											"end": 8138,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7997,
											"end": 8145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 8269,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 8253,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8334,
											"end": 8339,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8327,
											"end": 8348,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8377,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8368,
											"end": 8384,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8417,
											"end": 8420,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8399,
											"end": 8415,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 8424,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8556,
											"end": 8559,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8551,
											"end": 8554,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 8514,
											"end": 8568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "tag",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8234,
											"end": 8574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8151,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8648,
											"end": 8653,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8700,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8678,
											"end": 8695,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8674,
											"end": 8701,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8809,
											"end": 8829,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8906,
											"end": 8910,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8894,
											"end": 8911,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 8847,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8654,
											"end": 8931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8593,
											"end": 8931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9032,
											"end": 9038,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9054,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9076,
											"end": 9109,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 9112,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 9302,
											"end": 9309,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9278,
											"end": 9300,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 9257,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9203,
											"end": 9320,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9359,
											"end": 9361,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9410,
											"end": 9419,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9406,
											"end": 9428,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 9385,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9330,
											"end": 9448,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 9558,
											"end": 9565,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 9513,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9458,
											"end": 9576,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9643,
											"end": 9645,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9615,
											"end": 9647,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9666,
											"end": 9672,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9663,
											"end": 9693,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 9696,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 9855,
											"end": 9862,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9835,
											"end": 9844,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9831,
											"end": 9853,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 9801,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9586,
											"end": 9873,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8937,
											"end": 9880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10011,
											"end": 10013,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9986,
											"end": 10009,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9982,
											"end": 10014,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 10017,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10187,
											"end": 10196,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10183,
											"end": 10205,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 10162,
											"end": 10215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10108,
											"end": 10225,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10311,
											"end": 10333,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 10290,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10235,
											"end": 10353,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9886,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10414,
											"end": 10491,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10492,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10511,
											"end": 10515,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 10508,
											"end": 10509,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 10501,
											"end": 10516,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10540,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10596,
											"end": 10602,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10634,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10623,
											"end": 10635,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10674,
											"end": 10678,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10670,
											"end": 10682,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10757,
											"end": 10761,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 10749,
											"end": 10755,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10811,
											"end": 10817,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10808,
											"end": 10822,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10788,
											"end": 10806,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10785,
											"end": 10823,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 10838,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10603,
											"end": 10872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "tag",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11027,
											"end": 11031,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11067,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11054,
											"end": 11063,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11042,
											"end": 11068,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11042,
											"end": 11068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 11146,
											"end": 11147,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11135,
											"end": 11144,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11131,
											"end": 11148,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11122,
											"end": 11128,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 11078,
											"end": 11149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 11227,
											"end": 11229,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11216,
											"end": 11225,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11203,
											"end": 11209,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 11159,
											"end": 11231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 11159,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 11309,
											"end": 11311,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11298,
											"end": 11307,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11294,
											"end": 11312,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11285,
											"end": 11291,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 11241,
											"end": 11313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 11241,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 11320,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 11320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11326,
											"end": 11474,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 11326,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11428,
											"end": 11439,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11465,
											"end": 11468,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11450,
											"end": 11468,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11450,
											"end": 11468,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11326,
											"end": 11474,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11326,
											"end": 11474,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11326,
											"end": 11474,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11326,
											"end": 11474,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11326,
											"end": 11474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11480,
											"end": 11870,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 11480,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11586,
											"end": 11589,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11614,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 11647,
											"end": 11652,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11614,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 11614,
											"end": 11653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11614,
											"end": 11653,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 11614,
											"end": 11653,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11669,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 11751,
											"end": 11757,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11746,
											"end": 11749,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11669,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 11669,
											"end": 11758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11669,
											"end": 11758,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 11669,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11662,
											"end": 11758,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11662,
											"end": 11758,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11767,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 11825,
											"end": 11831,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11820,
											"end": 11823,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11813,
											"end": 11817,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11806,
											"end": 11811,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11802,
											"end": 11818,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11767,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 11767,
											"end": 11832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11767,
											"end": 11832,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 11767,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11857,
											"end": 11863,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11852,
											"end": 11855,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11848,
											"end": 11864,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11841,
											"end": 11864,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11841,
											"end": 11864,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11590,
											"end": 11870,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11480,
											"end": 11870,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11480,
											"end": 11870,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11480,
											"end": 11870,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11480,
											"end": 11870,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11480,
											"end": 11870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "tag",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12056,
											"end": 12059,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12078,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 12169,
											"end": 12172,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12160,
											"end": 12166,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12078,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 12078,
											"end": 12173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12078,
											"end": 12173,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 12078,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12071,
											"end": 12173,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12071,
											"end": 12173,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12190,
											"end": 12285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 12281,
											"end": 12284,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12272,
											"end": 12278,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12190,
											"end": 12285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 12190,
											"end": 12285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12190,
											"end": 12285,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 12190,
											"end": 12285,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12183,
											"end": 12285,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12183,
											"end": 12285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12302,
											"end": 12305,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12295,
											"end": 12305,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12295,
											"end": 12305,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11876,
											"end": 12311,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11876,
											"end": 12311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12317,
											"end": 12415,
											"name": "tag",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 12317,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12368,
											"end": 12374,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12402,
											"end": 12407,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12396,
											"end": 12408,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12386,
											"end": 12408,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12386,
											"end": 12408,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12317,
											"end": 12415,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12317,
											"end": 12415,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12317,
											"end": 12415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12317,
											"end": 12415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12421,
											"end": 12589,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 12421,
											"end": 12589,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12504,
											"end": 12515,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12538,
											"end": 12544,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12533,
											"end": 12536,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12526,
											"end": 12545,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12578,
											"end": 12582,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12576,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12569,
											"end": 12583,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12554,
											"end": 12583,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12554,
											"end": 12583,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12421,
											"end": 12589,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12421,
											"end": 12589,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12421,
											"end": 12589,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12421,
											"end": 12589,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12421,
											"end": 12589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12595,
											"end": 12968,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 12595,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12681,
											"end": 12684,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12709,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 12741,
											"end": 12746,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12709,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 12709,
											"end": 12747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12709,
											"end": 12747,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 12709,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12763,
											"end": 12833,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 12826,
											"end": 12832,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12821,
											"end": 12824,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12763,
											"end": 12833,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 12763,
											"end": 12833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12763,
											"end": 12833,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 12763,
											"end": 12833,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12756,
											"end": 12833,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 12756,
											"end": 12833,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12842,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 12900,
											"end": 12906,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12895,
											"end": 12898,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12888,
											"end": 12892,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12881,
											"end": 12886,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12877,
											"end": 12893,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12842,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 12842,
											"end": 12907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12842,
											"end": 12907,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 12842,
											"end": 12907,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12932,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 12954,
											"end": 12960,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12932,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 12932,
											"end": 12961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12932,
											"end": 12961,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 12932,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12927,
											"end": 12930,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12923,
											"end": 12962,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12916,
											"end": 12962,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12916,
											"end": 12962,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12685,
											"end": 12968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12595,
											"end": 12968,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12595,
											"end": 12968,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12595,
											"end": 12968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12595,
											"end": 12968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12595,
											"end": 12968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13169,
											"end": 13173,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13207,
											"end": 13210,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 13196,
											"end": 13205,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13192,
											"end": 13211,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13184,
											"end": 13211,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13184,
											"end": 13211,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13221,
											"end": 13292,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 13289,
											"end": 13290,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13278,
											"end": 13287,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13274,
											"end": 13291,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13265,
											"end": 13271,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 13221,
											"end": 13292,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 13221,
											"end": 13292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13221,
											"end": 13292,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 13221,
											"end": 13292,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13302,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 13370,
											"end": 13372,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13359,
											"end": 13368,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13355,
											"end": 13373,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13346,
											"end": 13352,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13302,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 13302,
											"end": 13374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13302,
											"end": 13374,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 13302,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13384,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 13452,
											"end": 13454,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13441,
											"end": 13450,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13437,
											"end": 13455,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13428,
											"end": 13434,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13384,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 13384,
											"end": 13456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13384,
											"end": 13456,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 13384,
											"end": 13456,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13503,
											"end": 13512,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13497,
											"end": 13501,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13488,
											"end": 13490,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 13477,
											"end": 13486,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13473,
											"end": 13491,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13466,
											"end": 13514,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13531,
											"end": 13607,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 13602,
											"end": 13606,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13593,
											"end": 13599,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13531,
											"end": 13607,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 13531,
											"end": 13607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13531,
											"end": 13607,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 13531,
											"end": 13607,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13523,
											"end": 13607,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13523,
											"end": 13607,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12974,
											"end": 13614,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12974,
											"end": 13614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13620,
											"end": 13761,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 13620,
											"end": 13761,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13676,
											"end": 13681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13707,
											"end": 13713,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13701,
											"end": 13714,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13692,
											"end": 13714,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13692,
											"end": 13714,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13723,
											"end": 13755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 13749,
											"end": 13754,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13723,
											"end": 13755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 13723,
											"end": 13755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13723,
											"end": 13755,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 13723,
											"end": 13755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13620,
											"end": 13761,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13620,
											"end": 13761,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13620,
											"end": 13761,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13620,
											"end": 13761,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13620,
											"end": 13761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13767,
											"end": 14116,
											"name": "tag",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 13767,
											"end": 14116,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13836,
											"end": 13842,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13885,
											"end": 13887,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13873,
											"end": 13882,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13864,
											"end": 13871,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13860,
											"end": 13883,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13856,
											"end": 13888,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 13891,
											"end": 13970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 13891,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 13853,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14011,
											"end": 14012,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14036,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 14091,
											"end": 14098,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14082,
											"end": 14088,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14071,
											"end": 14080,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14036,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 14036,
											"end": 14099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14036,
											"end": 14099,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 14036,
											"end": 14099,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14026,
											"end": 14099,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14026,
											"end": 14099,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13982,
											"end": 14109,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13767,
											"end": 14116,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13767,
											"end": 14116,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13767,
											"end": 14116,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13767,
											"end": 14116,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13767,
											"end": 14116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14122,
											"end": 14302,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 14122,
											"end": 14302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14170,
											"end": 14247,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14167,
											"end": 14168,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14160,
											"end": 14248,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14267,
											"end": 14271,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 14264,
											"end": 14265,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 14257,
											"end": 14272,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14291,
											"end": 14295,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14288,
											"end": 14289,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14281,
											"end": 14296,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14429,
											"end": 14433,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14467,
											"end": 14469,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 14456,
											"end": 14465,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14452,
											"end": 14470,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14444,
											"end": 14470,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14444,
											"end": 14470,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14480,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 14548,
											"end": 14549,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14537,
											"end": 14546,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14533,
											"end": 14550,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14524,
											"end": 14530,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14480,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 14480,
											"end": 14551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14480,
											"end": 14551,
											"name": "tag",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 14480,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14561,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 14629,
											"end": 14631,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14618,
											"end": 14627,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14614,
											"end": 14632,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14605,
											"end": 14611,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14561,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 14561,
											"end": 14633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14561,
											"end": 14633,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 14561,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14308,
											"end": 14640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14308,
											"end": 14640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x26883e7c1eef95943dd4742e997fe1931cb0cbc63d5683a26610b9de55e75953\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25154dd0f65fddf695ba9563319e13f9ae771606bea778bbcfeb29ce5efc3d5f\",\"dweb:/ipfs/Qmb2JDMSBMKkHkpH3VMJqVjUsZ86xEL4YodXf7MpCm3ydK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1363
						],
						"ERC165": [
							1759
						],
						"ERC721": [
							1093
						],
						"ERC721Utils": [
							1333
						],
						"IERC165": [
							1771
						],
						"IERC721": [
							1210
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1256
						],
						"Strings": [
							1735
						]
					},
					"id": 1094,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1094,
							"sourceUnit": 1211,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1210,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1094,
							"sourceUnit": 1257,
							"src": "172:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1256,
										"src": "180:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
							"file": "./utils/ERC721Utils.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1094,
							"sourceUnit": 1334,
							"src": "238:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "ERC721Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1333,
										"src": "246:11:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1094,
							"sourceUnit": 1364,
							"src": "291:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1363,
										"src": "299:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1094,
							"sourceUnit": 1736,
							"src": "340:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1735,
										"src": "348:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1094,
							"sourceUnit": 1760,
							"src": "389:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 149,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1771,
										"src": "397:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 150,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1759,
										"src": "406:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1094,
							"sourceUnit": 137,
							"src": "459:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "467:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"803:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1363,
										"src": "803:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "803:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"812:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1759,
										"src": "812:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "812:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC721",
										"nameLocations": [
											"820:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1210,
										"src": "820:7:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "820:7:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721Metadata",
										"nameLocations": [
											"829:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1256,
										"src": "829:15:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "829:15:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC721Errors",
										"nameLocations": [
											"846:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "846:13:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "846:13:1"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "527:247:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1093,
							"linearizedBaseContracts": [
								1093,
								89,
								1256,
								1210,
								1759,
								1771,
								1363
							],
							"name": "ERC721",
							"nameLocation": "793:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 167,
									"libraryName": {
										"id": 165,
										"name": "Strings",
										"nameLocations": [
											"872:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1735,
										"src": "872:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "866:26:1",
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "884:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "931:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "916:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "916:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "978:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "963:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "963:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1036:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "992:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 174,
										"keyName": "tokenId",
										"keyNameLocation": "1008:7:1",
										"keyType": {
											"id": 172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "992:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1019:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1092:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "1050:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 178,
										"keyName": "owner",
										"keyNameLocation": "1066:5:1",
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1058:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1050:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1075:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1152:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "1108:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 182,
										"keyName": "tokenId",
										"keyNameLocation": "1124:7:1",
										"keyType": {
											"id": 180,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1116:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1108:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1135:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 189,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1242:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "1174:86:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 188,
										"keyName": "owner",
										"keyNameLocation": "1190:5:1",
										"keyType": {
											"id": 184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1182:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1174:59:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 187,
											"keyName": "operator",
											"keyNameLocation": "1215:8:1",
											"keyType": {
												"id": 185,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1207:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1199:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1227:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1436:57:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1446:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 198,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1454:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1446:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1446:13:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1469:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 202,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1479:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1469:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1469:17:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1267:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1406:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1392:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1392:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1427:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1413:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1413:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:44:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:0:1"
									},
									"scope": 1093,
									"src": "1380:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1758,
										1770
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1668:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1697:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 219,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1210,
																			"src": "1717:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1210_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1210_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 218,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1712:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1712:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1210",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1726:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1712:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1697:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1753:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 225,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "1773:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1256_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1256_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 224,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1768:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1768:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1256",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1790:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1768:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1753:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1697:104:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 232,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1841:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 230,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1817:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1093_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1823:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1758,
															"src": "1817:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1817:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1697:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 216,
												"id": 235,
												"nodeType": "Return",
												"src": "1678:175:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1499:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1569:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 211,
												"name": "ERC165",
												"nameLocations": [
													"1636:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1759,
												"src": "1636:6:1"
											},
											{
												"id": 212,
												"name": "IERC165",
												"nameLocations": [
													"1644:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1771,
												"src": "1644:7:1"
											}
										],
										"src": "1627:25:1"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1594:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1587:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 208,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1587:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:20:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 1093,
									"src": "1560:300:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1135
									],
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1991:136:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2005:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2022:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2014:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2014:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2014:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2005:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "IfStatement",
												"src": "2001:87:1",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "2026:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2074:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2066:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 252,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2066:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2066:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 251,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2047:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2047:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 257,
															"nodeType": "RevertStatement",
															"src": "2040:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 260,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2104:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 262,
													"indexExpression": {
														"id": 261,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2114:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2104:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 263,
												"nodeType": "Return",
												"src": "2097:23:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "1866:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1928:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1946:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1938:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:15:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1982:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:9:1"
									},
									"scope": 1093,
									"src": "1919:208:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1143
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2256:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "2287:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 273,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "2273:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2273:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 272,
												"id": 276,
												"nodeType": "Return",
												"src": "2266:29:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2133:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2193:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2209:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2201:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:17:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:9:1"
									},
									"scope": 1093,
									"src": "2184:118:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1241
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2424:29:1",
										"statements": [
											{
												"expression": {
													"id": 284,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2441:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 283,
												"id": 285,
												"nodeType": "Return",
												"src": "2434:12:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2308:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2373:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2377:2:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2409:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2409:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:15:1"
									},
									"scope": 1093,
									"src": "2364:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1247
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2579:31:1",
										"statements": [
											{
												"expression": {
													"id": 293,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 292,
												"id": 294,
												"nodeType": "Return",
												"src": "2589:14:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2459:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2526:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2532:2:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2564:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2564:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:15:1"
									},
									"scope": 1093,
									"src": "2517:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1255
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "2755:176:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2779:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "2765:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2765:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2765:22:1"
											},
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2812:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "2798:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 308,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2798:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2822:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2822:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2798:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 315,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "2855:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2849:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 313,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2849:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2849:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2864:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2849:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2873:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2849:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2922:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2849:75:1",
													"trueExpression": {
														"arguments": [
															{
																"id": 323,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "2891:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 324,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "2900:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2908:8:1",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1483,
																	"src": "2900:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2900:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2877:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 320,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2877:6:1",
																	"typeDescriptions": {}
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2884:6:1",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2877:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2877:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 303,
												"id": 330,
												"nodeType": "Return",
												"src": "2842:82:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2616:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2685:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2694:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:17:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2740:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2740:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:15:1"
									},
									"scope": 1093,
									"src": "2676:255:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3239:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3256:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 337,
												"id": 339,
												"nodeType": "Return",
												"src": "3249:9:1"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "2937:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3182:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3190:2:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3224:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3224:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3223:15:1"
									},
									"scope": 1093,
									"src": "3173:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1183
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3383:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "3402:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3406:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 352,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "3415:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3415:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 349,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															960,
															1026
														],
														"referencedDeclaration": 960,
														"src": "3393:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3393:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3393:35:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "3271:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3331:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3347:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3339:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3339:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3359:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3351:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3338:29:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:1"
									},
									"scope": 1093,
									"src": "3322:113:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1199
									],
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "3572:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3596:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "3582:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3582:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "3582:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3635:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "3622:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3622:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 364,
												"id": 372,
												"nodeType": "Return",
												"src": "3615:28:1"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "3441:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3505:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3525:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3517:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:17:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3563:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3563:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3562:9:1"
									},
									"scope": 1093,
									"src": "3496:154:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1191
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3792:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "3821:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3821:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3835:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "3845:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 382,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "3802:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3802:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3802:52:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "3656:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3726:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3752:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3744:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3767:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3762:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3762:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:33:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3792:0:1"
									},
									"scope": 1093,
									"src": "3717:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1209
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "4021:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 400,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4038:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4057:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4038:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "4064:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4038:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "4031:42:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3867:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3936:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3961:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3953:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3976:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3968:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3952:33:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4015:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4015:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:6:1"
									},
									"scope": 1093,
									"src": "3927:153:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1175
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "4222:498:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "4236:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4250:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4242:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4242:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4242:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4236:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "4232:87:1",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "4254:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4305:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4297:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 424,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4297:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4297:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 423,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4275:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4275:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 429,
															"nodeType": "RevertStatement",
															"src": "4268:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4545:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "4537:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 432,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4537:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4569:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4573:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 437,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "4582:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4582:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 434,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "4561:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4561:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4537:58:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "4609:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 442,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4626:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4609:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "4605:109:1",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "4632:82:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 445,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "4674:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 446,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "4680:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 447,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "4689:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 444,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4653:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4653:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 449,
															"nodeType": "RevertStatement",
															"src": "4646:57:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "4086:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4151:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4172:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4164:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4164:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4186:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4178:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4198:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4190:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4163:43:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4222:0:1"
									},
									"scope": 1093,
									"src": "4142:578:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1165
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "4862:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4889:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "4895:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4899:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4908:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 463,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															501
														],
														"referencedDeclaration": 501,
														"src": "4872:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4872:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "4872:39:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "4726:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4795:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4820:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4812:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4834:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4826:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4846:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4838:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:43:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4862:0:1"
									},
									"scope": 1093,
									"src": "4786:132:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1155
									],
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "5087:130:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5110:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5116:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5120:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5097:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5097:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "5097:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 492,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "5172:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5172:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5186:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5192:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5196:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 497,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5205:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 489,
															"name": "ERC721Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "5138:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Utils_$1333_$",
																"typeString": "type(library ERC721Utils)"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5150:21:1",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1332,
														"src": "5138:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5138:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "5138:72:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "4924:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4993:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5018:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5010:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5010:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5032:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5024:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5044:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5036:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5066:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5053:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5053:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5009:62:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5087:0:1"
									},
									"scope": 1093,
									"src": "4984:233:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "5807:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 509,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5824:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 511,
													"indexExpression": {
														"id": 510,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "5832:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5824:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 508,
												"id": 512,
												"nodeType": "Return",
												"src": "5817:23:1"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "5223:504:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5741:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "5750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:17:1"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "5798:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5797:9:1"
									},
									"scope": 1093,
									"src": "5732:115:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "6042:48:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 522,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6059:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 524,
													"indexExpression": {
														"id": 523,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "6075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6059:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 521,
												"id": 525,
												"nodeType": "Return",
												"src": "6052:31:1"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "5853:105:1",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5972:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5993:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5985:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5984:17:1"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "6033:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:9:1"
									},
									"scope": 1093,
									"src": "5963:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "6510:163:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 539,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6558:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6550:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 540,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6550:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6550:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6539:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 545,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "6577:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 546,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "6586:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6577:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 549,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "6614:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 550,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6621:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 548,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "6597:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6597:32:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6577:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 554,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "6646:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 553,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "6633:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6633:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 556,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "6658:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6633:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6577:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 559,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6576:90:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6539:127:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 538,
												"id": 561,
												"nodeType": "Return",
												"src": "6520:146:1"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "6096:300:1",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6410:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6432:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "6424:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6424:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6447:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "6439:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6439:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6464:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "6456:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6423:49:1"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "6504:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6504:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6503:6:1"
									},
									"scope": 1093,
									"src": "6401:272:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "7202:271:1",
										"statements": [
											{
												"condition": {
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7216:39:1",
													"subExpression": {
														"arguments": [
															{
																"id": 574,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "7231:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 575,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "7238:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 576,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "7247:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 573,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "7217:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7217:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "7212:255:1",
												"trueBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7257:210:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 579,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "7275:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7292:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7284:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 580,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7284:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7284:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7275:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 595,
																"nodeType": "Block",
																"src": "7373:84:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 591,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 568,
																					"src": "7425:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 592,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 570,
																					"src": "7434:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 590,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "7398:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7398:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 594,
																		"nodeType": "RevertStatement",
																		"src": "7391:51:1"
																	}
																]
															},
															"id": 596,
															"nodeType": "IfStatement",
															"src": "7271:186:1",
															"trueBody": {
																"id": 589,
																"nodeType": "Block",
																"src": "7296:71:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 586,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 570,
																					"src": "7344:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 585,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "7321:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7321:31:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 588,
																		"nodeType": "RevertStatement",
																		"src": "7314:38:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "6679:421:1",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7114:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7139:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "7131:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7131:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7154:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "7146:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7171:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "7163:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7163:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7130:49:1"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7202:0:1"
									},
									"scope": 1093,
									"src": "7105:368:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "8190:78:1",
										"statements": [
											{
												"id": 614,
												"nodeType": "UncheckedBlock",
												"src": "8200:62:1",
												"statements": [
													{
														"expression": {
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 608,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "8224:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 610,
																"indexExpression": {
																	"id": 609,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "8234:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8224:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 611,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "8246:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8224:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 613,
														"nodeType": "ExpressionStatement",
														"src": "8224:27:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "7479:631:1",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8124:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8149:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "8141:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8141:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8166:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "8158:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 604,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8158:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8140:32:1"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8190:0:1"
									},
									"scope": 1093,
									"src": "8115:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "8956:700:1",
										"statements": [
											{
												"assignments": [
													629
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8974:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 705,
														"src": "8966:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 628,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8966:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 633,
												"initialValue": {
													"arguments": [
														{
															"id": 631,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "8990:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "8981:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8981:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8966:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "9058:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9074:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9066:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 635,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9066:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9066:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9058:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 647,
												"nodeType": "IfStatement",
												"src": "9054:86:1",
												"trueBody": {
													"id": 646,
													"nodeType": "Block",
													"src": "9078:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 641,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 629,
																		"src": "9109:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 642,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "9115:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 643,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "9121:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 640,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "9092:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9092:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 645,
															"nodeType": "ExpressionStatement",
															"src": "9092:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 648,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "9184:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9200:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9192:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 649,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9192:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9192:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9184:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "9180:256:1",
												"trueBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "9204:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9317:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9309:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 655,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9309:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9309:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 659,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "9321:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9338:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9330:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 660,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9330:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9330:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 654,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		960,
																		1026
																	],
																	"referencedDeclaration": 1026,
																	"src": "9300:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9300:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 666,
															"nodeType": "ExpressionStatement",
															"src": "9300:48:1"
														},
														{
															"id": 673,
															"nodeType": "UncheckedBlock",
															"src": "9363:63:1",
															"statements": [
																{
																	"expression": {
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 667,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9391:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 669,
																			"indexExpression": {
																				"id": 668,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 629,
																				"src": "9401:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9391:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9410:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9391:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 672,
																	"nodeType": "ExpressionStatement",
																	"src": "9391:20:1"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "9450:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9464:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9456:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 677,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9456:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9456:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9450:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 690,
												"nodeType": "IfStatement",
												"src": "9446:107:1",
												"trueBody": {
													"id": 689,
													"nodeType": "Block",
													"src": "9468:85:1",
													"statements": [
														{
															"id": 688,
															"nodeType": "UncheckedBlock",
															"src": "9482:61:1",
															"statements": [
																{
																	"expression": {
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 682,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9510:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 684,
																			"indexExpression": {
																				"id": 683,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 619,
																				"src": "9520:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9510:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9527:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9510:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 687,
																	"nodeType": "ExpressionStatement",
																	"src": "9510:18:1"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 691,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "9563:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 693,
														"indexExpression": {
															"id": 692,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "9571:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9563:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 694,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "9582:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9563:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "9563:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 698,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "9609:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "9615:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "9619:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 697,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "9600:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9600:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "EmitStatement",
												"src": "9595:32:1"
											},
											{
												"expression": {
													"id": 703,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 629,
													"src": "9645:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 627,
												"id": 704,
												"nodeType": "Return",
												"src": "9638:11:1"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "8274:582:1",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8870:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8886:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "8878:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8878:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8898:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "8890:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8890:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8915:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "8907:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8907:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8877:43:1"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "8947:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8947:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8946:9:1"
									},
									"scope": 1093,
									"src": "8861:795:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "10031:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 714,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "10045:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10059:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10051:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 715,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10051:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10051:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10045:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 728,
												"nodeType": "IfStatement",
												"src": "10041:87:1",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "10063:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10114:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10106:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 721,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10106:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10106:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 720,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "10084:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10084:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 726,
															"nodeType": "RevertStatement",
															"src": "10077:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													730
												],
												"declarations": [
													{
														"constant": false,
														"id": 730,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10145:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 755,
														"src": "10137:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 729,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10137:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"arguments": [
														{
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "10169:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "10173:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10190:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10182:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 734,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10182:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10182:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 731,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "10161:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10161:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10137:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 740,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "10207:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10232:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10224:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 741,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10224:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10224:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10207:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 754,
												"nodeType": "IfStatement",
												"src": "10203:96:1",
												"trueBody": {
													"id": 753,
													"nodeType": "Block",
													"src": "10236:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10277:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 747,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10277:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10277:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 746,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "10257:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10257:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 752,
															"nodeType": "RevertStatement",
															"src": "10250:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "9662:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9987:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10001:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "9993:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9993:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10013:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "10005:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9992:29:1"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10031:0:1"
									},
									"scope": 1093,
									"src": "9978:327:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "10713:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 765,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "10733:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "10737:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10746:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 764,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															771,
															801
														],
														"referencedDeclaration": 801,
														"src": "10723:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10723:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "10723:26:1"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "10311:340:1",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10683:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "10675:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10695:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "10687:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10674:29:1"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10713:0:1"
									},
									"scope": 1093,
									"src": "10656:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "11061:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11077:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "11081:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 781,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "11071:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11071:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "11071:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 789,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "11133:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11133:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11155:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11147:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 791,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11147:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11147:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11159:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 796,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "11163:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 797,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "11172:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 786,
															"name": "ERC721Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "11099:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Utils_$1333_$",
																"typeString": "type(library ERC721Utils)"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11111:21:1",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1332,
														"src": "11099:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11099:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "11099:78:1"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "10762:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10986:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11004:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "10996:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11016:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "11008:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "11025:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 777,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11025:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10995:48:1"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11061:0:1"
									},
									"scope": 1093,
									"src": "10977:207:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "11551:186:1",
										"statements": [
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11569:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "11561:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 807,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11561:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 820,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11601:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11593:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 810,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11593:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11593:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "11605:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11622:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11614:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 815,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11614:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11614:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 809,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "11585:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11585:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11561:64:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 821,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "11639:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11664:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11656:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 822,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11656:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11656:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11639:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 832,
												"nodeType": "IfStatement",
												"src": "11635:96:1",
												"trueBody": {
													"id": 831,
													"nodeType": "Block",
													"src": "11668:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 828,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "11712:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 827,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "11689:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11689:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 830,
															"nodeType": "RevertStatement",
															"src": "11682:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "11190:315:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11519:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "11525:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11525:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11524:17:1"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11551:0:1"
									},
									"scope": 1093,
									"src": "11510:227:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "12132:389:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 844,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "12146:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12160:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12152:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 845,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12152:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12152:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12146:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 858,
												"nodeType": "IfStatement",
												"src": "12142:87:1",
												"trueBody": {
													"id": 857,
													"nodeType": "Block",
													"src": "12164:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12215:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12207:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 851,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12207:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12207:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 850,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "12185:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12185:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 856,
															"nodeType": "RevertStatement",
															"src": "12178:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12246:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 893,
														"src": "12238:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 859,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12238:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 869,
												"initialValue": {
													"arguments": [
														{
															"id": 862,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "12270:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "12274:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12291:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12283:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 864,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12283:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12283:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 861,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "12262:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12262:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12238:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 870,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "12308:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12333:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12325:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 871,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12325:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12325:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12308:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 881,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "12410:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 882,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "12427:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12410:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 891,
													"nodeType": "IfStatement",
													"src": "12406:109:1",
													"trueBody": {
														"id": 890,
														"nodeType": "Block",
														"src": "12433:82:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 885,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "12475:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 886,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "12481:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 887,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 860,
																			"src": "12490:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 884,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12454:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12454:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 889,
																"nodeType": "RevertStatement",
																"src": "12447:57:1"
															}
														]
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "12304:211:1",
												"trueBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "12337:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 877,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "12381:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 876,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "12358:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12358:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 879,
															"nodeType": "RevertStatement",
															"src": "12351:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "11743:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12070:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12088:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "12080:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12080:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12102:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "12094:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12114:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "12106:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12106:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12079:43:1"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12132:0:1"
									},
									"scope": 1093,
									"src": "12061:460:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "13530:53:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 905,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "13554:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "13560:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "13564:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13573:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 904,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															912,
															942
														],
														"referencedDeclaration": 942,
														"src": "13540:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13540:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "13540:36:1"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "12527:923:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13464:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "13478:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13478:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13500:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "13492:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13512:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "13504:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13504:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13477:43:1"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13530:0:1"
									},
									"scope": 1093,
									"src": "13455:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "13922:127:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 925,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "13942:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "13948:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "13952:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 924,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "13932:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13932:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "13932:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 933,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "14004:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14004:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "14018:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "14024:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "14028:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 938,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "14037:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 930,
															"name": "ERC721Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "13970:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Utils_$1333_$",
																"typeString": "type(library ERC721Utils)"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13982:21:1",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1332,
														"src": "13970:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13970:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "13970:72:1"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "13589:226:1",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13829:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13851:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "13843:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13843:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13865:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "13857:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13857:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13877:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "13869:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13869:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13899:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "13886:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 920,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13886:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13842:62:1"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13922:0:1"
									},
									"scope": 1093,
									"src": "13820:229:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "14562:50:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 953,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "14581:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "14585:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 955,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "14594:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14600:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 952,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															960,
															1026
														],
														"referencedDeclaration": 1026,
														"src": "14572:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14572:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "14572:33:1"
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "14055:432:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14501:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14518:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "14510:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14510:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14530:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "14522:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14522:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14547:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "14539:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14539:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14509:43:1"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14562:0:1"
									},
									"scope": 1093,
									"src": "14492:120:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "14888:568:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 972,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "14954:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 973,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "14967:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14983:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14975:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 974,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14975:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14975:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14967:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14954:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "IfStatement",
												"src": "14950:460:1",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "14987:423:1",
													"statements": [
														{
															"assignments": [
																981
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 981,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "15009:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1017,
																	"src": "15001:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 980,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15001:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 985,
															"initialValue": {
																"arguments": [
																	{
																		"id": 983,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "15031:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 982,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "15017:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15017:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15001:38:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 986,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 967,
																			"src": "15167:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 989,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15183:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 988,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15175:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 987,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15175:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15175:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15167:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 992,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "15189:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 993,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 967,
																			"src": "15198:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15189:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15167:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15206:30:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 997,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 981,
																				"src": "15224:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 998,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "15231:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 996,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "15207:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15207:29:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15167:69:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1007,
															"nodeType": "IfStatement",
															"src": "15163:142:1",
															"trueBody": {
																"id": 1006,
																"nodeType": "Block",
																"src": "15238:67:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1003,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 967,
																					"src": "15285:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1002,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "15263:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15263:27:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1005,
																		"nodeType": "RevertStatement",
																		"src": "15256:34:1"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1008,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "15323:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1016,
															"nodeType": "IfStatement",
															"src": "15319:81:1",
															"trueBody": {
																"id": 1015,
																"nodeType": "Block",
																"src": "15334:66:1",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1010,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 981,
																					"src": "15366:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 963,
																					"src": "15373:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1012,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 965,
																					"src": "15377:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1009,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1118,
																				"src": "15357:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15357:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1014,
																		"nodeType": "EmitStatement",
																		"src": "15352:33:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1019,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "15420:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1021,
														"indexExpression": {
															"id": 1020,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "15436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15420:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1022,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "15447:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15420:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "15420:29:1"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "14618:171:1",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14803:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "14812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14832:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "14824:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14849:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "14841:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14841:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14860:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "14855:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14811:59:1"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14888:0:1"
									},
									"scope": 1093,
									"src": "14794:662:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "15758:219:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1036,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "15772:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15792:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15784:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1037,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15784:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15784:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15772:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1047,
												"nodeType": "IfStatement",
												"src": "15768:91:1",
												"trueBody": {
													"id": 1046,
													"nodeType": "Block",
													"src": "15796:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1043,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1031,
																		"src": "15839:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1042,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "15817:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15817:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1045,
															"nodeType": "RevertStatement",
															"src": "15810:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1048,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "15868:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1051,
															"indexExpression": {
																"id": 1049,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "15887:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15868:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1052,
														"indexExpression": {
															"id": 1050,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "15894:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15868:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1053,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "15906:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15868:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "15868:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1057,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "15944:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "15951:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "15961:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1056,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "15929:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15929:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "EmitStatement",
												"src": "15924:46:1"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "15462:198:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15674:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15701:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "15693:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15716:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "15708:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15708:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15731:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "15726:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15726:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15692:48:1"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15758:0:1"
									},
									"scope": 1093,
									"src": "15665:312:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "16284:169:1",
										"statements": [
											{
												"assignments": [
													1072
												],
												"declarations": [
													{
														"constant": false,
														"id": 1072,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16302:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1091,
														"src": "16294:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1071,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16294:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1076,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "16319:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1073,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "16310:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16310:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16294:33:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1077,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "16341:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16358:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16350:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1078,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16350:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16350:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16341:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1088,
												"nodeType": "IfStatement",
												"src": "16337:88:1",
												"trueBody": {
													"id": 1087,
													"nodeType": "Block",
													"src": "16362:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1084,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "16406:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1083,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "16383:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16383:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1086,
															"nodeType": "RevertStatement",
															"src": "16376:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1089,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1072,
													"src": "16441:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1070,
												"id": 1090,
												"nodeType": "Return",
												"src": "16434:12:1"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "15983:224:1",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16221:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "16235:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16235:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16234:17:1"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "16275:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16275:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16274:9:1"
									},
									"scope": 1093,
									"src": "16212:241:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1094,
							"src": "775:15680:1",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1109,
								1118,
								1127
							]
						}
					],
					"src": "107:16349:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1771
						],
						"IERC721": [
							1210
						]
					},
					"id": 1211,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1095,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1097,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1211,
							"sourceUnit": 1772,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1096,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1771,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1099,
										"name": "IERC165",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1771,
										"src": "288:7:2"
									},
									"id": 1100,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1098,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:2",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1210,
							"linearizedBaseContracts": [
								1210,
								1771
							],
							"name": "IERC721",
							"nameLocation": "277:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1109,
									"name": "Transfer",
									"nameLocation": "401:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "410:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "432:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "452:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:2"
									},
									"src": "395:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1118,
									"name": "Approval",
									"nameLocation": "588:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "597:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "620:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "646:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:2"
									},
									"src": "582:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1127,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "820:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "843:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "869:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:2"
									},
									"src": "799:85:2"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "990:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:2"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "1028:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:2"
									},
									"scope": 1210,
									"src": "971:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1204:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:2"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1244:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:2"
									},
									"scope": 1210,
									"src": "1187:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1861:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1875:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1887:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1904:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:2"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:2"
									},
									"scope": 1210,
									"src": "1835:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2691:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:2"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:2"
									},
									"scope": 1210,
									"src": "2651:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "3495:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "3509:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "3521:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:2"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:2"
									},
									"scope": 1210,
									"src": "3473:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "4027:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "4039:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:2"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:2"
									},
									"scope": 1210,
									"src": "4010:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "4418:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "4436:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:2"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:2"
									},
									"scope": 1210,
									"src": "4391:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "4631:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:2"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "4671:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:2"
									},
									"scope": 1210,
									"src": "4610:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "4864:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "4879:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:2"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "4920:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:2"
									},
									"scope": 1210,
									"src": "4838:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1211,
							"src": "267:4661:2",
							"usedErrors": [],
							"usedEvents": [
								1109,
								1118,
								1127
							]
						}
					],
					"src": "108:4821:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1228
						]
					},
					"id": 1229,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1212,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1213,
								"nodeType": "StructuredDocumentation",
								"src": "142:154:3",
								"text": " @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1228,
							"linearizedBaseContracts": [
								1228
							],
							"name": "IERC721Receiver",
							"nameLocation": "307:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "329:500:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "843:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "877:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "869:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "903:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "895:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "925:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "917:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "957:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "942:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "942:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:108:3"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "986:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1224,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "986:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:8:3"
									},
									"scope": 1228,
									"src": "834:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1229,
							"src": "297:699:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:881:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1210
						],
						"IERC721Metadata": [
							1256
						]
					},
					"id": 1257,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1230,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1232,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1257,
							"sourceUnit": 1211,
							"src": "153:39:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1231,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1210,
										"src": "161:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1234,
										"name": "IERC721",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1210,
										"src": "357:7:4"
									},
									"id": 1235,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1233,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1256,
							"linearizedBaseContracts": [
								1256,
								1210,
								1771
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:4"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "473:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:4"
									},
									"scope": 1256,
									"src": "434:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:4"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "600:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1244,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:4"
									},
									"scope": 1256,
									"src": "559:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:4"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "774:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:4"
									},
									"scope": 1256,
									"src": "716:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1257,
							"src": "328:463:4",
							"usedErrors": [],
							"usedEvents": [
								1109,
								1118,
								1127
							]
						}
					],
					"src": "127:665:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
					"exportedSymbols": {
						"ERC721Utils": [
							1333
						],
						"IERC721Errors": [
							89
						],
						"IERC721Receiver": [
							1228
						]
					},
					"id": 1334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1258,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 1260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 1229,
							"src": "144:55:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1259,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1228,
										"src": "152:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../../interfaces/draft-IERC6093.sol",
							"id": 1262,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 137,
							"src": "200:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1261,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "208:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1263,
								"nodeType": "StructuredDocumentation",
								"src": "271:159:5",
								"text": " @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1333,
							"linearizedBaseContracts": [
								1333
							],
							"name": "ERC721Utils",
							"nameLocation": "439:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "1151:758:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1277,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "1165:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1168:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1165:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1173:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1165:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1182:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1165:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1330,
												"nodeType": "IfStatement",
												"src": "1161:742:5",
												"trueBody": {
													"id": 1329,
													"nodeType": "Block",
													"src": "1185:718:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1307,
																		"nodeType": "Block",
																		"src": "1295:214:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1298,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1294,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1292,
																						"src": "1317:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1295,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1228,
																								"src": "1327:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1228_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1296,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "1343:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1227,
																							"src": "1327:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1297,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "1360:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "1327:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "1317:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1306,
																				"nodeType": "IfStatement",
																				"src": "1313:182:5",
																				"trueBody": {
																					"id": 1305,
																					"nodeType": "Block",
																					"src": "1370:125:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1302,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1270,
																										"src": "1473:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1299,
																										"name": "IERC721Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 89,
																										"src": "1437:13:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IERC721Errors_$89_$",
																											"typeString": "type(contract IERC721Errors)"
																										}
																									},
																									"id": 1301,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "1451:21:5",
																									"memberName": "ERC721InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 71,
																									"src": "1437:35:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1303,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1437:39:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1304,
																							"nodeType": "RevertStatement",
																							"src": "1430:46:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1308,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1293,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1292,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "1287:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1308,
																				"src": "1280:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1291,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1280:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1279:15:5"
																	},
																	"src": "1271:238:5"
																},
																{
																	"block": {
																		"id": 1326,
																		"nodeType": "Block",
																		"src": "1538:355:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1315,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1312,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1310,
																							"src": "1560:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1313,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1567:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "1560:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1314,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1577:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "1560:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1324,
																					"nodeType": "Block",
																					"src": "1728:151:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "1775:86:5",
																								"nodeType": "YulBlock",
																								"src": "1775:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "1812:2:5",
																															"nodeType": "YulLiteral",
																															"src": "1812:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "1816:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "1816:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "1808:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "1808:3:5"
																													},
																													"nativeSrc": "1808:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "1808:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "1831:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "1831:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "1825:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "1825:5:5"
																													},
																													"nativeSrc": "1825:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "1825:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "1801:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "1801:6:5"
																											},
																											"nativeSrc": "1801:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "1801:38:5"
																										},
																										"nativeSrc": "1801:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "1801:38:5"
																									}
																								]
																							},
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1310,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "1816:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1310,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "1831:6:5",
																									"valueSize": 1
																								}
																							],
																							"flags": [
																								"memory-safe"
																							],
																							"id": 1323,
																							"nodeType": "InlineAssembly",
																							"src": "1750:111:5"
																						}
																					]
																				},
																				"id": 1325,
																				"nodeType": "IfStatement",
																				"src": "1556:323:5",
																				"trueBody": {
																					"id": 1322,
																					"nodeType": "Block",
																					"src": "1580:142:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1319,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1270,
																										"src": "1700:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1316,
																										"name": "IERC721Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 89,
																										"src": "1664:13:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IERC721Errors_$89_$",
																											"typeString": "type(contract IERC721Errors)"
																										}
																									},
																									"id": 1318,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "1678:21:5",
																									"memberName": "ERC721InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 71,
																									"src": "1664:35:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1320,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1664:39:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1321,
																							"nodeType": "RevertStatement",
																							"src": "1657:46:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1327,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1311,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1310,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "1530:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1327,
																				"src": "1517:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1309,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "1517:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1516:21:5"
																	},
																	"src": "1510:383:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1286,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "1240:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1287,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "1250:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1288,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1272,
																		"src": "1256:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1289,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "1265:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1283,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1270,
																				"src": "1219:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1282,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1228,
																			"src": "1203:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1228_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1203:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1228",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1223:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1227,
																	"src": "1203:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1203:67:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1328,
															"nodeType": "TryStatement",
															"src": "1199:694:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "457:523:5",
										"text": " @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."
									},
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkOnERC721Received",
									"nameLocation": "994:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1033:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "1025:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1059:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "1051:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1081:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "1073:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1101:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "1093:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1131:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "1118:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1118:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:126:5"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1151:0:5"
									},
									"scope": 1333,
									"src": "985:924:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1334,
							"src": "431:1480:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:1794:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1363
						]
					},
					"id": 1364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1335,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1336,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1363,
							"linearizedBaseContracts": [
								1363
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1341,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1343,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1363,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1350,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1349,
												"id": 1352,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1363,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1358,
												"id": 1360,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1363,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1364,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							1415
						]
					},
					"id": 1416,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1365,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1366,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:7",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1415,
							"linearizedBaseContracts": [
								1415
							],
							"name": "Panic",
							"nameLocation": "665:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:7",
										"text": "@dev generic / unspecified error"
									},
									"id": 1370,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "718:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1368,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 1369,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:7",
										"text": "@dev used by the assert() builtin"
									},
									"id": 1374,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "806:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1372,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 1373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:7",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 1378,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "897:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1376,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 1377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:7",
										"text": "@dev division or modulo by zero"
									},
									"id": 1382,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "990:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1380,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 1381,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:7",
										"text": "@dev enum conversion error"
									},
									"id": 1386,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1080:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1384,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 1385,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:7",
										"text": "@dev invalid encoding in storage"
									},
									"id": 1390,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1181:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1388,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 1389,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:7",
										"text": "@dev empty array pop"
									},
									"id": 1394,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1271:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1392,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 1393,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:7",
										"text": "@dev array out of bounds access"
									},
									"id": 1398,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1365:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 1397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:7",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 1402,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1493:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1400,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 1401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:7",
										"text": "@dev calling invalid internal function"
									},
									"id": 1406,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:7",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1593:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1404,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 1405,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "1819:151:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:7",
													"nodeType": "YulBlock",
													"src": "1854:110:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:7",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:7",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:7"
																},
																"nativeSrc": "1868:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:7"
															},
															"nativeSrc": "1868:24:7",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:7",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:7"
																},
																"nativeSrc": "1905:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:7"
															},
															"nativeSrc": "1905:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:7",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:7"
																},
																"nativeSrc": "1936:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:7"
															},
															"nativeSrc": "1936:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:7"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1409,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1412,
												"nodeType": "InlineAssembly",
												"src": "1829:135:7"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:7",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "1791:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:7"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:7"
									},
									"scope": 1415,
									"src": "1776:194:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1416,
							"src": "657:1315:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3377
						],
						"SignedMath": [
							5286
						],
						"Strings": [
							1735
						]
					},
					"id": 1736,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1417,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1736,
							"sourceUnit": 3378,
							"src": "127:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1418,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3377,
										"src": "135:4:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1421,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1736,
							"sourceUnit": 5287,
							"src": "165:49:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1420,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5286,
										"src": "173:10:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1422,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1735,
							"linearizedBaseContracts": [
								1735
							],
							"name": "Strings",
							"nameLocation": "259:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1425,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1735,
									"src": "273:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1423,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1424,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1428,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1735,
									"src": "335:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1427,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:8",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1435,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "520:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:8"
									},
									"src": "470:66:8"
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "708:561:8",
										"statements": [
											{
												"id": 1481,
												"nodeType": "UncheckedBlock",
												"src": "718:545:8",
												"statements": [
													{
														"assignments": [
															1444
														],
														"declarations": [
															{
																"constant": false,
																"id": 1444,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1481,
																"src": "742:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1443,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1451,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1447,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "770:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1445,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3377,
																		"src": "759:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3377_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:8",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3149,
																	"src": "759:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:8"
													},
													{
														"assignments": [
															1453
														],
														"declarations": [
															{
																"constant": false,
																"id": 1453,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1481,
																"src": "794:20:8",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1452,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1458,
														"initialValue": {
															"arguments": [
																{
																	"id": 1456,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "828:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1454,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:8"
													},
													{
														"assignments": [
															1460
														],
														"declarations": [
															{
																"constant": false,
																"id": 1460,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1481,
																"src": "849:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1459,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1461,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:8"
													},
													{
														"AST": {
															"nativeSrc": "899:67:8",
															"nodeType": "YulBlock",
															"src": "899:67:8",
															"statements": [
																{
																	"nativeSrc": "917:35:8",
																	"nodeType": "YulAssignment",
																	"src": "917:35:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "928:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "928:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "940:2:8",
																						"nodeType": "YulLiteral",
																						"src": "940:2:8",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "944:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "936:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "936:3:8"
																				},
																				"nativeSrc": "936:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "936:15:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "924:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:8"
																		},
																		"nativeSrc": "924:28:8",
																		"nodeType": "YulFunctionCall",
																		"src": "924:28:8"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "917:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "917:3:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1453,
																"isOffset": false,
																"isSlot": false,
																"src": "928:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1444,
																"isOffset": false,
																"isSlot": false,
																"src": "944:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1460,
																"isOffset": false,
																"isSlot": false,
																"src": "917:3:8",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1462,
														"nodeType": "InlineAssembly",
														"src": "874:92:8"
													},
													{
														"body": {
															"id": 1477,
															"nodeType": "Block",
															"src": "992:234:8",
															"statements": [
																{
																	"expression": {
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1010:5:8",
																		"subExpression": {
																			"id": 1464,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "1010:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1466,
																	"nodeType": "ExpressionStatement",
																	"src": "1010:5:8"
																},
																{
																	"AST": {
																		"nativeSrc": "1058:86:8",
																		"nodeType": "YulBlock",
																		"src": "1058:86:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1088:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1088:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1102:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "1102:5:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1109:2:8",
																											"nodeType": "YulLiteral",
																											"src": "1109:2:8",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1098:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1098:3:8"
																									},
																									"nativeSrc": "1098:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "1098:14:8"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1114:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "1114:10:8"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1093:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "1093:4:8"
																							},
																							"nativeSrc": "1093:32:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1093:32:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1080:7:8",
																						"nodeType": "YulIdentifier",
																						"src": "1080:7:8"
																					},
																					"nativeSrc": "1080:46:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1080:46:8"
																				},
																				"nativeSrc": "1080:46:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "1080:46:8"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1425,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1114:10:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1460,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1088:3:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1438,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1102:5:8",
																			"valueSize": 1
																		}
																	],
																	"flags": [
																		"memory-safe"
																	],
																	"id": 1467,
																	"nodeType": "InlineAssembly",
																	"src": "1033:111:8"
																},
																{
																	"expression": {
																		"id": 1470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1468,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1438,
																			"src": "1161:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1170:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1161:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1471,
																	"nodeType": "ExpressionStatement",
																	"src": "1161:11:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1438,
																			"src": "1194:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1203:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1194:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1476,
																	"nodeType": "IfStatement",
																	"src": "1190:21:8",
																	"trueBody": {
																		"id": 1475,
																		"nodeType": "Break",
																		"src": "1206:5:8"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "986:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1478,
														"nodeType": "WhileStatement",
														"src": "979:247:8"
													},
													{
														"expression": {
															"id": 1479,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "1246:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1442,
														"id": 1480,
														"nodeType": "Return",
														"src": "1239:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "655:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:8"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "693:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1440,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:8"
									},
									"scope": 1735,
									"src": "637:632:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "1445:92:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1494,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "1476:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1484:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1476:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1494:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1476:20:8",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1488:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1503,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1486,
																			"src": "1522:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1501,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5286,
																			"src": "1507:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$5286_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1518:3:8",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5285,
																		"src": "1507:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1507:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1500,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "1498:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1498:31:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1462:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1491,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1462:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1469:6:8",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1462:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1490,
												"id": 1507,
												"nodeType": "Return",
												"src": "1455:75:8"
											}
										]
									},
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "1275:89:8",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1378:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1400:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1393:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1485,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:14:8"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1430:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1488,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1430:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:15:8"
									},
									"scope": 1735,
									"src": "1369:168:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "1716:100:8",
										"statements": [
											{
												"id": 1527,
												"nodeType": "UncheckedBlock",
												"src": "1726:84:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "1769:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1521,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1512,
																				"src": "1788:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1519,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3377,
																				"src": "1776:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3377_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1781:6:8",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3320,
																			"src": "1776:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1776:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1797:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1776:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1517,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1529,
																	1612,
																	1632
																],
																"referencedDeclaration": 1612,
																"src": "1757:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1757:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1516,
														"id": 1526,
														"nodeType": "Return",
														"src": "1750:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "1543:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1651:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1671:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "1663:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:8"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "1701:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1514,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1701:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:15:8"
									},
									"scope": 1735,
									"src": "1642:174:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "2029:435:8",
										"statements": [
											{
												"assignments": [
													1540
												],
												"declarations": [
													{
														"constant": false,
														"id": 1540,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2047:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1611,
														"src": "2039:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1539,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2039:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1542,
												"initialValue": {
													"id": 1541,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1532,
													"src": "2060:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2039:26:8"
											},
											{
												"assignments": [
													1544
												],
												"declarations": [
													{
														"constant": false,
														"id": 1544,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2088:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1611,
														"src": "2075:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1543,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2075:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1553,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1548,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "2111:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2107:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2120:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2107:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2097:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1545,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2101:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2097:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2075:47:8"
											},
											{
												"expression": {
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1554,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "2132:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1556,
														"indexExpression": {
															"hexValue": "30",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2139:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2132:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2144:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2132:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "2132:15:8"
											},
											{
												"expression": {
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1560,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "2157:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1562,
														"indexExpression": {
															"hexValue": "31",
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2164:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2157:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2169:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2157:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "2157:15:8"
											},
											{
												"body": {
													"id": 1594,
													"nodeType": "Block",
													"src": "2227:95:8",
													"statements": [
														{
															"expression": {
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1580,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1544,
																		"src": "2241:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1582,
																	"indexExpression": {
																		"id": 1581,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "2248:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2241:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1583,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1425,
																		"src": "2253:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1587,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1584,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1540,
																			"src": "2264:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2277:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2264:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2253:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2241:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1589,
															"nodeType": "ExpressionStatement",
															"src": "2241:40:8"
														},
														{
															"expression": {
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1590,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "2295:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2310:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2295:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1593,
															"nodeType": "ExpressionStatement",
															"src": "2295:16:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1574,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "2215:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2219:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2215:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1595,
												"initializationExpression": {
													"assignments": [
														1567
													],
													"declarations": [
														{
															"constant": false,
															"id": 1567,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2195:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1595,
															"src": "2187:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1566,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2187:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1573,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2199:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1569,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "2203:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2199:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2212:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2199:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2187:26:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2222:3:8",
														"subExpression": {
															"id": 1577,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "2224:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1579,
													"nodeType": "ExpressionStatement",
													"src": "2222:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2182:140:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1596,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "2335:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2349:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2335:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1605,
												"nodeType": "IfStatement",
												"src": "2331:96:8",
												"trueBody": {
													"id": 1604,
													"nodeType": "Block",
													"src": "2352:75:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1600,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1532,
																		"src": "2402:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1601,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1534,
																		"src": "2409:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1599,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "2373:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2373:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1603,
															"nodeType": "RevertStatement",
															"src": "2366:50:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1608,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "2450:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2443:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1606,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2443:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1610,
												"nodeType": "Return",
												"src": "2436:21:8"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "1822:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1948:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1968:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "1960:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1983:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "1975:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:31:8"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "2014:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1536,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2014:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:15:8"
									},
									"scope": 1735,
									"src": "1939:525:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "2696:75:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1625,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1615,
																			"src": "2741:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2733:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1623,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2733:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2733:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2725:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1621,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2725:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2725:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1628,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "2749:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1620,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1529,
															1612,
															1632
														],
														"referencedDeclaration": 1612,
														"src": "2713:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2713:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1619,
												"id": 1630,
												"nodeType": "Return",
												"src": "2706:58:8"
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2632:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2652:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "2644:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2643:14:8"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "2681:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2681:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2680:15:8"
									},
									"scope": 1735,
									"src": "2623:148:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "3028:642:8",
										"statements": [
											{
												"assignments": [
													1641
												],
												"declarations": [
													{
														"constant": false,
														"id": 1641,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "3051:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "3038:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1640,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3038:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1648,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1645,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1635,
																	"src": "3078:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1644,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1529,
																	1612,
																	1632
																],
																"referencedDeclaration": 1632,
																"src": "3066:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (address) pure returns (string memory)"
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3066:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3060:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1642,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3060:5:8",
															"typeDescriptions": {}
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3060:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3038:46:8"
											},
											{
												"assignments": [
													1650
												],
												"declarations": [
													{
														"constant": false,
														"id": 1650,
														"mutability": "mutable",
														"name": "hashValue",
														"nameLocation": "3177:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "3169:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1649,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3169:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1651,
												"nodeType": "VariableDeclarationStatement",
												"src": "3169:17:8"
											},
											{
												"AST": {
													"nativeSrc": "3221:78:8",
													"nodeType": "YulBlock",
													"src": "3221:78:8",
													"statements": [
														{
															"nativeSrc": "3235:54:8",
															"nodeType": "YulAssignment",
															"src": "3235:54:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3252:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3252:2:8",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "buffer",
																						"nativeSrc": "3270:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3270:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3278:4:8",
																						"nodeType": "YulLiteral",
																						"src": "3278:4:8",
																						"type": "",
																						"value": "0x22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3266:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:8"
																				},
																				"nativeSrc": "3266:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3266:17:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3285:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3285:2:8",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3256:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "3256:9:8"
																		},
																		"nativeSrc": "3256:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3256:32:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3248:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3248:3:8"
																},
																"nativeSrc": "3248:41:8",
																"nodeType": "YulFunctionCall",
																"src": "3248:41:8"
															},
															"variableNames": [
																{
																	"name": "hashValue",
																	"nativeSrc": "3235:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3235:9:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1641,
														"isOffset": false,
														"isSlot": false,
														"src": "3270:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1650,
														"isOffset": false,
														"isSlot": false,
														"src": "3235:9:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1652,
												"nodeType": "InlineAssembly",
												"src": "3196:103:8"
											},
											{
												"body": {
													"id": 1689,
													"nodeType": "Block",
													"src": "3342:291:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1663,
																			"name": "hashValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1650,
																			"src": "3448:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3460:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "3448:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "37",
																		"id": 1666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3466:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "3448:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1670,
																					"name": "buffer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1641,
																					"src": "3477:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1672,
																				"indexExpression": {
																					"id": 1671,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1654,
																					"src": "3484:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3477:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3471:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 1668,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "3471:5:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3471:16:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3490:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "3471:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3448:44:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1684,
															"nodeType": "IfStatement",
															"src": "3444:150:8",
															"trueBody": {
																"id": 1683,
																"nodeType": "Block",
																"src": "3494:100:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1677,
																					"name": "buffer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1641,
																					"src": "3562:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1679,
																				"indexExpression": {
																					"id": 1678,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1654,
																					"src": "3569:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3562:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "^=",
																			"rightHandSide": {
																				"hexValue": "30783230",
																				"id": 1680,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3575:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "0x20"
																			},
																			"src": "3562:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"id": 1682,
																		"nodeType": "ExpressionStatement",
																		"src": "3562:17:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1685,
																	"name": "hashValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "3607:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3621:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3607:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1688,
															"nodeType": "ExpressionStatement",
															"src": "3607:15:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1657,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1654,
														"src": "3330:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3334:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3330:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"initializationExpression": {
													"assignments": [
														1654
													],
													"declarations": [
														{
															"constant": false,
															"id": 1654,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3322:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1690,
															"src": "3314:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1653,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3314:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1656,
													"initialValue": {
														"hexValue": "3431",
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3326:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_41_by_1",
															"typeString": "int_const 41"
														},
														"value": "41"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3314:14:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "3337:3:8",
														"subExpression": {
															"id": 1660,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1654,
															"src": "3339:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1662,
													"nodeType": "ExpressionStatement",
													"src": "3337:3:8"
												},
												"nodeType": "ForStatement",
												"src": "3309:324:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1693,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "3656:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3649:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1691,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3649:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3649:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1639,
												"id": 1695,
												"nodeType": "Return",
												"src": "3642:21:8"
											}
										]
									},
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "2777:165:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toChecksumHexString",
									"nameLocation": "2956:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2984:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "2976:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:14:8"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3013:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1637,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3013:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:15:8"
									},
									"scope": 1735,
									"src": "2947:723:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "3825:104:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1709,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "3848:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3842:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1707,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3842:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3842:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3851:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3842:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1714,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "3867:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3861:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1712,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3861:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3861:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3870:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3861:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3842:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1721,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1700,
																			"src": "3896:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3890:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1719,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3890:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3890:8:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1718,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3880:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3880:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1727,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1702,
																			"src": "3919:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3913:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1725,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3913:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3913:8:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1724,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3903:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3903:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3880:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3842:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1706,
												"id": 1732,
												"nodeType": "Return",
												"src": "3835:87:8"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "3676:66:8",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "3756:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "3762:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1699,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3762:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3793:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "3779:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1701,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3779:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:34:8"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "3819:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:8"
									},
									"scope": 1735,
									"src": "3747:182:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1736,
							"src": "251:3680:8",
							"usedErrors": [
								1435
							],
							"usedEvents": []
						}
					],
					"src": "101:3831:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1759
						],
						"IERC165": [
							1771
						]
					},
					"id": 1760,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1737,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1760,
							"sourceUnit": 1772,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1738,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1771,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1741,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1771,
										"src": "688:7:9"
									},
									"id": 1742,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1740,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1759,
							"linearizedBaseContracts": [
								1759,
								1771
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1770
									],
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "845:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1750,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "862:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1752,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1771,
																	"src": "882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1771_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1771_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1751,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1771",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1749,
												"id": 1756,
												"nodeType": "Return",
												"src": "855:47:9"
											}
										]
									},
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "790:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:9"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "839:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:9"
									},
									"scope": 1759,
									"src": "763:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1760,
							"src": "660:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1771
						]
					},
					"id": 1772,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1761,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1762,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1771,
							"linearizedBaseContracts": [
								1771
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1764,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1767,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1771,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1772,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3377
						],
						"Panic": [
							1415
						],
						"SafeCast": [
							5142
						]
					},
					"id": 3378,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1773,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 1775,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3378,
							"sourceUnit": 1416,
							"src": "129:35:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1774,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1415,
										"src": "137:5:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 1777,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3378,
							"sourceUnit": 5143,
							"src": "165:40:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1776,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5142,
										"src": "173:8:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1778,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3377,
							"linearizedBaseContracts": [
								3377
							],
							"name": "Math",
							"nameLocation": "289:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1783,
									"members": [
										{
											"id": 1779,
											"name": "Floor",
											"nameLocation": "324:5:11",
											"nodeType": "EnumValue",
											"src": "324:5:11"
										},
										{
											"id": 1780,
											"name": "Ceil",
											"nameLocation": "367:4:11",
											"nodeType": "EnumValue",
											"src": "367:4:11"
										},
										{
											"id": 1781,
											"name": "Trunc",
											"nameLocation": "409:5:11",
											"nodeType": "EnumValue",
											"src": "409:5:11"
										},
										{
											"id": 1782,
											"name": "Expand",
											"nameLocation": "439:6:11",
											"nodeType": "EnumValue",
											"src": "439:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:11",
									"nodeType": "EnumDefinition",
									"src": "300:169:11"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "677:140:11",
										"statements": [
											{
												"id": 1813,
												"nodeType": "UncheckedBlock",
												"src": "687:124:11",
												"statements": [
													{
														"assignments": [
															1796
														],
														"declarations": [
															{
																"constant": false,
																"id": 1796,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "719:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1813,
																"src": "711:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1795,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1800,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1797,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "723:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1798,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "727:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "723:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "711:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1801,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1796,
																"src": "746:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1802,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "750:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1808,
														"nodeType": "IfStatement",
														"src": "742:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "761:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "768:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "760:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1794,
															"id": 1807,
															"nodeType": "Return",
															"src": "753:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "792:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1810,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1796,
																	"src": "798:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1811,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "791:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1794,
														"id": 1812,
														"nodeType": "Return",
														"src": "784:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "475:106:11",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "595:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "602:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "613:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:11"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "652:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "647:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "669:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "661:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:30:11"
									},
									"scope": 3377,
									"src": "586:231:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "1028:113:11",
										"statements": [
											{
												"id": 1841,
												"nodeType": "UncheckedBlock",
												"src": "1038:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1827,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "1066:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1828,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "1070:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1066:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1834,
														"nodeType": "IfStatement",
														"src": "1062:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1088:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1832,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1080:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1826,
															"id": 1833,
															"nodeType": "Return",
															"src": "1073:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1112:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1836,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1818,
																		"src": "1118:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1837,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1820,
																		"src": "1122:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1118:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1839,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1111:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1826,
														"id": 1840,
														"nodeType": "Return",
														"src": "1104:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "823:109:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "946:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "961:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "953:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "972:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "964:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:11"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1003:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "998:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "998:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1020:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "1012:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:30:11"
									},
									"scope": 3377,
									"src": "937:204:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1884,
										"nodeType": "Block",
										"src": "1355:417:11",
										"statements": [
											{
												"id": 1883,
												"nodeType": "UncheckedBlock",
												"src": "1365:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1855,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "1623:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1628:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1623:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1862,
														"nodeType": "IfStatement",
														"src": "1619:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1639:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1645:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1860,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1638:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1854,
															"id": 1861,
															"nodeType": "Return",
															"src": "1631:16:11"
														}
													},
													{
														"assignments": [
															1864
														],
														"declarations": [
															{
																"constant": false,
																"id": 1864,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1669:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1883,
																"src": "1661:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1863,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1661:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1868,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1865,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "1673:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1866,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "1677:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1661:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1869,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "1696:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1870,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "1700:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1696:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1872,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "1705:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1696:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1878,
														"nodeType": "IfStatement",
														"src": "1692:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1876,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1715:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1854,
															"id": 1877,
															"nodeType": "Return",
															"src": "1708:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1880,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "1753:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1881,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1746:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1854,
														"id": 1882,
														"nodeType": "Return",
														"src": "1739:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "1147:112:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1273:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1288:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "1280:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1299:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "1291:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:22:11"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1330:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "1325:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1347:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "1339:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:30:11"
									},
									"scope": 3377,
									"src": "1264:508:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1912,
										"nodeType": "Block",
										"src": "1987:114:11",
										"statements": [
											{
												"id": 1911,
												"nodeType": "UncheckedBlock",
												"src": "1997:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1897,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1890,
																"src": "2025:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2025:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1904,
														"nodeType": "IfStatement",
														"src": "2021:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2041:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2048:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1902,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2040:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1896,
															"id": 1903,
															"nodeType": "Return",
															"src": "2033:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2072:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1906,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1888,
																		"src": "2078:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1907,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "2082:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2078:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1909,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2071:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1896,
														"id": 1910,
														"nodeType": "Return",
														"src": "2064:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1886,
										"nodeType": "StructuredDocumentation",
										"src": "1778:113:11",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1905:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1920:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "1912:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1931:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "1923:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:22:11"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1962:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "1957:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1892,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1979:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "1971:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:30:11"
									},
									"scope": 3377,
									"src": "1896:205:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "2326:114:11",
										"statements": [
											{
												"id": 1939,
												"nodeType": "UncheckedBlock",
												"src": "2336:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1925,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "2364:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2369:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2364:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1932,
														"nodeType": "IfStatement",
														"src": "2360:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2380:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2387:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1930,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2379:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1924,
															"id": 1931,
															"nodeType": "Return",
															"src": "2372:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2411:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1934,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1916,
																		"src": "2417:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1935,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1918,
																		"src": "2421:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2417:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1937,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2410:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1924,
														"id": 1938,
														"nodeType": "Return",
														"src": "2403:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1914,
										"nodeType": "StructuredDocumentation",
										"src": "2107:123:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2244:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2259:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "2251:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2270:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "2262:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:22:11"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2301:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "2296:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1920,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2296:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2318:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "2310:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:30:11"
									},
									"scope": 3377,
									"src": "2235:205:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "2912:207:11",
										"statements": [
											{
												"id": 1966,
												"nodeType": "UncheckedBlock",
												"src": "2922:191:11",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1953,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "3060:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1956,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1954,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1946,
																						"src": "3066:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 1955,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1948,
																						"src": "3070:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3066:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1957,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3065:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1960,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1944,
																					"src": "3091:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 1958,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5142,
																					"src": "3075:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 1959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3084:6:11",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 5141,
																				"src": "3075:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 1961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3075:26:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3065:36:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1963,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3064:38:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3060:42:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1952,
														"id": 1965,
														"nodeType": "Return",
														"src": "3053:49:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "2446:374:11",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "2834:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "2847:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "2842:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2842:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2866:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "2858:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2877:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "2869:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:38:11"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "2903:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:9:11"
									},
									"scope": 3377,
									"src": "2825:294:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "3256:44:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1979,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "3281:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1980,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "3285:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3281:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1982,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "3288:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1983,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "3291:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1978,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "3273:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1977,
												"id": 1985,
												"nodeType": "Return",
												"src": "3266:27:11"
											}
										]
									},
									"documentation": {
										"id": 1969,
										"nodeType": "StructuredDocumentation",
										"src": "3125:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "3198:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "3202:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3221:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "3213:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:22:11"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "3247:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:9:11"
									},
									"scope": 3377,
									"src": "3189:111:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "3438:44:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1998,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1990,
																"src": "3463:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1999,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "3467:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3463:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2001,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "3470:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2002,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1992,
															"src": "3473:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1997,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "3455:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1996,
												"id": 2004,
												"nodeType": "Return",
												"src": "3448:27:11"
											}
										]
									},
									"documentation": {
										"id": 1988,
										"nodeType": "StructuredDocumentation",
										"src": "3306:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3380:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3392:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "3384:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3403:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "3395:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:22:11"
									},
									"returnParameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "3429:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:11"
									},
									"scope": 3377,
									"src": "3371:111:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2028,
										"nodeType": "Block",
										"src": "3666:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2016,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2009,
																	"src": "3721:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2017,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "3725:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3721:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2019,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3720:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2020,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2009,
																		"src": "3731:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2021,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "3735:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3731:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2023,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3730:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3740:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3730:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3720:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2015,
												"id": 2027,
												"nodeType": "Return",
												"src": "3713:28:11"
											}
										]
									},
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "3488:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "3604:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "3612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3631:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "3623:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:22:11"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "3657:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:9:11"
									},
									"scope": 3377,
									"src": "3595:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2069,
										"nodeType": "Block",
										"src": "4040:633:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2039,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "4054:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4059:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4054:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2050,
												"nodeType": "IfStatement",
												"src": "4050:150:11",
												"trueBody": {
													"id": 2049,
													"nodeType": "Block",
													"src": "4062:138:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2045,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "4166:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1415_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4172:16:11",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1382,
																		"src": "4166:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2042,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "4154:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1415_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4160:5:11",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1414,
																	"src": "4154:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2048,
															"nodeType": "ExpressionStatement",
															"src": "4154:35:11"
														}
													]
												}
											},
											{
												"id": 2068,
												"nodeType": "UncheckedBlock",
												"src": "4583:84:11",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2053,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2032,
																			"src": "4630:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4634:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4630:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2051,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5142,
																		"src": "4614:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4623:6:11",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5141,
																	"src": "4614:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4614:22:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2059,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2057,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2032,
																							"src": "4641:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2058,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4645:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4641:5:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2060,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4640:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2061,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2034,
																				"src": "4650:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4640:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4654:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4640:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2065,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4639:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4614:42:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2038,
														"id": 2067,
														"nodeType": "Return",
														"src": "4607:49:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2030,
										"nodeType": "StructuredDocumentation",
										"src": "3754:210:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3978:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3994:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "3986:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4005:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "3997:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:22:11"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "4031:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:9:11"
									},
									"scope": 3377,
									"src": "3969:704:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "5094:4128:11",
										"statements": [
											{
												"id": 2205,
												"nodeType": "UncheckedBlock",
												"src": "5104:4112:11",
												"statements": [
													{
														"assignments": [
															2083
														],
														"declarations": [
															{
																"constant": false,
																"id": 2083,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "5441:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2205,
																"src": "5433:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2082,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5433:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2087,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2084,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "5449:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2085,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "5453:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5449:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5433:21:11"
													},
													{
														"assignments": [
															2089
														],
														"declarations": [
															{
																"constant": false,
																"id": 2089,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "5521:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2205,
																"src": "5513:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2088,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5513:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2090,
														"nodeType": "VariableDeclarationStatement",
														"src": "5513:13:11"
													},
													{
														"AST": {
															"nativeSrc": "5593:122:11",
															"nodeType": "YulBlock",
															"src": "5593:122:11",
															"statements": [
																{
																	"nativeSrc": "5611:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5628:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5628:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5631:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5631:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5638:1:11",
																						"nodeType": "YulLiteral",
																						"src": "5638:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5634:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5634:3:11"
																				},
																				"nativeSrc": "5634:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5634:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5621:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5621:6:11"
																		},
																		"nativeSrc": "5621:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5621:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "5615:2:11",
																			"nodeType": "YulTypedName",
																			"src": "5615:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5658:43:11",
																	"nodeType": "YulAssignment",
																	"src": "5658:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5675:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5675:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5679:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5679:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5671:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:11"
																				},
																				"nativeSrc": "5671:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5671:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5690:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5690:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5694:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5694:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5687:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5687:2:11"
																				},
																				"nativeSrc": "5687:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5667:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:11"
																		},
																		"nativeSrc": "5667:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5658:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5658:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "5679:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "5658:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2073,
																"isOffset": false,
																"isSlot": false,
																"src": "5628:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2075,
																"isOffset": false,
																"isSlot": false,
																"src": "5631:1:11",
																"valueSize": 1
															}
														],
														"id": 2091,
														"nodeType": "InlineAssembly",
														"src": "5584:131:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2092,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "5796:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5805:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5796:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2100,
														"nodeType": "IfStatement",
														"src": "5792:368:11",
														"trueBody": {
															"id": 2099,
															"nodeType": "Block",
															"src": "5808:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2095,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "6126:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2096,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2077,
																			"src": "6134:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6126:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2081,
																	"id": 2098,
																	"nodeType": "Return",
																	"src": "6119:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2101,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "6270:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2102,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "6285:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6270:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2119,
														"nodeType": "IfStatement",
														"src": "6266:143:11",
														"trueBody": {
															"id": 2118,
															"nodeType": "Block",
															"src": "6292:117:11",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2108,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2077,
																							"src": "6330:11:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 2109,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6345:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6330:16:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 2111,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1415,
																							"src": "6348:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$1415_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 2112,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6354:16:11",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1382,
																						"src": "6348:22:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 2113,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1415,
																							"src": "6372:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$1415_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 2114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6378:14:11",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1378,
																						"src": "6372:20:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2107,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1968,
																					"src": "6322:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6322:71:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2104,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "6310:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$1415_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 2106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6316:5:11",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1414,
																			"src": "6310:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 2116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6310:84:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2117,
																	"nodeType": "ExpressionStatement",
																	"src": "6310:84:11"
																}
															]
														}
													},
													{
														"assignments": [
															2121
														],
														"declarations": [
															{
																"constant": false,
																"id": 2121,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6672:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2205,
																"src": "6664:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2120,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6664:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2122,
														"nodeType": "VariableDeclarationStatement",
														"src": "6664:17:11"
													},
													{
														"AST": {
															"nativeSrc": "6704:291:11",
															"nodeType": "YulBlock",
															"src": "6704:291:11",
															"statements": [
																{
																	"nativeSrc": "6773:38:11",
																	"nodeType": "YulAssignment",
																	"src": "6773:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6793:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "6793:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6796:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "6796:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "6799:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "6799:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "6786:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6786:6:11"
																		},
																		"nativeSrc": "6786:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6786:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "6773:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "6773:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6893:41:11",
																	"nodeType": "YulAssignment",
																	"src": "6893:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "6906:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6906:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "6916:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6916:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6927:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6927:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "6913:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "6913:2:11"
																				},
																				"nativeSrc": "6913:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6913:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6902:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6902:3:11"
																		},
																		"nativeSrc": "6902:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6902:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "6893:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6893:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6951:30:11",
																	"nodeType": "YulAssignment",
																	"src": "6951:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6964:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6964:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6971:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6960:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:11"
																		},
																		"nativeSrc": "6960:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6951:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6951:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2077,
																"isOffset": false,
																"isSlot": false,
																"src": "6799:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6927:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6951:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "6964:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "6893:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "6906:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "6773:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "6916:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "6971:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2073,
																"isOffset": false,
																"isSlot": false,
																"src": "6793:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2075,
																"isOffset": false,
																"isSlot": false,
																"src": "6796:1:11",
																"valueSize": 1
															}
														],
														"id": 2123,
														"nodeType": "InlineAssembly",
														"src": "6695:300:11"
													},
													{
														"assignments": [
															2125
														],
														"declarations": [
															{
																"constant": false,
																"id": 2125,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "7207:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2205,
																"src": "7199:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7199:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2132,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2126,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "7214:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7229:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2128,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2077,
																			"src": "7233:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7229:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2130,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7228:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7214:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7199:46:11"
													},
													{
														"AST": {
															"nativeSrc": "7268:366:11",
															"nodeType": "YulBlock",
															"src": "7268:366:11",
															"statements": [
																{
																	"nativeSrc": "7333:37:11",
																	"nodeType": "YulAssignment",
																	"src": "7333:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "7352:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "7352:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7365:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7365:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7348:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:11"
																		},
																		"nativeSrc": "7348:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "7333:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "7333:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "7437:25:11",
																	"nodeType": "YulAssignment",
																	"src": "7437:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "7450:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7450:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7457:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7457:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7446:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:11"
																		},
																		"nativeSrc": "7446:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "7437:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "7437:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "7581:39:11",
																	"nodeType": "YulAssignment",
																	"src": "7581:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7601:1:11",
																								"nodeType": "YulLiteral",
																								"src": "7601:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "7604:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "7604:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "7597:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "7597:3:11"
																						},
																						"nativeSrc": "7597:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "7597:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "7611:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "7611:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "7593:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:11"
																				},
																				"nativeSrc": "7593:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7593:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7618:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:11"
																		},
																		"nativeSrc": "7589:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "7581:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "7581:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2077,
																"isOffset": false,
																"isSlot": false,
																"src": "7333:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2077,
																"isOffset": false,
																"isSlot": false,
																"src": "7352:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "7437:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2083,
																"isOffset": false,
																"isSlot": false,
																"src": "7450:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2125,
																"isOffset": false,
																"isSlot": false,
																"src": "7365:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2125,
																"isOffset": false,
																"isSlot": false,
																"src": "7457:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2125,
																"isOffset": false,
																"isSlot": false,
																"src": "7581:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2125,
																"isOffset": false,
																"isSlot": false,
																"src": "7604:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2125,
																"isOffset": false,
																"isSlot": false,
																"src": "7611:4:11",
																"valueSize": 1
															}
														],
														"id": 2133,
														"nodeType": "InlineAssembly",
														"src": "7259:375:11"
													},
													{
														"expression": {
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2134,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "7700:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2135,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2089,
																	"src": "7709:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2136,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2125,
																	"src": "7717:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7700:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2139,
														"nodeType": "ExpressionStatement",
														"src": "7700:21:11"
													},
													{
														"assignments": [
															2141
														],
														"declarations": [
															{
																"constant": false,
																"id": 2141,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "8064:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2205,
																"src": "8056:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2140,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8056:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2148,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8075:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2143,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2077,
																			"src": "8079:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8075:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2145,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8074:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8094:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8074:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8056:39:11"
													},
													{
														"expression": {
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2149,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2141,
																"src": "8312:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8323:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2151,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2077,
																		"src": "8327:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2152,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2141,
																		"src": "8341:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8327:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8323:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8312:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2156,
														"nodeType": "ExpressionStatement",
														"src": "8312:36:11"
													},
													{
														"expression": {
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2157,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2141,
																"src": "8382:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8393:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2159,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2077,
																		"src": "8397:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2160,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2141,
																		"src": "8411:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8397:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8393:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8382:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2164,
														"nodeType": "ExpressionStatement",
														"src": "8382:36:11"
													},
													{
														"expression": {
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2165,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2141,
																"src": "8454:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8465:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2167,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2077,
																		"src": "8469:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2168,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2141,
																		"src": "8483:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8469:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8465:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8454:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2172,
														"nodeType": "ExpressionStatement",
														"src": "8454:36:11"
													},
													{
														"expression": {
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2173,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2141,
																"src": "8525:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8536:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2175,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2077,
																		"src": "8540:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2176,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2141,
																		"src": "8554:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8540:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8536:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8525:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2180,
														"nodeType": "ExpressionStatement",
														"src": "8525:36:11"
													},
													{
														"expression": {
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2181,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2141,
																"src": "8598:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8609:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2183,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2077,
																		"src": "8613:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2184,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2141,
																		"src": "8627:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8613:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8609:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8598:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2188,
														"nodeType": "ExpressionStatement",
														"src": "8598:36:11"
													},
													{
														"expression": {
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2189,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2141,
																"src": "8672:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8683:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2191,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2077,
																		"src": "8687:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2192,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2141,
																		"src": "8701:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8687:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8683:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8672:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2196,
														"nodeType": "ExpressionStatement",
														"src": "8672:36:11"
													},
													{
														"expression": {
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2197,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2080,
																"src": "9154:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2198,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "9163:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2199,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2141,
																	"src": "9171:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9163:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9154:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2202,
														"nodeType": "ExpressionStatement",
														"src": "9154:24:11"
													},
													{
														"expression": {
															"id": 2203,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "9199:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2081,
														"id": 2204,
														"nodeType": "Return",
														"src": "9192:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "4679:312:11",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5005:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5020:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "5012:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5031:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "5023:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5042:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "5034:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:43:11"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5086:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "5078:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:16:11"
									},
									"scope": 3377,
									"src": "4996:4226:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2243,
										"nodeType": "Block",
										"src": "9461:128:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2223,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2210,
																"src": "9485:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2224,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2212,
																"src": "9488:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2225,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2214,
																"src": "9491:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2222,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																2207,
																2244
															],
															"referencedDeclaration": 2207,
															"src": "9478:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9478:25:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2230,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2217,
																			"src": "9539:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$1783",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$1783",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 2229,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3376,
																		"src": "9522:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1783_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9522:26:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2233,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2210,
																				"src": "9559:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2234,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2212,
																				"src": "9562:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2235,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2214,
																				"src": "9565:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2232,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "9552:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9552:25:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9580:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9552:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9522:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 2227,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5142,
																"src": "9506:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9515:6:11",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5141,
															"src": "9506:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9506:76:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9478:104:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2221,
												"id": 2242,
												"nodeType": "Return",
												"src": "9471:111:11"
											}
										]
									},
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "9228:118:11",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "9360:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9375:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "9367:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9367:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9386:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "9378:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "9397:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "9389:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9389:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9419:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "9410:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1783",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2216,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2215,
														"name": "Rounding",
														"nameLocations": [
															"9410:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "9410:8:11"
													},
													"referencedDeclaration": 1783,
													"src": "9410:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1783",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9366:62:11"
									},
									"returnParameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "9452:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9452:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:9:11"
									},
									"scope": 3377,
									"src": "9351:238:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2340,
										"nodeType": "Block",
										"src": "10223:1849:11",
										"statements": [
											{
												"id": 2339,
												"nodeType": "UncheckedBlock",
												"src": "10233:1833:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2254,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "10261:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10266:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10261:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2259,
														"nodeType": "IfStatement",
														"src": "10257:20:11",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10276:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2253,
															"id": 2258,
															"nodeType": "Return",
															"src": "10269:8:11"
														}
													},
													{
														"assignments": [
															2261
														],
														"declarations": [
															{
																"constant": false,
																"id": 2261,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "10756:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2339,
																"src": "10748:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2260,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10748:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2265,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2262,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2247,
																"src": "10768:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2263,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "10772:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10768:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10748:25:11"
													},
													{
														"assignments": [
															2267
														],
														"declarations": [
															{
																"constant": false,
																"id": 2267,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "10795:3:11",
																"nodeType": "VariableDeclaration",
																"scope": 2339,
																"src": "10787:11:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2266,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10787:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2269,
														"initialValue": {
															"id": 2268,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2249,
															"src": "10801:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10787:15:11"
													},
													{
														"assignments": [
															2271
														],
														"declarations": [
															{
																"constant": false,
																"id": 2271,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "10945:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 2339,
																"src": "10938:8:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2270,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10938:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2273,
														"initialValue": {
															"hexValue": "30",
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10949:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10938:12:11"
													},
													{
														"assignments": [
															2275
														],
														"declarations": [
															{
																"constant": false,
																"id": 2275,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "10971:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 2339,
																"src": "10964:8:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2274,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10964:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2277,
														"initialValue": {
															"hexValue": "31",
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10975:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10964:12:11"
													},
													{
														"body": {
															"id": 2314,
															"nodeType": "Block",
															"src": "11014:882:11",
															"statements": [
																{
																	"assignments": [
																		2282
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2282,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "11040:8:11",
																			"nodeType": "VariableDeclaration",
																			"scope": 2314,
																			"src": "11032:16:11",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2281,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11032:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2286,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2283,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "11051:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2284,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2261,
																			"src": "11057:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11051:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "11032:34:11"
																},
																{
																	"expression": {
																		"id": 2297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 2287,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2267,
																					"src": "11086:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2288,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2261,
																					"src": "11091:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2289,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11085:16:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 2290,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2261,
																					"src": "11191:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2295,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2291,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2267,
																						"src": "11436:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2294,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2292,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2261,
																							"src": "11442:9:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 2293,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2282,
																							"src": "11454:8:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11442:20:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11436:26:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2296,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11104:376:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "11085:395:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2298,
																	"nodeType": "ExpressionStatement",
																	"src": "11085:395:11"
																},
																{
																	"expression": {
																		"id": 2312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 2299,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2271,
																					"src": "11500:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 2300,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2275,
																					"src": "11503:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 2301,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11499:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 2302,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2275,
																					"src": "11585:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 2310,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2303,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2271,
																						"src": "11839:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 2309,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2304,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2275,
																							"src": "11843:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 2307,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2282,
																									"src": "11854:8:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 2306,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "11847:6:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 2305,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "11847:6:11",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2308,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11847:16:11",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "11843:20:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "11839:24:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 2311,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11508:373:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "11499:382:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2313,
																	"nodeType": "ExpressionStatement",
																	"src": "11499:382:11"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2278,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2261,
																"src": "10998:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11011:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10998:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2315,
														"nodeType": "WhileStatement",
														"src": "10991:905:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2316,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "11914:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11921:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11914:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2321,
														"nodeType": "IfStatement",
														"src": "11910:22:11",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11931:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2253,
															"id": 2320,
															"nodeType": "Return",
															"src": "11924:8:11"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2323,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2271,
																		"src": "11983:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11987:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11983:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2326,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2249,
																		"src": "11990:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2330,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "12002:2:11",
																				"subExpression": {
																					"id": 2329,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2271,
																					"src": "12003:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 2328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11994:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2327,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11994:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11994:11:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11990:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2335,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2271,
																			"src": "12015:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12007:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2333,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12007:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12007:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2322,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1968,
																"src": "11975:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11975:43:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2253,
														"id": 2338,
														"nodeType": "Return",
														"src": "11968:50:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "9595:553:11",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 2341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "10162:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10177:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "10169:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "10188:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "10180:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:22:11"
									},
									"returnParameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "10214:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10214:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10213:9:11"
									},
									"scope": 3377,
									"src": "10153:1919:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "12672:82:11",
										"statements": [
											{
												"id": 2360,
												"nodeType": "UncheckedBlock",
												"src": "12682:66:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2353,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2344,
																	"src": "12725:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2354,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2346,
																		"src": "12728:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12732:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "12728:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2357,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2346,
																	"src": "12735:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2351,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3377,
																	"src": "12713:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$3377_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12718:6:11",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2398,
																"src": "12713:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12713:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2350,
														"id": 2359,
														"nodeType": "Return",
														"src": "12706:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2342,
										"nodeType": "StructuredDocumentation",
										"src": "12078:514:11",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "12606:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12626:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "12618:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12618:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "12637:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "12629:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12617:22:11"
									},
									"returnParameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "12663:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12662:9:11"
									},
									"scope": 3377,
									"src": "12597:157:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2397,
										"nodeType": "Block",
										"src": "13524:174:11",
										"statements": [
											{
												"assignments": [
													2375,
													2377
												],
												"declarations": [
													{
														"constant": false,
														"id": 2375,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13540:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2397,
														"src": "13535:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2374,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13535:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2377,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13557:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2397,
														"src": "13549:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2376,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13549:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2383,
												"initialValue": {
													"arguments": [
														{
															"id": 2379,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "13577:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2380,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2367,
															"src": "13580:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2381,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2369,
															"src": "13583:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2378,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2422,
															2504
														],
														"referencedDeclaration": 2422,
														"src": "13567:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 2382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13567:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13534:51:11"
											},
											{
												"condition": {
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13599:8:11",
													"subExpression": {
														"id": 2384,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "13600:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2394,
												"nodeType": "IfStatement",
												"src": "13595:74:11",
												"trueBody": {
													"id": 2393,
													"nodeType": "Block",
													"src": "13609:60:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2389,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "13635:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1415_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13641:16:11",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1382,
																		"src": "13635:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2386,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "13623:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1415_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13629:5:11",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1414,
																	"src": "13623:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13623:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2392,
															"nodeType": "ExpressionStatement",
															"src": "13623:35:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2395,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2377,
													"src": "13685:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2373,
												"id": 2396,
												"nodeType": "Return",
												"src": "13678:13:11"
											}
										]
									},
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "12760:678:11",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 2398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "13452:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13467:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "13459:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13459:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "13478:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "13470:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13470:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "13489:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "13481:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13481:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13458:33:11"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "13515:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13515:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13514:9:11"
									},
									"scope": 3377,
									"src": "13443:255:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2421,
										"nodeType": "Block",
										"src": "14552:1493:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2412,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2405,
														"src": "14566:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14571:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14566:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2419,
												"nodeType": "IfStatement",
												"src": "14562:29:11",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14582:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14589:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2417,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14581:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2411,
													"id": 2418,
													"nodeType": "Return",
													"src": "14574:17:11"
												}
											},
											{
												"AST": {
													"nativeSrc": "14626:1413:11",
													"nodeType": "YulBlock",
													"src": "14626:1413:11",
													"statements": [
														{
															"nativeSrc": "14640:22:11",
															"nodeType": "YulVariableDeclaration",
															"src": "14640:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14657:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14657:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14651:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "14651:5:11"
																},
																"nativeSrc": "14651:11:11",
																"nodeType": "YulFunctionCall",
																"src": "14651:11:11"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "14644:3:11",
																	"nodeType": "YulTypedName",
																	"src": "14644:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15570:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15570:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15575:4:11",
																		"nodeType": "YulLiteral",
																		"src": "15575:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15563:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15563:6:11"
																},
																"nativeSrc": "15563:17:11",
																"nodeType": "YulFunctionCall",
																"src": "15563:17:11"
															},
															"nativeSrc": "15563:17:11",
															"nodeType": "YulExpressionStatement",
															"src": "15563:17:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15604:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "15604:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15609:4:11",
																				"nodeType": "YulLiteral",
																				"src": "15609:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15600:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15600:3:11"
																		},
																		"nativeSrc": "15600:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15600:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15616:4:11",
																		"nodeType": "YulLiteral",
																		"src": "15616:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15593:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:11"
																},
																"nativeSrc": "15593:28:11",
																"nodeType": "YulFunctionCall",
																"src": "15593:28:11"
															},
															"nativeSrc": "15593:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "15593:28:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15645:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "15645:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15650:4:11",
																				"nodeType": "YulLiteral",
																				"src": "15650:4:11",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15641:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:11"
																		},
																		"nativeSrc": "15641:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15641:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15657:4:11",
																		"nodeType": "YulLiteral",
																		"src": "15657:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15634:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:11"
																},
																"nativeSrc": "15634:28:11",
																"nodeType": "YulFunctionCall",
																"src": "15634:28:11"
															},
															"nativeSrc": "15634:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "15634:28:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15686:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "15686:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15691:4:11",
																				"nodeType": "YulLiteral",
																				"src": "15691:4:11",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15682:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15682:3:11"
																		},
																		"nativeSrc": "15682:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15682:14:11"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "15698:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "15698:1:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15675:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15675:6:11"
																},
																"nativeSrc": "15675:25:11",
																"nodeType": "YulFunctionCall",
																"src": "15675:25:11"
															},
															"nativeSrc": "15675:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "15675:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15724:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "15724:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15729:4:11",
																				"nodeType": "YulLiteral",
																				"src": "15729:4:11",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15720:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:11"
																		},
																		"nativeSrc": "15720:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15720:14:11"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "15736:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "15736:1:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15713:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15713:6:11"
																},
																"nativeSrc": "15713:25:11",
																"nodeType": "YulFunctionCall",
																"src": "15713:25:11"
															},
															"nativeSrc": "15713:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "15713:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15762:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "15762:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15767:4:11",
																				"nodeType": "YulLiteral",
																				"src": "15767:4:11",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15758:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15758:3:11"
																		},
																		"nativeSrc": "15758:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15758:14:11"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "15774:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "15774:1:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15751:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:11"
																},
																"nativeSrc": "15751:25:11",
																"nodeType": "YulFunctionCall",
																"src": "15751:25:11"
															},
															"nativeSrc": "15751:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "15751:25:11"
														},
														{
															"nativeSrc": "15938:57:11",
															"nodeType": "YulAssignment",
															"src": "15938:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "15960:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15960:3:11"
																		},
																		"nativeSrc": "15960:5:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15960:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15967:4:11",
																		"nodeType": "YulLiteral",
																		"src": "15967:4:11",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15973:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15973:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15978:4:11",
																		"nodeType": "YulLiteral",
																		"src": "15978:4:11",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15984:4:11",
																		"nodeType": "YulLiteral",
																		"src": "15984:4:11",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15990:4:11",
																		"nodeType": "YulLiteral",
																		"src": "15990:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "15949:10:11",
																	"nodeType": "YulIdentifier",
																	"src": "15949:10:11"
																},
																"nativeSrc": "15949:46:11",
																"nodeType": "YulFunctionCall",
																"src": "15949:46:11"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "15938:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "15938:7:11"
																}
															]
														},
														{
															"nativeSrc": "16008:21:11",
															"nodeType": "YulAssignment",
															"src": "16008:21:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16024:4:11",
																		"nodeType": "YulLiteral",
																		"src": "16024:4:11",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16018:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "16018:5:11"
																},
																"nativeSrc": "16018:11:11",
																"nodeType": "YulFunctionCall",
																"src": "16018:11:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16008:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2401,
														"isOffset": false,
														"isSlot": false,
														"src": "15698:1:11",
														"valueSize": 1
													},
													{
														"declaration": 2403,
														"isOffset": false,
														"isSlot": false,
														"src": "15736:1:11",
														"valueSize": 1
													},
													{
														"declaration": 2405,
														"isOffset": false,
														"isSlot": false,
														"src": "15774:1:11",
														"valueSize": 1
													},
													{
														"declaration": 2410,
														"isOffset": false,
														"isSlot": false,
														"src": "16008:6:11",
														"valueSize": 1
													},
													{
														"declaration": 2408,
														"isOffset": false,
														"isSlot": false,
														"src": "15938:7:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2420,
												"nodeType": "InlineAssembly",
												"src": "14601:1438:11"
											}
										]
									},
									"documentation": {
										"id": 2399,
										"nodeType": "StructuredDocumentation",
										"src": "13704:738:11",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 2422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "14456:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14474:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "14466:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14466:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "14485:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "14477:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14477:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "14496:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "14488:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14488:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14465:33:11"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14527:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "14522:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2407,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14522:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14544:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "14536:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14536:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14521:30:11"
									},
									"scope": 3377,
									"src": "14447:1598:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2457,
										"nodeType": "Block",
										"src": "16242:179:11",
										"statements": [
											{
												"assignments": [
													2435,
													2437
												],
												"declarations": [
													{
														"constant": false,
														"id": 2435,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16258:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2457,
														"src": "16253:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2434,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16253:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2437,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16280:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2457,
														"src": "16267:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2436,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16267:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2443,
												"initialValue": {
													"arguments": [
														{
															"id": 2439,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2425,
															"src": "16300:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2440,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "16303:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2441,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2429,
															"src": "16306:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2438,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2422,
															2504
														],
														"referencedDeclaration": 2504,
														"src": "16290:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16290:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16252:56:11"
											},
											{
												"condition": {
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16322:8:11",
													"subExpression": {
														"id": 2444,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "16323:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2454,
												"nodeType": "IfStatement",
												"src": "16318:74:11",
												"trueBody": {
													"id": 2453,
													"nodeType": "Block",
													"src": "16332:60:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2449,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "16358:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1415_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16364:16:11",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1382,
																		"src": "16358:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2446,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "16346:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1415_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16352:5:11",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1414,
																	"src": "16346:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2452,
															"nodeType": "ExpressionStatement",
															"src": "16346:35:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2455,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2437,
													"src": "16408:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2433,
												"id": 2456,
												"nodeType": "Return",
												"src": "16401:13:11"
											}
										]
									},
									"documentation": {
										"id": 2423,
										"nodeType": "StructuredDocumentation",
										"src": "16051:85:11",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 2458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "16150:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16170:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "16157:14:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2424,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16157:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16186:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "16173:14:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16173:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16202:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "16189:14:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16189:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16156:48:11"
									},
									"returnParameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "16228:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16228:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16227:14:11"
									},
									"scope": 3377,
									"src": "16141:280:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2503,
										"nodeType": "Block",
										"src": "16675:771:11",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 2473,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "16700:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2472,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2537,
														"src": "16689:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16689:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2482,
												"nodeType": "IfStatement",
												"src": "16685:47:11",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16712:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16729:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16719:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 2476,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "16723:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 2479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16719:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 2480,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16711:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 2471,
													"id": 2481,
													"nodeType": "Return",
													"src": "16704:28:11"
												}
											},
											{
												"assignments": [
													2484
												],
												"declarations": [
													{
														"constant": false,
														"id": 2484,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "16751:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2503,
														"src": "16743:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16743:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2487,
												"initialValue": {
													"expression": {
														"id": 2485,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2465,
														"src": "16758:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 2486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16760:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16758:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16743:23:11"
											},
											{
												"expression": {
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2488,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2470,
														"src": "16848:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2491,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2461,
																	"src": "16874:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16876:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16874:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2493,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2463,
																	"src": "16884:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16886:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16884:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2495,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2484,
																"src": "16894:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2496,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2461,
																"src": "16900:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 2497,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2463,
																"src": "16903:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 2498,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2465,
																"src": "16906:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2489,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "16857:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 2490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "16861:12:11",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "16857:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 2499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16857:51:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "16848:60:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2501,
												"nodeType": "ExpressionStatement",
												"src": "16848:60:11"
											},
											{
												"AST": {
													"nativeSrc": "16944:496:11",
													"nodeType": "YulBlock",
													"src": "16944:496:11",
													"statements": [
														{
															"nativeSrc": "16958:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "16958:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "16977:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16977:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16985:4:11",
																		"nodeType": "YulLiteral",
																		"src": "16985:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16973:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16973:3:11"
																},
																"nativeSrc": "16973:17:11",
																"nodeType": "YulFunctionCall",
																"src": "16973:17:11"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "16962:7:11",
																	"nodeType": "YulTypedName",
																	"src": "16962:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17080:73:11",
															"nodeType": "YulAssignment",
															"src": "17080:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "17102:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17102:3:11"
																		},
																		"nativeSrc": "17102:5:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17102:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17109:4:11",
																		"nodeType": "YulLiteral",
																		"src": "17109:4:11",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17115:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "17115:7:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "17130:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "17130:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17124:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "17124:5:11"
																		},
																		"nativeSrc": "17124:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17124:13:11"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17139:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "17139:7:11"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17148:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17148:4:11"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "17091:10:11",
																	"nodeType": "YulIdentifier",
																	"src": "17091:10:11"
																},
																"nativeSrc": "17091:62:11",
																"nodeType": "YulFunctionCall",
																"src": "17091:62:11"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "17080:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "17080:7:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "17309:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17309:6:11"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17317:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17317:4:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17302:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17302:6:11"
																},
																"nativeSrc": "17302:20:11",
																"nodeType": "YulFunctionCall",
																"src": "17302:20:11"
															},
															"nativeSrc": "17302:20:11",
															"nodeType": "YulExpressionStatement",
															"src": "17302:20:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17405:4:11",
																		"nodeType": "YulLiteral",
																		"src": "17405:4:11",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "17415:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "17415:7:11"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "17424:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17424:4:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17411:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17411:3:11"
																		},
																		"nativeSrc": "17411:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17411:18:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17398:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17398:6:11"
																},
																"nativeSrc": "17398:32:11",
																"nodeType": "YulFunctionCall",
																"src": "17398:32:11"
															},
															"nativeSrc": "17398:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "17398:32:11"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2484,
														"isOffset": false,
														"isSlot": false,
														"src": "17148:4:11",
														"valueSize": 1
													},
													{
														"declaration": 2484,
														"isOffset": false,
														"isSlot": false,
														"src": "17317:4:11",
														"valueSize": 1
													},
													{
														"declaration": 2484,
														"isOffset": false,
														"isSlot": false,
														"src": "17424:4:11",
														"valueSize": 1
													},
													{
														"declaration": 2470,
														"isOffset": false,
														"isSlot": false,
														"src": "16977:6:11",
														"valueSize": 1
													},
													{
														"declaration": 2470,
														"isOffset": false,
														"isSlot": false,
														"src": "17130:6:11",
														"valueSize": 1
													},
													{
														"declaration": 2470,
														"isOffset": false,
														"isSlot": false,
														"src": "17309:6:11",
														"valueSize": 1
													},
													{
														"declaration": 2468,
														"isOffset": false,
														"isSlot": false,
														"src": "17080:7:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2502,
												"nodeType": "InlineAssembly",
												"src": "16919:521:11"
											}
										]
									},
									"documentation": {
										"id": 2459,
										"nodeType": "StructuredDocumentation",
										"src": "16427:88:11",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 2504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16529:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16561:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "16548:14:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16548:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16585:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "16572:14:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16572:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "16596:14:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16596:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16538:78:11"
									},
									"returnParameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "16645:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "16640:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16640:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16667:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "16654:19:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16654:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16639:35:11"
									},
									"scope": 3377,
									"src": "16520:926:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "17601:176:11",
										"statements": [
											{
												"body": {
													"id": 2532,
													"nodeType": "Block",
													"src": "17658:92:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2523,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2507,
																		"src": "17676:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2525,
																	"indexExpression": {
																		"id": 2524,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2513,
																		"src": "17686:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17676:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17692:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17676:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2531,
															"nodeType": "IfStatement",
															"src": "17672:68:11",
															"trueBody": {
																"id": 2530,
																"nodeType": "Block",
																"src": "17695:45:11",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 2528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17720:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 2511,
																		"id": 2529,
																		"nodeType": "Return",
																		"src": "17713:12:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2516,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2513,
														"src": "17631:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2517,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2507,
															"src": "17635:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17645:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17635:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17631:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2533,
												"initializationExpression": {
													"assignments": [
														2513
													],
													"declarations": [
														{
															"constant": false,
															"id": 2513,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17624:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 2533,
															"src": "17616:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2512,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17616:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2515,
													"initialValue": {
														"hexValue": "30",
														"id": 2514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17628:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17616:13:11"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17653:3:11",
														"subExpression": {
															"id": 2520,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2513,
															"src": "17655:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2522,
													"nodeType": "ExpressionStatement",
													"src": "17653:3:11"
												},
												"nodeType": "ForStatement",
												"src": "17611:139:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17766:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2511,
												"id": 2535,
												"nodeType": "Return",
												"src": "17759:11:11"
											}
										]
									},
									"documentation": {
										"id": 2505,
										"nodeType": "StructuredDocumentation",
										"src": "17452:72:11",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "17538:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "17562:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "17549:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17549:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17548:24:11"
									},
									"returnParameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "17595:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17595:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17594:6:11"
									},
									"scope": 3377,
									"src": "17529:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2755,
										"nodeType": "Block",
										"src": "18137:5124:11",
										"statements": [
											{
												"id": 2754,
												"nodeType": "UncheckedBlock",
												"src": "18147:5108:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2545,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2540,
																"src": "18241:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18246:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18241:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2551,
														"nodeType": "IfStatement",
														"src": "18237:53:11",
														"trueBody": {
															"id": 2550,
															"nodeType": "Block",
															"src": "18249:41:11",
															"statements": [
																{
																	"expression": {
																		"id": 2548,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2540,
																		"src": "18274:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2544,
																	"id": 2549,
																	"nodeType": "Return",
																	"src": "18267:8:11"
																}
															]
														}
													},
													{
														"assignments": [
															2553
														],
														"declarations": [
															{
																"constant": false,
																"id": 2553,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "19225:2:11",
																"nodeType": "VariableDeclaration",
																"scope": 2754,
																"src": "19217:10:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2552,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19217:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2555,
														"initialValue": {
															"id": 2554,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2540,
															"src": "19230:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19217:14:11"
													},
													{
														"assignments": [
															2557
														],
														"declarations": [
															{
																"constant": false,
																"id": 2557,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "19253:2:11",
																"nodeType": "VariableDeclaration",
																"scope": 2754,
																"src": "19245:10:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2556,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2559,
														"initialValue": {
															"hexValue": "31",
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19258:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19245:14:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2560,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2553,
																"src": "19278:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19285:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 2562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19290:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19285:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 2564,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19284:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "19278:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2575,
														"nodeType": "IfStatement",
														"src": "19274:92:11",
														"trueBody": {
															"id": 2574,
															"nodeType": "Block",
															"src": "19296:70:11",
															"statements": [
																{
																	"expression": {
																		"id": 2568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2566,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2553,
																			"src": "19314:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19321:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19314:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2569,
																	"nodeType": "ExpressionStatement",
																	"src": "19314:10:11"
																},
																{
																	"expression": {
																		"id": 2572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2570,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "19342:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19349:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19342:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2573,
																	"nodeType": "ExpressionStatement",
																	"src": "19342:9:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2576,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2553,
																"src": "19383:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 2579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19390:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 2578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19395:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19390:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 2580,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19389:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "19383:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2591,
														"nodeType": "IfStatement",
														"src": "19379:90:11",
														"trueBody": {
															"id": 2590,
															"nodeType": "Block",
															"src": "19400:69:11",
															"statements": [
																{
																	"expression": {
																		"id": 2584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2582,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2553,
																			"src": "19418:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19425:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19418:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2585,
																	"nodeType": "ExpressionStatement",
																	"src": "19418:9:11"
																},
																{
																	"expression": {
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2586,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "19445:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19452:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19445:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2589,
																	"nodeType": "ExpressionStatement",
																	"src": "19445:9:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2592,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2553,
																"src": "19486:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 2595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19493:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 2594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19498:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19493:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 2596,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19492:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "19486:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2607,
														"nodeType": "IfStatement",
														"src": "19482:90:11",
														"trueBody": {
															"id": 2606,
															"nodeType": "Block",
															"src": "19503:69:11",
															"statements": [
																{
																	"expression": {
																		"id": 2600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2598,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2553,
																			"src": "19521:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19528:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19521:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2601,
																	"nodeType": "ExpressionStatement",
																	"src": "19521:9:11"
																},
																{
																	"expression": {
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2602,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "19548:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19555:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19548:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2605,
																	"nodeType": "ExpressionStatement",
																	"src": "19548:9:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2608,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2553,
																"src": "19589:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19596:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19601:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19596:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 2612,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19595:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "19589:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2623,
														"nodeType": "IfStatement",
														"src": "19585:89:11",
														"trueBody": {
															"id": 2622,
															"nodeType": "Block",
															"src": "19606:68:11",
															"statements": [
																{
																	"expression": {
																		"id": 2616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2614,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2553,
																			"src": "19624:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19631:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19624:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2617,
																	"nodeType": "ExpressionStatement",
																	"src": "19624:9:11"
																},
																{
																	"expression": {
																		"id": 2620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2618,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "19651:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19658:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19651:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2621,
																	"nodeType": "ExpressionStatement",
																	"src": "19651:8:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2624,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2553,
																"src": "19691:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 2627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19698:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 2626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19703:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19698:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 2628,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19697:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "19691:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2639,
														"nodeType": "IfStatement",
														"src": "19687:87:11",
														"trueBody": {
															"id": 2638,
															"nodeType": "Block",
															"src": "19707:67:11",
															"statements": [
																{
																	"expression": {
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2630,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2553,
																			"src": "19725:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19732:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19725:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2633,
																	"nodeType": "ExpressionStatement",
																	"src": "19725:8:11"
																},
																{
																	"expression": {
																		"id": 2636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "19751:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19758:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19751:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2637,
																	"nodeType": "ExpressionStatement",
																	"src": "19751:8:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2640,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2553,
																"src": "19791:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19798:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19803:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19798:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 2644,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19797:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "19791:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2655,
														"nodeType": "IfStatement",
														"src": "19787:87:11",
														"trueBody": {
															"id": 2654,
															"nodeType": "Block",
															"src": "19807:67:11",
															"statements": [
																{
																	"expression": {
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2646,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2553,
																			"src": "19825:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19832:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19825:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2649,
																	"nodeType": "ExpressionStatement",
																	"src": "19825:8:11"
																},
																{
																	"expression": {
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2650,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "19851:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19858:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19851:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2653,
																	"nodeType": "ExpressionStatement",
																	"src": "19851:8:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2656,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2553,
																"src": "19891:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19898:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19903:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19898:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 2660,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19897:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "19891:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2667,
														"nodeType": "IfStatement",
														"src": "19887:61:11",
														"trueBody": {
															"id": 2666,
															"nodeType": "Block",
															"src": "19907:41:11",
															"statements": [
																{
																	"expression": {
																		"id": 2664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2662,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "19925:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19932:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19925:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2665,
																	"nodeType": "ExpressionStatement",
																	"src": "19925:8:11"
																}
															]
														}
													},
													{
														"expression": {
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2668,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "20368:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 2669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20374:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2670,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2557,
																				"src": "20378:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20374:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2672,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20373:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20385:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20373:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20368:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2676,
														"nodeType": "ExpressionStatement",
														"src": "20368:18:11"
													},
													{
														"expression": {
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2677,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "22273:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2678,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2557,
																				"src": "22279:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2679,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2540,
																					"src": "22284:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2680,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2557,
																					"src": "22288:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22284:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22279:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2683,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22278:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22295:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22278:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22273:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2687,
														"nodeType": "ExpressionStatement",
														"src": "22273:23:11"
													},
													{
														"expression": {
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2688,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "22382:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2689,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2557,
																				"src": "22388:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2690,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2540,
																					"src": "22393:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2691,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2557,
																					"src": "22397:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22393:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22388:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2694,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22387:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22404:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22387:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22382:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2698,
														"nodeType": "ExpressionStatement",
														"src": "22382:23:11"
													},
													{
														"expression": {
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2699,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "22493:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2700,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2557,
																				"src": "22499:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2703,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2701,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2540,
																					"src": "22504:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2702,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2557,
																					"src": "22508:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22504:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22499:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2705,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22498:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22515:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22498:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22493:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2709,
														"nodeType": "ExpressionStatement",
														"src": "22493:23:11"
													},
													{
														"expression": {
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2710,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "22602:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2711,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2557,
																				"src": "22608:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2712,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2540,
																					"src": "22613:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2713,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2557,
																					"src": "22617:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22613:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22608:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2716,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22607:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22624:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22607:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22602:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2720,
														"nodeType": "ExpressionStatement",
														"src": "22602:23:11"
													},
													{
														"expression": {
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2721,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "22712:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2722,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2557,
																				"src": "22718:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2725,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2723,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2540,
																					"src": "22723:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2724,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2557,
																					"src": "22727:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22723:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22718:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2727,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22717:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22734:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22717:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22712:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2731,
														"nodeType": "ExpressionStatement",
														"src": "22712:23:11"
													},
													{
														"expression": {
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2732,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "22822:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2733,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2557,
																				"src": "22828:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2734,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2540,
																					"src": "22833:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2735,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2557,
																					"src": "22837:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22833:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22828:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2738,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22827:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22844:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22827:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22822:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2742,
														"nodeType": "ExpressionStatement",
														"src": "22822:23:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2743,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "23211:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2746,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "23232:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2747,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2540,
																				"src": "23237:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2748,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2557,
																				"src": "23241:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23237:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23232:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2744,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5142,
																		"src": "23216:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23225:6:11",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5141,
																	"src": "23216:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23216:28:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23211:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2544,
														"id": 2753,
														"nodeType": "Return",
														"src": "23204:40:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2538,
										"nodeType": "StructuredDocumentation",
										"src": "17783:292:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 2756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18089:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18102:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "18094:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18094:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18093:11:11"
									},
									"returnParameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "18128:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18127:9:11"
									},
									"scope": 3377,
									"src": "18080:5181:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2789,
										"nodeType": "Block",
										"src": "23434:171:11",
										"statements": [
											{
												"id": 2788,
												"nodeType": "UncheckedBlock",
												"src": "23444:155:11",
												"statements": [
													{
														"assignments": [
															2768
														],
														"declarations": [
															{
																"constant": false,
																"id": 2768,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23476:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2788,
																"src": "23468:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2767,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23468:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2772,
														"initialValue": {
															"arguments": [
																{
																	"id": 2770,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2759,
																	"src": "23490:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2769,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2756,
																	2790
																],
																"referencedDeclaration": 2756,
																"src": "23485:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23485:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23468:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2773,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2768,
																"src": "23513:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2777,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2762,
																					"src": "23555:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1783",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1783",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2776,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3376,
																				"src": "23538:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1783_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23538:26:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2779,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2768,
																					"src": "23568:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2780,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2768,
																					"src": "23577:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23568:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2782,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2759,
																				"src": "23586:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23568:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "23538:49:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2774,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5142,
																		"src": "23522:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23531:6:11",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5141,
																	"src": "23522:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23522:66:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23513:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2766,
														"id": 2787,
														"nodeType": "Return",
														"src": "23506:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2757,
										"nodeType": "StructuredDocumentation",
										"src": "23267:86:11",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "23367:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23380:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "23372:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23372:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23392:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "23383:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1783",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2760,
														"name": "Rounding",
														"nameLocations": [
															"23383:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "23383:8:11"
													},
													"referencedDeclaration": 1783,
													"src": "23383:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1783",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23371:30:11"
									},
									"returnParameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "23425:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23425:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23424:9:11"
									},
									"scope": 3377,
									"src": "23358:247:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2985,
										"nodeType": "Block",
										"src": "23796:981:11",
										"statements": [
											{
												"assignments": [
													2799
												],
												"declarations": [
													{
														"constant": false,
														"id": 2799,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23814:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2985,
														"src": "23806:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2798,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23806:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2801,
												"initialValue": {
													"hexValue": "30",
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23823:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23806:18:11"
											},
											{
												"assignments": [
													2803
												],
												"declarations": [
													{
														"constant": false,
														"id": 2803,
														"mutability": "mutable",
														"name": "exp",
														"nameLocation": "23842:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2985,
														"src": "23834:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2802,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23834:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2804,
												"nodeType": "VariableDeclarationStatement",
												"src": "23834:11:11"
											},
											{
												"id": 2982,
												"nodeType": "UncheckedBlock",
												"src": "23855:893:11",
												"statements": [
													{
														"expression": {
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2805,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "23879:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313238",
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23885:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2809,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2793,
																				"src": "23907:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				},
																				"id": 2815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							},
																							"id": 2812,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2810,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23916:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "313238",
																								"id": 2811,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23921:3:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_128_by_1",
																									"typeString": "int_const 128"
																								},
																								"value": "128"
																							},
																							"src": "23916:8:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							}
																						}
																					],
																					"id": 2813,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23915:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1456"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2814,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23928:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23915:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				}
																			},
																			"src": "23907:22:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2807,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5142,
																			"src": "23891:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23900:6:11",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5141,
																		"src": "23891:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23891:39:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23885:45:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23879:51:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2820,
														"nodeType": "ExpressionStatement",
														"src": "23879:51:11"
													},
													{
														"expression": {
															"id": 2823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2821,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "23944:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2822,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "23954:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23944:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2824,
														"nodeType": "ExpressionStatement",
														"src": "23944:13:11"
													},
													{
														"expression": {
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2825,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "23971:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2826,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "23981:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23971:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2828,
														"nodeType": "ExpressionStatement",
														"src": "23971:13:11"
													},
													{
														"expression": {
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2829,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "23999:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3634",
																	"id": 2830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24005:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2833,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2793,
																				"src": "24026:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				},
																				"id": 2839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							},
																							"id": 2836,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2834,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24035:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 2835,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24040:2:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "24035:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							}
																						}
																					],
																					"id": 2837,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24034:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18446744073709551616_by_1",
																						"typeString": "int_const 18446744073709551616"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2838,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24046:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24034:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				}
																			},
																			"src": "24026:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2831,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5142,
																			"src": "24010:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24019:6:11",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5141,
																		"src": "24010:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24010:38:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24005:43:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23999:49:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2844,
														"nodeType": "ExpressionStatement",
														"src": "23999:49:11"
													},
													{
														"expression": {
															"id": 2847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2845,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "24062:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2846,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24072:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24062:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2848,
														"nodeType": "ExpressionStatement",
														"src": "24062:13:11"
													},
													{
														"expression": {
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2849,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "24089:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2850,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24099:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24089:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2852,
														"nodeType": "ExpressionStatement",
														"src": "24089:13:11"
													},
													{
														"expression": {
															"id": 2867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2853,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24117:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3332",
																	"id": 2854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24123:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2857,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2793,
																				"src": "24144:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				},
																				"id": 2863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							},
																							"id": 2860,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2858,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24153:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3332",
																								"id": 2859,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24158:2:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							},
																							"src": "24153:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							}
																						}
																					],
																					"id": 2861,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24152:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4294967296_by_1",
																						"typeString": "int_const 4294967296"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2862,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24164:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24152:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				}
																			},
																			"src": "24144:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2855,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5142,
																			"src": "24128:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24137:6:11",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5141,
																		"src": "24128:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24128:38:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24123:43:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24117:49:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2868,
														"nodeType": "ExpressionStatement",
														"src": "24117:49:11"
													},
													{
														"expression": {
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2869,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "24180:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2870,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24190:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24180:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2872,
														"nodeType": "ExpressionStatement",
														"src": "24180:13:11"
													},
													{
														"expression": {
															"id": 2875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2873,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "24207:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2874,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24217:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24207:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2876,
														"nodeType": "ExpressionStatement",
														"src": "24207:13:11"
													},
													{
														"expression": {
															"id": 2891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2877,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24235:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 2878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24241:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2881,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2793,
																				"src": "24262:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				},
																				"id": 2887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							},
																							"id": 2884,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2882,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24271:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3136",
																								"id": 2883,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24276:2:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_16_by_1",
																									"typeString": "int_const 16"
																								},
																								"value": "16"
																							},
																							"src": "24271:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							}
																						}
																					],
																					"id": 2885,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24270:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65536_by_1",
																						"typeString": "int_const 65536"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2886,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24282:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24270:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				}
																			},
																			"src": "24262:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2879,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5142,
																			"src": "24246:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24255:6:11",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5141,
																		"src": "24246:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24246:38:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24241:43:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24235:49:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2892,
														"nodeType": "ExpressionStatement",
														"src": "24235:49:11"
													},
													{
														"expression": {
															"id": 2895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2893,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "24298:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2894,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24308:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24298:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2896,
														"nodeType": "ExpressionStatement",
														"src": "24298:13:11"
													},
													{
														"expression": {
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2897,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "24325:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2898,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24335:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24325:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2900,
														"nodeType": "ExpressionStatement",
														"src": "24325:13:11"
													},
													{
														"expression": {
															"id": 2915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2901,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24353:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "38",
																	"id": 2902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24359:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2905,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2793,
																				"src": "24379:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"id": 2911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"id": 2908,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2906,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24388:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "38",
																								"id": 2907,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24393:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							},
																							"src": "24388:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							}
																						}
																					],
																					"id": 2909,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24387:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2910,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24398:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24387:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				}
																			},
																			"src": "24379:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2903,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5142,
																			"src": "24363:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24372:6:11",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5141,
																		"src": "24363:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24363:37:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24359:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24353:47:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2916,
														"nodeType": "ExpressionStatement",
														"src": "24353:47:11"
													},
													{
														"expression": {
															"id": 2919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2917,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "24414:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2918,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24424:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24414:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2920,
														"nodeType": "ExpressionStatement",
														"src": "24414:13:11"
													},
													{
														"expression": {
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2921,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "24441:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2922,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24451:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24441:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2924,
														"nodeType": "ExpressionStatement",
														"src": "24441:13:11"
													},
													{
														"expression": {
															"id": 2939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2925,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24469:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 2926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24475:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2929,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2793,
																				"src": "24495:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"id": 2935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"id": 2932,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2930,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24504:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "34",
																								"id": 2931,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24509:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "24504:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							}
																						}
																					],
																					"id": 2933,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24503:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2934,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24514:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24503:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				}
																			},
																			"src": "24495:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2927,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5142,
																			"src": "24479:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24488:6:11",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5141,
																		"src": "24479:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24479:37:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24475:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24469:47:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2940,
														"nodeType": "ExpressionStatement",
														"src": "24469:47:11"
													},
													{
														"expression": {
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2941,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "24530:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2942,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24540:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24530:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2944,
														"nodeType": "ExpressionStatement",
														"src": "24530:13:11"
													},
													{
														"expression": {
															"id": 2947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2945,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "24557:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2946,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24567:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24557:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2948,
														"nodeType": "ExpressionStatement",
														"src": "24557:13:11"
													},
													{
														"expression": {
															"id": 2963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2949,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24585:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24591:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2953,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2793,
																				"src": "24611:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"id": 2959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"id": 2956,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2954,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24620:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 2955,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24625:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "24620:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							}
																						}
																					],
																					"id": 2957,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24619:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2958,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24630:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24619:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			},
																			"src": "24611:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2951,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5142,
																			"src": "24595:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24604:6:11",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5141,
																		"src": "24595:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24595:37:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24591:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24585:47:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2964,
														"nodeType": "ExpressionStatement",
														"src": "24585:47:11"
													},
													{
														"expression": {
															"id": 2967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2965,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "24646:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2966,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24656:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24646:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2968,
														"nodeType": "ExpressionStatement",
														"src": "24646:13:11"
													},
													{
														"expression": {
															"id": 2971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2969,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "24673:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2970,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "24683:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24673:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2972,
														"nodeType": "ExpressionStatement",
														"src": "24673:13:11"
													},
													{
														"expression": {
															"id": 2980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2973,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "24701:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2976,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "24727:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24735:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24727:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2974,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5142,
																		"src": "24711:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24720:6:11",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5141,
																	"src": "24711:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24711:26:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24701:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2981,
														"nodeType": "ExpressionStatement",
														"src": "24701:36:11"
													}
												]
											},
											{
												"expression": {
													"id": 2983,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2799,
													"src": "24764:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2797,
												"id": 2984,
												"nodeType": "Return",
												"src": "24757:13:11"
											}
										]
									},
									"documentation": {
										"id": 2791,
										"nodeType": "StructuredDocumentation",
										"src": "23611:119:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23744:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23757:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "23749:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23749:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23748:15:11"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "23787:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23787:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23786:9:11"
									},
									"scope": 3377,
									"src": "23735:1042:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3019,
										"nodeType": "Block",
										"src": "25010:175:11",
										"statements": [
											{
												"id": 3018,
												"nodeType": "UncheckedBlock",
												"src": "25020:159:11",
												"statements": [
													{
														"assignments": [
															2998
														],
														"declarations": [
															{
																"constant": false,
																"id": 2998,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25052:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 3018,
																"src": "25044:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2997,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25044:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3002,
														"initialValue": {
															"arguments": [
																{
																	"id": 3000,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "25066:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2999,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2986,
																	3020
																],
																"referencedDeclaration": 2986,
																"src": "25061:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25061:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25044:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3003,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2998,
																"src": "25093:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3007,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2992,
																					"src": "25135:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1783",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1783",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3006,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3376,
																				"src": "25118:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1783_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25118:26:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 3009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "25148:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 3010,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2998,
																					"src": "25153:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25148:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3012,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2989,
																				"src": "25162:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25148:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "25118:49:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3004,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5142,
																		"src": "25102:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25111:6:11",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5141,
																	"src": "25102:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25102:66:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25093:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2996,
														"id": 3017,
														"nodeType": "Return",
														"src": "25086:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2987,
										"nodeType": "StructuredDocumentation",
										"src": "24783:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "24939:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24952:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "24944:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24944:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24968:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "24959:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1783",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2991,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2990,
														"name": "Rounding",
														"nameLocations": [
															"24959:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "24959:8:11"
													},
													"referencedDeclaration": 1783,
													"src": "24959:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1783",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24943:34:11"
									},
									"returnParameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "25001:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25001:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25000:9:11"
									},
									"scope": 3377,
									"src": "24930:255:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3148,
										"nodeType": "Block",
										"src": "25378:854:11",
										"statements": [
											{
												"assignments": [
													3029
												],
												"declarations": [
													{
														"constant": false,
														"id": 3029,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25396:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 3148,
														"src": "25388:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3028,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25388:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3031,
												"initialValue": {
													"hexValue": "30",
													"id": 3030,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25405:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25388:18:11"
											},
											{
												"id": 3145,
												"nodeType": "UncheckedBlock",
												"src": "25416:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3032,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3023,
																"src": "25444:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25453:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25459:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25453:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "25444:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3048,
														"nodeType": "IfStatement",
														"src": "25440:103:11",
														"trueBody": {
															"id": 3047,
															"nodeType": "Block",
															"src": "25463:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 3041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3037,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3023,
																			"src": "25481:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25490:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3039,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25496:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "25490:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "25481:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3042,
																	"nodeType": "ExpressionStatement",
																	"src": "25481:17:11"
																},
																{
																	"expression": {
																		"id": 3045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3043,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3029,
																			"src": "25516:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25526:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25516:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3046,
																	"nodeType": "ExpressionStatement",
																	"src": "25516:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3049,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3023,
																"src": "25560:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25569:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25575:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "25569:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "25560:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3065,
														"nodeType": "IfStatement",
														"src": "25556:103:11",
														"trueBody": {
															"id": 3064,
															"nodeType": "Block",
															"src": "25579:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 3058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3054,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3023,
																			"src": "25597:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25606:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25612:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "25606:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "25597:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3059,
																	"nodeType": "ExpressionStatement",
																	"src": "25597:17:11"
																},
																{
																	"expression": {
																		"id": 3062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3060,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3029,
																			"src": "25632:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25642:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "25632:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3063,
																	"nodeType": "ExpressionStatement",
																	"src": "25632:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3066,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3023,
																"src": "25676:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25685:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25691:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25685:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "25676:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3082,
														"nodeType": "IfStatement",
														"src": "25672:103:11",
														"trueBody": {
															"id": 3081,
															"nodeType": "Block",
															"src": "25695:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 3075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3071,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3023,
																			"src": "25713:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25722:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25728:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "25722:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "25713:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3076,
																	"nodeType": "ExpressionStatement",
																	"src": "25713:17:11"
																},
																{
																	"expression": {
																		"id": 3079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3077,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3029,
																			"src": "25748:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25758:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25748:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3080,
																	"nodeType": "ExpressionStatement",
																	"src": "25748:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3083,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3023,
																"src": "25792:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25801:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25807:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25801:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "25792:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3099,
														"nodeType": "IfStatement",
														"src": "25788:100:11",
														"trueBody": {
															"id": 3098,
															"nodeType": "Block",
															"src": "25810:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 3092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3088,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3023,
																			"src": "25828:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25837:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25843:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "25837:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "25828:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3093,
																	"nodeType": "ExpressionStatement",
																	"src": "25828:16:11"
																},
																{
																	"expression": {
																		"id": 3096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3094,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3029,
																			"src": "25862:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25872:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25862:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3097,
																	"nodeType": "ExpressionStatement",
																	"src": "25862:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3100,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3023,
																"src": "25905:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25914:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25920:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25914:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "25905:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3116,
														"nodeType": "IfStatement",
														"src": "25901:100:11",
														"trueBody": {
															"id": 3115,
															"nodeType": "Block",
															"src": "25923:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 3109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3105,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3023,
																			"src": "25941:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25950:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25956:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "25950:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "25941:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3110,
																	"nodeType": "ExpressionStatement",
																	"src": "25941:16:11"
																},
																{
																	"expression": {
																		"id": 3113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3111,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3029,
																			"src": "25975:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25985:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "25975:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3114,
																	"nodeType": "ExpressionStatement",
																	"src": "25975:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3117,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3023,
																"src": "26018:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26027:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26033:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "26027:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "26018:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3133,
														"nodeType": "IfStatement",
														"src": "26014:100:11",
														"trueBody": {
															"id": 3132,
															"nodeType": "Block",
															"src": "26036:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 3126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3122,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3023,
																			"src": "26054:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26063:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26069:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "26063:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "26054:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3127,
																	"nodeType": "ExpressionStatement",
																	"src": "26054:16:11"
																},
																{
																	"expression": {
																		"id": 3130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3128,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3029,
																			"src": "26088:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26098:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26088:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3131,
																	"nodeType": "ExpressionStatement",
																	"src": "26088:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3134,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3023,
																"src": "26131:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26140:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26146:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26140:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "26131:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3144,
														"nodeType": "IfStatement",
														"src": "26127:66:11",
														"trueBody": {
															"id": 3143,
															"nodeType": "Block",
															"src": "26149:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 3141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3139,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3029,
																			"src": "26167:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26177:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26167:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3142,
																	"nodeType": "ExpressionStatement",
																	"src": "26167:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3146,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3029,
													"src": "26219:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3027,
												"id": 3147,
												"nodeType": "Return",
												"src": "26212:13:11"
											}
										]
									},
									"documentation": {
										"id": 3021,
										"nodeType": "StructuredDocumentation",
										"src": "25191:120:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25325:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25339:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "25331:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25331:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25330:15:11"
									},
									"returnParameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "25369:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25369:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25368:9:11"
									},
									"scope": 3377,
									"src": "25316:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3182,
										"nodeType": "Block",
										"src": "26467:177:11",
										"statements": [
											{
												"id": 3181,
												"nodeType": "UncheckedBlock",
												"src": "26477:161:11",
												"statements": [
													{
														"assignments": [
															3161
														],
														"declarations": [
															{
																"constant": false,
																"id": 3161,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26509:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 3181,
																"src": "26501:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26501:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3165,
														"initialValue": {
															"arguments": [
																{
																	"id": 3163,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "26524:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3162,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3149,
																	3183
																],
																"referencedDeclaration": 3149,
																"src": "26518:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26518:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26501:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3166,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3161,
																"src": "26551:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3170,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3155,
																					"src": "26593:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1783",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1783",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3169,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3376,
																				"src": "26576:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1783_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26576:26:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 3172,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26606:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 3173,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3161,
																					"src": "26612:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26606:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3175,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3152,
																				"src": "26621:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26606:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26576:50:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3167,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5142,
																		"src": "26560:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26569:6:11",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5141,
																	"src": "26560:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26560:67:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26551:76:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3159,
														"id": 3180,
														"nodeType": "Return",
														"src": "26544:83:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3150,
										"nodeType": "StructuredDocumentation",
										"src": "26238:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "26395:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26409:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "26401:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26401:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3155,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26425:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "26416:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1783",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3154,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3153,
														"name": "Rounding",
														"nameLocations": [
															"26416:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "26416:8:11"
													},
													"referencedDeclaration": 1783,
													"src": "26416:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1783",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26400:34:11"
									},
									"returnParameters": {
										"id": 3159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "26458:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26458:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26457:9:11"
									},
									"scope": 3377,
									"src": "26386:258:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3319,
										"nodeType": "Block",
										"src": "26964:674:11",
										"statements": [
											{
												"assignments": [
													3192
												],
												"declarations": [
													{
														"constant": false,
														"id": 3192,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26982:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 3319,
														"src": "26974:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3191,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26974:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3194,
												"initialValue": {
													"hexValue": "30",
													"id": 3193,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26991:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26974:18:11"
											},
											{
												"assignments": [
													3196
												],
												"declarations": [
													{
														"constant": false,
														"id": 3196,
														"mutability": "mutable",
														"name": "isGt",
														"nameLocation": "27010:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 3319,
														"src": "27002:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27002:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3197,
												"nodeType": "VariableDeclarationStatement",
												"src": "27002:12:11"
											},
											{
												"id": 3316,
												"nodeType": "UncheckedBlock",
												"src": "27024:585:11",
												"statements": [
													{
														"expression": {
															"id": 3210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3198,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3196,
																"src": "27048:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3201,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3186,
																			"src": "27071:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			},
																			"id": 3207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						},
																						"id": 3204,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3202,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27080:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "313238",
																							"id": 3203,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27085:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_128_by_1",
																								"typeString": "int_const 128"
																							},
																							"value": "128"
																						},
																						"src": "27080:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						}
																					}
																				],
																				"id": 3205,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27079:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27092:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27079:14:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			}
																		},
																		"src": "27071:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3199,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5142,
																		"src": "27055:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27064:6:11",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5141,
																	"src": "27055:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27055:39:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27048:46:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3211,
														"nodeType": "ExpressionStatement",
														"src": "27048:46:11"
													},
													{
														"expression": {
															"id": 3216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3212,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3186,
																"src": "27108:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3213,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3196,
																	"src": "27118:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27125:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "27118:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27108:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3217,
														"nodeType": "ExpressionStatement",
														"src": "27108:20:11"
													},
													{
														"expression": {
															"id": 3222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3218,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "27142:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3219,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3196,
																	"src": "27152:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27159:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27152:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27142:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3223,
														"nodeType": "ExpressionStatement",
														"src": "27142:19:11"
													},
													{
														"expression": {
															"id": 3236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3224,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3196,
																"src": "27176:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3227,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3186,
																			"src": "27199:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			},
																			"id": 3233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						},
																						"id": 3230,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3228,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27208:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3634",
																							"id": 3229,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27213:2:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_64_by_1",
																								"typeString": "int_const 64"
																							},
																							"value": "64"
																						},
																						"src": "27208:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						}
																					}
																				],
																				"id": 3231,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27207:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551616_by_1",
																					"typeString": "int_const 18446744073709551616"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27219:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27207:13:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			}
																		},
																		"src": "27199:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3225,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5142,
																		"src": "27183:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27192:6:11",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5141,
																	"src": "27183:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27183:38:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27176:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3237,
														"nodeType": "ExpressionStatement",
														"src": "27176:45:11"
													},
													{
														"expression": {
															"id": 3242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3238,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3186,
																"src": "27235:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3239,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3196,
																	"src": "27245:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27252:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27245:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27235:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3243,
														"nodeType": "ExpressionStatement",
														"src": "27235:19:11"
													},
													{
														"expression": {
															"id": 3248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3244,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "27268:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3245,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3196,
																	"src": "27278:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27285:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "27278:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27268:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3249,
														"nodeType": "ExpressionStatement",
														"src": "27268:18:11"
													},
													{
														"expression": {
															"id": 3262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3250,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3196,
																"src": "27301:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3253,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3186,
																			"src": "27324:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			},
																			"id": 3259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						},
																						"id": 3256,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3254,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27333:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3332",
																							"id": 3255,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27338:2:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"src": "27333:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					}
																				],
																				"id": 3257,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27332:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967296_by_1",
																					"typeString": "int_const 4294967296"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27344:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27332:13:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			}
																		},
																		"src": "27324:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3251,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5142,
																		"src": "27308:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27317:6:11",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5141,
																	"src": "27308:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27308:38:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27301:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3263,
														"nodeType": "ExpressionStatement",
														"src": "27301:45:11"
													},
													{
														"expression": {
															"id": 3268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3264,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3186,
																"src": "27360:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3265,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3196,
																	"src": "27370:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27377:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "27370:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27360:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3269,
														"nodeType": "ExpressionStatement",
														"src": "27360:19:11"
													},
													{
														"expression": {
															"id": 3274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3270,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "27393:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3271,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3196,
																	"src": "27403:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27410:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27403:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27393:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3275,
														"nodeType": "ExpressionStatement",
														"src": "27393:18:11"
													},
													{
														"expression": {
															"id": 3288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3276,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3196,
																"src": "27426:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3279,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3186,
																			"src": "27449:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			},
																			"id": 3285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						},
																						"id": 3282,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3280,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27458:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3136",
																							"id": 3281,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27463:2:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"value": "16"
																						},
																						"src": "27458:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						}
																					}
																				],
																				"id": 3283,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27457:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65536_by_1",
																					"typeString": "int_const 65536"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27469:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27457:13:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			}
																		},
																		"src": "27449:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3277,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5142,
																		"src": "27433:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27442:6:11",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5141,
																	"src": "27433:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27433:38:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27426:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3289,
														"nodeType": "ExpressionStatement",
														"src": "27426:45:11"
													},
													{
														"expression": {
															"id": 3294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3290,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3186,
																"src": "27485:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3291,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3196,
																	"src": "27495:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27502:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27495:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27485:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3295,
														"nodeType": "ExpressionStatement",
														"src": "27485:19:11"
													},
													{
														"expression": {
															"id": 3300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3296,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "27518:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3297,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3196,
																	"src": "27528:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27535:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27528:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27518:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3301,
														"nodeType": "ExpressionStatement",
														"src": "27518:18:11"
													},
													{
														"expression": {
															"id": 3314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3302,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "27551:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3305,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3186,
																			"src": "27577:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"id": 3311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"id": 3308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3306,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27586:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "38",
																							"id": 3307,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27591:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "8"
																						},
																						"src": "27586:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						}
																					}
																				],
																				"id": 3309,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27585:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3310,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27596:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27585:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			}
																		},
																		"src": "27577:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3303,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5142,
																		"src": "27561:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27570:6:11",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5141,
																	"src": "27561:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27561:37:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27551:47:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3315,
														"nodeType": "ExpressionStatement",
														"src": "27551:47:11"
													}
												]
											},
											{
												"expression": {
													"id": 3317,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3192,
													"src": "27625:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3190,
												"id": 3318,
												"nodeType": "Return",
												"src": "27618:13:11"
											}
										]
									},
									"documentation": {
										"id": 3184,
										"nodeType": "StructuredDocumentation",
										"src": "26650:246:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26910:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26925:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "26917:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26917:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26916:15:11"
									},
									"returnParameters": {
										"id": 3190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "26955:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26955:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26954:9:11"
									},
									"scope": 3377,
									"src": "26901:737:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3356,
										"nodeType": "Block",
										"src": "27875:184:11",
										"statements": [
											{
												"id": 3355,
												"nodeType": "UncheckedBlock",
												"src": "27885:168:11",
												"statements": [
													{
														"assignments": [
															3332
														],
														"declarations": [
															{
																"constant": false,
																"id": 3332,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27917:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 3355,
																"src": "27909:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27909:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3336,
														"initialValue": {
															"arguments": [
																{
																	"id": 3334,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3323,
																	"src": "27933:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3333,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3320,
																	3357
																],
																"referencedDeclaration": 3320,
																"src": "27926:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27926:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27909:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3337,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3332,
																"src": "27960:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3341,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3326,
																					"src": "28002:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1783",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1783",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3340,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3376,
																				"src": "27985:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1783_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27985:26:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 3343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28015:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 3346,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 3344,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3332,
																								"src": "28021:6:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 3345,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "28031:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "28021:11:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 3347,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "28020:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28015:18:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3349,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3323,
																				"src": "28036:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28015:26:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27985:56:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3338,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5142,
																		"src": "27969:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27978:6:11",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5141,
																	"src": "27969:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27969:73:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27960:82:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3330,
														"id": 3354,
														"nodeType": "Return",
														"src": "27953:89:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3321,
										"nodeType": "StructuredDocumentation",
										"src": "27644:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "27802:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3323,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27817:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3357,
												"src": "27809:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27809:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3326,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27833:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3357,
												"src": "27824:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1783",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3324,
														"name": "Rounding",
														"nameLocations": [
															"27824:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "27824:8:11"
													},
													"referencedDeclaration": 1783,
													"src": "27824:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1783",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27808:34:11"
									},
									"returnParameters": {
										"id": 3330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3357,
												"src": "27866:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27866:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27865:9:11"
									},
									"scope": 3377,
									"src": "27793:266:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3375,
										"nodeType": "Block",
										"src": "28257:48:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3368,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3361,
																	"src": "28280:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1783",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1783",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28274:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3366,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "28274:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28274:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28292:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "28274:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28297:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "28274:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3365,
												"id": 3374,
												"nodeType": "Return",
												"src": "28267:31:11"
											}
										]
									},
									"documentation": {
										"id": 3358,
										"nodeType": "StructuredDocumentation",
										"src": "28065:113:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "28192:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3361,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28218:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3376,
												"src": "28209:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1783",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3360,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3359,
														"name": "Rounding",
														"nameLocations": [
															"28209:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "28209:8:11"
													},
													"referencedDeclaration": 1783,
													"src": "28209:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1783",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28208:19:11"
									},
									"returnParameters": {
										"id": 3365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3376,
												"src": "28251:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28251:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28250:6:11"
									},
									"scope": 3377,
									"src": "28183:122:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3378,
							"src": "281:28026:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:28205:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							5142
						]
					},
					"id": 5143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3379,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3380,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:12",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 5142,
							"linearizedBaseContracts": [
								5142
							],
							"name": "SafeCast",
							"nameLocation": "777:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3381,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:12",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 3387,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3383,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "902:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3382,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "914:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:12"
									},
									"src": "865:64:12"
								},
								{
									"documentation": {
										"id": 3388,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:12",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 3392,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "1049:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3389,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:12"
									},
									"src": "1015:48:12"
								},
								{
									"documentation": {
										"id": 3393,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:12",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 3399,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3395,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 3399,
												"src": "1177:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3394,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3399,
												"src": "1189:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3396,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:12"
									},
									"src": "1141:62:12"
								},
								{
									"documentation": {
										"id": 3400,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:12",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 3404,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3402,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3404,
												"src": "1323:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:12"
									},
									"src": "1289:49:12"
								},
								{
									"body": {
										"id": 3431,
										"nodeType": "Block",
										"src": "1695:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3412,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3407,
														"src": "1709:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 3414,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 3413,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 3417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3425,
												"nodeType": "IfStatement",
												"src": "1705:105:12",
												"trueBody": {
													"id": 3424,
													"nodeType": "Block",
													"src": "1736:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3421,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3407,
																		"src": "1793:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3419,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "1757:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3423,
															"nodeType": "RevertStatement",
															"src": "1750:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3428,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3407,
															"src": "1834:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 3426,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 3411,
												"id": 3430,
												"nodeType": "Return",
												"src": "1819:21:12"
											}
										]
									},
									"documentation": {
										"id": 3405,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:12",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3432,
												"src": "1648:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:12"
									},
									"returnParameters": {
										"id": 3411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3432,
												"src": "1686:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 3409,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:12"
									},
									"scope": 5142,
									"src": "1629:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3459,
										"nodeType": "Block",
										"src": "2204:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3440,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3435,
														"src": "2218:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 3442,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 3441,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 3445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3453,
												"nodeType": "IfStatement",
												"src": "2214:105:12",
												"trueBody": {
													"id": 3452,
													"nodeType": "Block",
													"src": "2245:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3449,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3435,
																		"src": "2302:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3447,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "2266:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3451,
															"nodeType": "RevertStatement",
															"src": "2259:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3456,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3435,
															"src": "2343:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 3454,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 3439,
												"id": 3458,
												"nodeType": "Return",
												"src": "2328:21:12"
											}
										]
									},
									"documentation": {
										"id": 3433,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:12",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3460,
												"src": "2157:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:12"
									},
									"returnParameters": {
										"id": 3439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3460,
												"src": "2195:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 3437,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:12"
									},
									"scope": 5142,
									"src": "2138:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3487,
										"nodeType": "Block",
										"src": "2713:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3468,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3463,
														"src": "2727:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 3470,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 3469,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 3473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3481,
												"nodeType": "IfStatement",
												"src": "2723:105:12",
												"trueBody": {
													"id": 3480,
													"nodeType": "Block",
													"src": "2754:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3477,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3463,
																		"src": "2811:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3475,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "2775:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3479,
															"nodeType": "RevertStatement",
															"src": "2768:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3484,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3463,
															"src": "2852:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 3482,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 3467,
												"id": 3486,
												"nodeType": "Return",
												"src": "2837:21:12"
											}
										]
									},
									"documentation": {
										"id": 3461,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:12",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3488,
												"src": "2666:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:12"
									},
									"returnParameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3488,
												"src": "2704:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 3465,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:12"
									},
									"scope": 5142,
									"src": "2647:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3515,
										"nodeType": "Block",
										"src": "3222:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3496,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3491,
														"src": "3236:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 3498,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 3497,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 3501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3509,
												"nodeType": "IfStatement",
												"src": "3232:105:12",
												"trueBody": {
													"id": 3508,
													"nodeType": "Block",
													"src": "3263:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3505,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3491,
																		"src": "3320:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3503,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "3284:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3507,
															"nodeType": "RevertStatement",
															"src": "3277:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3512,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3491,
															"src": "3361:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 3510,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 3495,
												"id": 3514,
												"nodeType": "Return",
												"src": "3346:21:12"
											}
										]
									},
									"documentation": {
										"id": 3489,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:12",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "3175:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:12"
									},
									"returnParameters": {
										"id": 3495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "3213:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 3493,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:12"
									},
									"scope": 5142,
									"src": "3156:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3543,
										"nodeType": "Block",
										"src": "3731:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3524,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3519,
														"src": "3745:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 3526,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 3525,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 3529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3537,
												"nodeType": "IfStatement",
												"src": "3741:105:12",
												"trueBody": {
													"id": 3536,
													"nodeType": "Block",
													"src": "3772:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3533,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3519,
																		"src": "3829:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3531,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "3793:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3535,
															"nodeType": "RevertStatement",
															"src": "3786:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3540,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3519,
															"src": "3870:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 3538,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 3523,
												"id": 3542,
												"nodeType": "Return",
												"src": "3855:21:12"
											}
										]
									},
									"documentation": {
										"id": 3517,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:12",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3544,
												"src": "3684:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:12"
									},
									"returnParameters": {
										"id": 3523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3544,
												"src": "3722:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 3521,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:12"
									},
									"scope": 5142,
									"src": "3665:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3571,
										"nodeType": "Block",
										"src": "4240:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3552,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3547,
														"src": "4254:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 3554,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 3553,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 3557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3565,
												"nodeType": "IfStatement",
												"src": "4250:105:12",
												"trueBody": {
													"id": 3564,
													"nodeType": "Block",
													"src": "4281:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3561,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3547,
																		"src": "4338:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3559,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "4302:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3563,
															"nodeType": "RevertStatement",
															"src": "4295:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3568,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3547,
															"src": "4379:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 3566,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 3551,
												"id": 3570,
												"nodeType": "Return",
												"src": "4364:21:12"
											}
										]
									},
									"documentation": {
										"id": 3545,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:12",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "4193:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:12"
									},
									"returnParameters": {
										"id": 3551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "4231:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 3549,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:12"
									},
									"scope": 5142,
									"src": "4174:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3599,
										"nodeType": "Block",
										"src": "4749:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3580,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3575,
														"src": "4763:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 3582,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 3581,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 3585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3593,
												"nodeType": "IfStatement",
												"src": "4759:105:12",
												"trueBody": {
													"id": 3592,
													"nodeType": "Block",
													"src": "4790:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3589,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3575,
																		"src": "4847:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3587,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "4811:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3591,
															"nodeType": "RevertStatement",
															"src": "4804:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3596,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3575,
															"src": "4888:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 3594,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 3579,
												"id": 3598,
												"nodeType": "Return",
												"src": "4873:21:12"
											}
										]
									},
									"documentation": {
										"id": 3573,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:12",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3575,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3600,
												"src": "4702:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:12"
									},
									"returnParameters": {
										"id": 3579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3600,
												"src": "4740:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 3577,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:12"
									},
									"scope": 5142,
									"src": "4683:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3627,
										"nodeType": "Block",
										"src": "5258:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3608,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3603,
														"src": "5272:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 3610,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 3609,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 3613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3621,
												"nodeType": "IfStatement",
												"src": "5268:105:12",
												"trueBody": {
													"id": 3620,
													"nodeType": "Block",
													"src": "5299:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3617,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3603,
																		"src": "5356:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3615,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "5320:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3619,
															"nodeType": "RevertStatement",
															"src": "5313:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3624,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3603,
															"src": "5397:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 3622,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 3607,
												"id": 3626,
												"nodeType": "Return",
												"src": "5382:21:12"
											}
										]
									},
									"documentation": {
										"id": 3601,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:12",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3628,
												"src": "5211:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:12"
									},
									"returnParameters": {
										"id": 3607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3628,
												"src": "5249:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 3605,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:12"
									},
									"scope": 5142,
									"src": "5192:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3655,
										"nodeType": "Block",
										"src": "5767:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3636,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3631,
														"src": "5781:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 3638,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 3637,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 3641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3649,
												"nodeType": "IfStatement",
												"src": "5777:105:12",
												"trueBody": {
													"id": 3648,
													"nodeType": "Block",
													"src": "5808:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3645,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3631,
																		"src": "5865:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3643,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "5829:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3647,
															"nodeType": "RevertStatement",
															"src": "5822:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3652,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3631,
															"src": "5906:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 3650,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 3635,
												"id": 3654,
												"nodeType": "Return",
												"src": "5891:21:12"
											}
										]
									},
									"documentation": {
										"id": 3629,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:12",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3631,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3656,
												"src": "5720:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:12"
									},
									"returnParameters": {
										"id": 3635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3656,
												"src": "5758:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 3633,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:12"
									},
									"scope": 5142,
									"src": "5701:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3683,
										"nodeType": "Block",
										"src": "6276:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3664,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3659,
														"src": "6290:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 3666,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 3665,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 3669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3677,
												"nodeType": "IfStatement",
												"src": "6286:105:12",
												"trueBody": {
													"id": 3676,
													"nodeType": "Block",
													"src": "6317:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3673,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3659,
																		"src": "6374:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3671,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "6338:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3675,
															"nodeType": "RevertStatement",
															"src": "6331:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3680,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3659,
															"src": "6415:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 3678,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 3663,
												"id": 3682,
												"nodeType": "Return",
												"src": "6400:21:12"
											}
										]
									},
									"documentation": {
										"id": 3657,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:12",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3659,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3684,
												"src": "6229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:12"
									},
									"returnParameters": {
										"id": 3663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3684,
												"src": "6267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 3661,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:12"
									},
									"scope": 5142,
									"src": "6210:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3711,
										"nodeType": "Block",
										"src": "6785:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3692,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3687,
														"src": "6799:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 3694,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 3693,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 3697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3705,
												"nodeType": "IfStatement",
												"src": "6795:105:12",
												"trueBody": {
													"id": 3704,
													"nodeType": "Block",
													"src": "6826:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3701,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3687,
																		"src": "6883:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3699,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "6847:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3703,
															"nodeType": "RevertStatement",
															"src": "6840:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3708,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3687,
															"src": "6924:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 3706,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 3691,
												"id": 3710,
												"nodeType": "Return",
												"src": "6909:21:12"
											}
										]
									},
									"documentation": {
										"id": 3685,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:12",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "6738:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:12"
									},
									"returnParameters": {
										"id": 3691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3712,
												"src": "6776:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 3689,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:12"
									},
									"scope": 5142,
									"src": "6719:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3739,
										"nodeType": "Block",
										"src": "7294:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3720,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3715,
														"src": "7308:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 3722,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 3721,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 3725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3733,
												"nodeType": "IfStatement",
												"src": "7304:105:12",
												"trueBody": {
													"id": 3732,
													"nodeType": "Block",
													"src": "7335:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3729,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3715,
																		"src": "7392:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3727,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "7356:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3731,
															"nodeType": "RevertStatement",
															"src": "7349:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3736,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3715,
															"src": "7433:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 3734,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 3719,
												"id": 3738,
												"nodeType": "Return",
												"src": "7418:21:12"
											}
										]
									},
									"documentation": {
										"id": 3713,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:12",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3715,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3740,
												"src": "7247:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:12"
									},
									"returnParameters": {
										"id": 3719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3740,
												"src": "7285:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3717,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:12"
									},
									"scope": 5142,
									"src": "7228:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3767,
										"nodeType": "Block",
										"src": "7803:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3748,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3743,
														"src": "7817:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 3750,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 3749,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 3753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3761,
												"nodeType": "IfStatement",
												"src": "7813:105:12",
												"trueBody": {
													"id": 3760,
													"nodeType": "Block",
													"src": "7844:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3757,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3743,
																		"src": "7901:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3755,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "7865:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3759,
															"nodeType": "RevertStatement",
															"src": "7858:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3764,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3743,
															"src": "7942:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 3762,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 3747,
												"id": 3766,
												"nodeType": "Return",
												"src": "7927:21:12"
											}
										]
									},
									"documentation": {
										"id": 3741,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:12",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3743,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3768,
												"src": "7756:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:12"
									},
									"returnParameters": {
										"id": 3747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3768,
												"src": "7794:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 3745,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:12"
									},
									"scope": 5142,
									"src": "7737:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3795,
										"nodeType": "Block",
										"src": "8312:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3776,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3771,
														"src": "8326:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 3778,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 3777,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 3781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3789,
												"nodeType": "IfStatement",
												"src": "8322:105:12",
												"trueBody": {
													"id": 3788,
													"nodeType": "Block",
													"src": "8353:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3785,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3771,
																		"src": "8410:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3783,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "8374:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3787,
															"nodeType": "RevertStatement",
															"src": "8367:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3792,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3771,
															"src": "8451:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 3790,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 3775,
												"id": 3794,
												"nodeType": "Return",
												"src": "8436:21:12"
											}
										]
									},
									"documentation": {
										"id": 3769,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:12",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3771,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3796,
												"src": "8265:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:12"
									},
									"returnParameters": {
										"id": 3775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3796,
												"src": "8303:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 3773,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:12"
									},
									"scope": 5142,
									"src": "8246:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3823,
										"nodeType": "Block",
										"src": "8821:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3804,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3799,
														"src": "8835:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 3806,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 3805,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 3809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3817,
												"nodeType": "IfStatement",
												"src": "8831:105:12",
												"trueBody": {
													"id": 3816,
													"nodeType": "Block",
													"src": "8862:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3813,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3799,
																		"src": "8919:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3811,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "8883:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3815,
															"nodeType": "RevertStatement",
															"src": "8876:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3820,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3799,
															"src": "8960:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 3818,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 3803,
												"id": 3822,
												"nodeType": "Return",
												"src": "8945:21:12"
											}
										]
									},
									"documentation": {
										"id": 3797,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:12",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3824,
												"src": "8774:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:12"
									},
									"returnParameters": {
										"id": 3803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3824,
												"src": "8812:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 3801,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:12"
									},
									"scope": 5142,
									"src": "8755:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3851,
										"nodeType": "Block",
										"src": "9330:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3832,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3827,
														"src": "9344:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 3834,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 3833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 3837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3845,
												"nodeType": "IfStatement",
												"src": "9340:105:12",
												"trueBody": {
													"id": 3844,
													"nodeType": "Block",
													"src": "9371:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3841,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3827,
																		"src": "9428:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3839,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "9392:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3843,
															"nodeType": "RevertStatement",
															"src": "9385:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3848,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3827,
															"src": "9469:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 3846,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 3831,
												"id": 3850,
												"nodeType": "Return",
												"src": "9454:21:12"
											}
										]
									},
									"documentation": {
										"id": 3825,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:12",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3827,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3852,
												"src": "9283:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:12"
									},
									"returnParameters": {
										"id": 3831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3852,
												"src": "9321:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3829,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:12"
									},
									"scope": 5142,
									"src": "9264:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3879,
										"nodeType": "Block",
										"src": "9839:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3860,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3855,
														"src": "9853:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 3862,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 3861,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 3865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3873,
												"nodeType": "IfStatement",
												"src": "9849:105:12",
												"trueBody": {
													"id": 3872,
													"nodeType": "Block",
													"src": "9880:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3869,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3855,
																		"src": "9937:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3867,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "9901:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3871,
															"nodeType": "RevertStatement",
															"src": "9894:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3876,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3855,
															"src": "9978:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 3874,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 3859,
												"id": 3878,
												"nodeType": "Return",
												"src": "9963:21:12"
											}
										]
									},
									"documentation": {
										"id": 3853,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:12",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3855,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3880,
												"src": "9792:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:12"
									},
									"returnParameters": {
										"id": 3859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3880,
												"src": "9830:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 3857,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:12"
									},
									"scope": 5142,
									"src": "9773:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3907,
										"nodeType": "Block",
										"src": "10348:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3888,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3883,
														"src": "10362:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 3890,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 3889,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 3893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3901,
												"nodeType": "IfStatement",
												"src": "10358:105:12",
												"trueBody": {
													"id": 3900,
													"nodeType": "Block",
													"src": "10389:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3897,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3883,
																		"src": "10446:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3895,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "10410:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3899,
															"nodeType": "RevertStatement",
															"src": "10403:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3904,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3883,
															"src": "10487:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 3902,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 3887,
												"id": 3906,
												"nodeType": "Return",
												"src": "10472:21:12"
											}
										]
									},
									"documentation": {
										"id": 3881,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:12",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3908,
												"src": "10301:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:12"
									},
									"returnParameters": {
										"id": 3887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3908,
												"src": "10339:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 3885,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:12"
									},
									"scope": 5142,
									"src": "10282:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3935,
										"nodeType": "Block",
										"src": "10857:152:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3916,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3911,
														"src": "10871:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 3918,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 3917,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 3921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3929,
												"nodeType": "IfStatement",
												"src": "10867:105:12",
												"trueBody": {
													"id": 3928,
													"nodeType": "Block",
													"src": "10898:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3925,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3911,
																		"src": "10955:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3923,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "10919:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3927,
															"nodeType": "RevertStatement",
															"src": "10912:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3932,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3911,
															"src": "10996:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 3930,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 3933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 3915,
												"id": 3934,
												"nodeType": "Return",
												"src": "10981:21:12"
											}
										]
									},
									"documentation": {
										"id": 3909,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:12",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3936,
												"src": "10810:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:12"
									},
									"returnParameters": {
										"id": 3915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3936,
												"src": "10848:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 3913,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:12"
									},
									"scope": 5142,
									"src": "10791:218:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3963,
										"nodeType": "Block",
										"src": "11360:149:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3944,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3939,
														"src": "11374:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 3946,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 3945,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 3949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3957,
												"nodeType": "IfStatement",
												"src": "11370:103:12",
												"trueBody": {
													"id": 3956,
													"nodeType": "Block",
													"src": "11400:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3953,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3939,
																		"src": "11456:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3951,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "11421:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3955,
															"nodeType": "RevertStatement",
															"src": "11414:48:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3960,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3939,
															"src": "11496:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3959,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 3958,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 3961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 3943,
												"id": 3962,
												"nodeType": "Return",
												"src": "11482:20:12"
											}
										]
									},
									"documentation": {
										"id": 3937,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:12",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3939,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3964,
												"src": "11314:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:12"
									},
									"returnParameters": {
										"id": 3943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3964,
												"src": "11352:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3941,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:12"
									},
									"scope": 5142,
									"src": "11296:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3991,
										"nodeType": "Block",
										"src": "11860:149:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3972,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3967,
														"src": "11874:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 3974,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 3973,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 3977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3985,
												"nodeType": "IfStatement",
												"src": "11870:103:12",
												"trueBody": {
													"id": 3984,
													"nodeType": "Block",
													"src": "11900:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3981,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3967,
																		"src": "11956:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3979,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "11921:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3983,
															"nodeType": "RevertStatement",
															"src": "11914:48:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3988,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3967,
															"src": "11996:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 3986,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 3989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 3971,
												"id": 3990,
												"nodeType": "Return",
												"src": "11982:20:12"
											}
										]
									},
									"documentation": {
										"id": 3965,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:12",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3992,
												"src": "11814:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:12"
									},
									"returnParameters": {
										"id": 3971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3992,
												"src": "11852:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 3969,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:12"
									},
									"scope": 5142,
									"src": "11796:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4019,
										"nodeType": "Block",
										"src": "12360:149:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4000,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3995,
														"src": "12374:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 4002,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 4001,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 4005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4013,
												"nodeType": "IfStatement",
												"src": "12370:103:12",
												"trueBody": {
													"id": 4012,
													"nodeType": "Block",
													"src": "12400:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 4008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 4009,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3995,
																		"src": "12456:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4007,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "12421:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4011,
															"nodeType": "RevertStatement",
															"src": "12414:48:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4016,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3995,
															"src": "12496:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 4014,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 4017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 3999,
												"id": 4018,
												"nodeType": "Return",
												"src": "12482:20:12"
											}
										]
									},
									"documentation": {
										"id": 3993,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:12",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 4020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3995,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4020,
												"src": "12314:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:12"
									},
									"returnParameters": {
										"id": 3999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4020,
												"src": "12352:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 3997,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:12"
									},
									"scope": 5142,
									"src": "12296:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4047,
										"nodeType": "Block",
										"src": "12860:149:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4028,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4023,
														"src": "12874:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 4030,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 4029,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 4033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4041,
												"nodeType": "IfStatement",
												"src": "12870:103:12",
												"trueBody": {
													"id": 4040,
													"nodeType": "Block",
													"src": "12900:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4037,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4023,
																		"src": "12956:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4035,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "12921:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4039,
															"nodeType": "RevertStatement",
															"src": "12914:48:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4044,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4023,
															"src": "12996:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 4042,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 4045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 4027,
												"id": 4046,
												"nodeType": "Return",
												"src": "12982:20:12"
											}
										]
									},
									"documentation": {
										"id": 4021,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:12",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4048,
												"src": "12814:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:12"
									},
									"returnParameters": {
										"id": 4027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4048,
												"src": "12852:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 4025,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:12"
									},
									"scope": 5142,
									"src": "12796:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4075,
										"nodeType": "Block",
										"src": "13360:149:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4056,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4051,
														"src": "13374:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 4058,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 4057,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 4061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4069,
												"nodeType": "IfStatement",
												"src": "13370:103:12",
												"trueBody": {
													"id": 4068,
													"nodeType": "Block",
													"src": "13400:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4065,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4051,
																		"src": "13456:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4063,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "13421:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4067,
															"nodeType": "RevertStatement",
															"src": "13414:48:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4072,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4051,
															"src": "13496:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 4070,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 4073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 4055,
												"id": 4074,
												"nodeType": "Return",
												"src": "13482:20:12"
											}
										]
									},
									"documentation": {
										"id": 4049,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:12",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4051,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4076,
												"src": "13314:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:12"
									},
									"returnParameters": {
										"id": 4055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4076,
												"src": "13352:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4053,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:12"
									},
									"scope": 5142,
									"src": "13296:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4103,
										"nodeType": "Block",
										"src": "13860:149:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4084,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4079,
														"src": "13874:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 4086,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 4085,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 4089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4097,
												"nodeType": "IfStatement",
												"src": "13870:103:12",
												"trueBody": {
													"id": 4096,
													"nodeType": "Block",
													"src": "13900:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4093,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4079,
																		"src": "13956:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4091,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "13921:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4095,
															"nodeType": "RevertStatement",
															"src": "13914:48:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4100,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4079,
															"src": "13996:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 4098,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 4101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 4083,
												"id": 4102,
												"nodeType": "Return",
												"src": "13982:20:12"
											}
										]
									},
									"documentation": {
										"id": 4077,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:12",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 4104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4079,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4104,
												"src": "13814:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:12"
									},
									"returnParameters": {
										"id": 4083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4104,
												"src": "13852:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 4081,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:12"
									},
									"scope": 5142,
									"src": "13796:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4131,
										"nodeType": "Block",
										"src": "14360:149:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4112,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4107,
														"src": "14374:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 4114,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 4113,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 4117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4125,
												"nodeType": "IfStatement",
												"src": "14370:103:12",
												"trueBody": {
													"id": 4124,
													"nodeType": "Block",
													"src": "14400:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 4120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 4121,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4107,
																		"src": "14456:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4119,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "14421:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4123,
															"nodeType": "RevertStatement",
															"src": "14414:48:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4128,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4107,
															"src": "14496:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 4126,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 4129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 4111,
												"id": 4130,
												"nodeType": "Return",
												"src": "14482:20:12"
											}
										]
									},
									"documentation": {
										"id": 4105,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:12",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 4132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4132,
												"src": "14314:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:12"
									},
									"returnParameters": {
										"id": 4111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4132,
												"src": "14352:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 4109,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:12"
									},
									"scope": 5142,
									"src": "14296:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4159,
										"nodeType": "Block",
										"src": "14860:149:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4140,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4135,
														"src": "14874:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 4142,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 4141,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 4145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4153,
												"nodeType": "IfStatement",
												"src": "14870:103:12",
												"trueBody": {
													"id": 4152,
													"nodeType": "Block",
													"src": "14900:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 4148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 4149,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4135,
																		"src": "14956:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4147,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "14921:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4151,
															"nodeType": "RevertStatement",
															"src": "14914:48:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4156,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4135,
															"src": "14996:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 4154,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 4157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 4139,
												"id": 4158,
												"nodeType": "Return",
												"src": "14982:20:12"
											}
										]
									},
									"documentation": {
										"id": 4133,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:12",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4135,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4160,
												"src": "14814:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:12"
									},
									"returnParameters": {
										"id": 4139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4160,
												"src": "14852:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 4137,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:12"
									},
									"scope": 5142,
									"src": "14796:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4187,
										"nodeType": "Block",
										"src": "15360:149:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4168,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4163,
														"src": "15374:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 4170,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 4169,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 4173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4181,
												"nodeType": "IfStatement",
												"src": "15370:103:12",
												"trueBody": {
													"id": 4180,
													"nodeType": "Block",
													"src": "15400:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4177,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4163,
																		"src": "15456:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4175,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "15421:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4179,
															"nodeType": "RevertStatement",
															"src": "15414:48:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4184,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4163,
															"src": "15496:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 4182,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 4185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 4167,
												"id": 4186,
												"nodeType": "Return",
												"src": "15482:20:12"
											}
										]
									},
									"documentation": {
										"id": 4161,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:12",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4188,
												"src": "15314:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:12"
									},
									"returnParameters": {
										"id": 4167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4188,
												"src": "15352:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 4165,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:12"
									},
									"scope": 5142,
									"src": "15296:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4215,
										"nodeType": "Block",
										"src": "15860:149:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4196,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4191,
														"src": "15874:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 4198,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 4197,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 4201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4209,
												"nodeType": "IfStatement",
												"src": "15870:103:12",
												"trueBody": {
													"id": 4208,
													"nodeType": "Block",
													"src": "15900:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 4204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 4205,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4191,
																		"src": "15956:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4203,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "15921:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4207,
															"nodeType": "RevertStatement",
															"src": "15914:48:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4212,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4191,
															"src": "15996:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 4210,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 4213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 4195,
												"id": 4214,
												"nodeType": "Return",
												"src": "15982:20:12"
											}
										]
									},
									"documentation": {
										"id": 4189,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:12",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 4216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4216,
												"src": "15814:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:12"
									},
									"returnParameters": {
										"id": 4195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4216,
												"src": "15852:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 4193,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:12"
									},
									"scope": 5142,
									"src": "15796:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4243,
										"nodeType": "Block",
										"src": "16360:149:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4224,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4219,
														"src": "16374:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 4226,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 4225,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 4229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4237,
												"nodeType": "IfStatement",
												"src": "16370:103:12",
												"trueBody": {
													"id": 4236,
													"nodeType": "Block",
													"src": "16400:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4233,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4219,
																		"src": "16456:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4231,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "16421:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4235,
															"nodeType": "RevertStatement",
															"src": "16414:48:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4240,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4219,
															"src": "16496:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 4238,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 4241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 4223,
												"id": 4242,
												"nodeType": "Return",
												"src": "16482:20:12"
											}
										]
									},
									"documentation": {
										"id": 4217,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:12",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4244,
												"src": "16314:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:12"
									},
									"returnParameters": {
										"id": 4223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4244,
												"src": "16352:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 4221,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:12"
									},
									"scope": 5142,
									"src": "16296:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4271,
										"nodeType": "Block",
										"src": "16854:146:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4252,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4247,
														"src": "16868:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 4254,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 4253,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 4257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4265,
												"nodeType": "IfStatement",
												"src": "16864:101:12",
												"trueBody": {
													"id": 4264,
													"nodeType": "Block",
													"src": "16893:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4261,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4247,
																		"src": "16948:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4259,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3387,
																	"src": "16914:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4263,
															"nodeType": "RevertStatement",
															"src": "16907:47:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4268,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4247,
															"src": "16987:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 4266,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:12",
															"typeDescriptions": {}
														}
													},
													"id": 4269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 4251,
												"id": 4270,
												"nodeType": "Return",
												"src": "16974:19:12"
											}
										]
									},
									"documentation": {
										"id": 4245,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:12",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4272,
												"src": "16809:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:12"
									},
									"returnParameters": {
										"id": 4251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4272,
												"src": "16847:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4249,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:12"
									},
									"scope": 5142,
									"src": "16792:208:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4294,
										"nodeType": "Block",
										"src": "17236:128:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4280,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4275,
														"src": "17250:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 4281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4288,
												"nodeType": "IfStatement",
												"src": "17246:81:12",
												"trueBody": {
													"id": 4287,
													"nodeType": "Block",
													"src": "17261:66:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4284,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4275,
																		"src": "17310:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4283,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3392,
																	"src": "17282:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 4285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4286,
															"nodeType": "RevertStatement",
															"src": "17275:41:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4291,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4275,
															"src": "17351:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 4290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 4289,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 4292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4279,
												"id": 4293,
												"nodeType": "Return",
												"src": "17336:21:12"
											}
										]
									},
									"documentation": {
										"id": 4273,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:12",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 4295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4295,
												"src": "17190:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4274,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:12"
									},
									"returnParameters": {
										"id": 4279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4295,
												"src": "17227:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:12"
									},
									"scope": 5142,
									"src": "17171:193:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4320,
										"nodeType": "Block",
										"src": "17761:150:12",
										"statements": [
											{
												"expression": {
													"id": 4308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4303,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4301,
														"src": "17771:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4306,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4298,
																"src": "17791:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 4304,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 4309,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4310,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4301,
														"src": "17811:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4311,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4298,
														"src": "17825:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4319,
												"nodeType": "IfStatement",
												"src": "17807:98:12",
												"trueBody": {
													"id": 4318,
													"nodeType": "Block",
													"src": "17832:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 4314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 4315,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4298,
																		"src": "17888:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4313,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "17853:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4317,
															"nodeType": "RevertStatement",
															"src": "17846:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4296,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:12",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 4321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4321,
												"src": "17705:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4297,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:12"
									},
									"returnParameters": {
										"id": 4302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4301,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4321,
												"src": "17742:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 4300,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:12"
									},
									"scope": 5142,
									"src": "17687:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4346,
										"nodeType": "Block",
										"src": "18308:150:12",
										"statements": [
											{
												"expression": {
													"id": 4334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4329,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4327,
														"src": "18318:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4332,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4324,
																"src": "18338:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 4330,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 4335,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4336,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4327,
														"src": "18358:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4337,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4324,
														"src": "18372:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4345,
												"nodeType": "IfStatement",
												"src": "18354:98:12",
												"trueBody": {
													"id": 4344,
													"nodeType": "Block",
													"src": "18379:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 4340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 4341,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4324,
																		"src": "18435:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4339,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "18400:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4343,
															"nodeType": "RevertStatement",
															"src": "18393:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4322,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:12",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 4347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4324,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4347,
												"src": "18252:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4323,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:12"
									},
									"returnParameters": {
										"id": 4328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4327,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4347,
												"src": "18289:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 4326,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:12"
									},
									"scope": 5142,
									"src": "18234:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4372,
										"nodeType": "Block",
										"src": "18855:150:12",
										"statements": [
											{
												"expression": {
													"id": 4360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4355,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4353,
														"src": "18865:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4358,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4350,
																"src": "18885:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 4356,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 4361,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4362,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4353,
														"src": "18905:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4363,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4350,
														"src": "18919:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4371,
												"nodeType": "IfStatement",
												"src": "18901:98:12",
												"trueBody": {
													"id": 4370,
													"nodeType": "Block",
													"src": "18926:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 4366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 4367,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4350,
																		"src": "18982:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4365,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "18947:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4369,
															"nodeType": "RevertStatement",
															"src": "18940:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4348,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:12",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 4373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4350,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4373,
												"src": "18799:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4349,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:12"
									},
									"returnParameters": {
										"id": 4354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4353,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4373,
												"src": "18836:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 4352,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:12"
									},
									"scope": 5142,
									"src": "18781:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4398,
										"nodeType": "Block",
										"src": "19402:150:12",
										"statements": [
											{
												"expression": {
													"id": 4386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4381,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4379,
														"src": "19412:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4384,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4376,
																"src": "19432:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 4382,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 4387,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4388,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4379,
														"src": "19452:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4389,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4376,
														"src": "19466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4397,
												"nodeType": "IfStatement",
												"src": "19448:98:12",
												"trueBody": {
													"id": 4396,
													"nodeType": "Block",
													"src": "19473:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 4392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 4393,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4376,
																		"src": "19529:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4391,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "19494:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4395,
															"nodeType": "RevertStatement",
															"src": "19487:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4374,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:12",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 4399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4399,
												"src": "19346:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4375,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:12"
									},
									"returnParameters": {
										"id": 4380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4379,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4399,
												"src": "19383:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 4378,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:12"
									},
									"scope": 5142,
									"src": "19328:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4424,
										"nodeType": "Block",
										"src": "19949:150:12",
										"statements": [
											{
												"expression": {
													"id": 4412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4407,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4405,
														"src": "19959:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4410,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4402,
																"src": "19979:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 4408,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 4413,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4414,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4405,
														"src": "19999:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4415,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4402,
														"src": "20013:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4423,
												"nodeType": "IfStatement",
												"src": "19995:98:12",
												"trueBody": {
													"id": 4422,
													"nodeType": "Block",
													"src": "20020:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 4418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 4419,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4402,
																		"src": "20076:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4417,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "20041:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4421,
															"nodeType": "RevertStatement",
															"src": "20034:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4400,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:12",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 4425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4402,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4425,
												"src": "19893:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4401,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:12"
									},
									"returnParameters": {
										"id": 4406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4405,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4425,
												"src": "19930:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 4404,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:12"
									},
									"scope": 5142,
									"src": "19875:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4450,
										"nodeType": "Block",
										"src": "20496:150:12",
										"statements": [
											{
												"expression": {
													"id": 4438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4433,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4431,
														"src": "20506:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4436,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4428,
																"src": "20526:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 4434,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 4439,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4440,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4431,
														"src": "20546:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4441,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4428,
														"src": "20560:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4449,
												"nodeType": "IfStatement",
												"src": "20542:98:12",
												"trueBody": {
													"id": 4448,
													"nodeType": "Block",
													"src": "20567:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 4444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 4445,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4428,
																		"src": "20623:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4443,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "20588:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4447,
															"nodeType": "RevertStatement",
															"src": "20581:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4426,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:12",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 4451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4428,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4451,
												"src": "20440:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4427,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:12"
									},
									"returnParameters": {
										"id": 4432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4431,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4451,
												"src": "20477:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 4430,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:12"
									},
									"scope": 5142,
									"src": "20422:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4476,
										"nodeType": "Block",
										"src": "21043:150:12",
										"statements": [
											{
												"expression": {
													"id": 4464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4459,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4457,
														"src": "21053:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4462,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4454,
																"src": "21073:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 4460,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 4465,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4466,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4457,
														"src": "21093:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4467,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4454,
														"src": "21107:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4475,
												"nodeType": "IfStatement",
												"src": "21089:98:12",
												"trueBody": {
													"id": 4474,
													"nodeType": "Block",
													"src": "21114:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 4470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 4471,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4454,
																		"src": "21170:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4469,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "21135:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4473,
															"nodeType": "RevertStatement",
															"src": "21128:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4452,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:12",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 4477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4477,
												"src": "20987:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4453,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:12"
									},
									"returnParameters": {
										"id": 4458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4457,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4477,
												"src": "21024:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 4456,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:12"
									},
									"scope": 5142,
									"src": "20969:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4502,
										"nodeType": "Block",
										"src": "21590:150:12",
										"statements": [
											{
												"expression": {
													"id": 4490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4485,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4483,
														"src": "21600:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4488,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4480,
																"src": "21620:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 4486,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 4491,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4492,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4483,
														"src": "21640:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4493,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4480,
														"src": "21654:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4501,
												"nodeType": "IfStatement",
												"src": "21636:98:12",
												"trueBody": {
													"id": 4500,
													"nodeType": "Block",
													"src": "21661:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 4496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 4497,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4480,
																		"src": "21717:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4495,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "21682:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4499,
															"nodeType": "RevertStatement",
															"src": "21675:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4478,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:12",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 4503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4503,
												"src": "21534:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4479,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:12"
									},
									"returnParameters": {
										"id": 4484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4483,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4503,
												"src": "21571:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 4482,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:12"
									},
									"scope": 5142,
									"src": "21516:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4528,
										"nodeType": "Block",
										"src": "22137:150:12",
										"statements": [
											{
												"expression": {
													"id": 4516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4511,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4509,
														"src": "22147:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4514,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4506,
																"src": "22167:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 4512,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 4517,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4518,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4509,
														"src": "22187:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4519,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4506,
														"src": "22201:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4527,
												"nodeType": "IfStatement",
												"src": "22183:98:12",
												"trueBody": {
													"id": 4526,
													"nodeType": "Block",
													"src": "22208:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 4522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 4523,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4506,
																		"src": "22264:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4521,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "22229:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4525,
															"nodeType": "RevertStatement",
															"src": "22222:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4504,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:12",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 4529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4529,
												"src": "22081:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4505,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:12"
									},
									"returnParameters": {
										"id": 4510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4509,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4529,
												"src": "22118:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 4508,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:12"
									},
									"scope": 5142,
									"src": "22063:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4554,
										"nodeType": "Block",
										"src": "22684:150:12",
										"statements": [
											{
												"expression": {
													"id": 4542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4537,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4535,
														"src": "22694:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4540,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4532,
																"src": "22714:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 4538,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 4543,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4544,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4535,
														"src": "22734:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4545,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4532,
														"src": "22748:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4553,
												"nodeType": "IfStatement",
												"src": "22730:98:12",
												"trueBody": {
													"id": 4552,
													"nodeType": "Block",
													"src": "22755:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 4548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 4549,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4532,
																		"src": "22811:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4547,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "22776:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4551,
															"nodeType": "RevertStatement",
															"src": "22769:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4530,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:12",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 4555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4532,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4555,
												"src": "22628:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4531,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:12"
									},
									"returnParameters": {
										"id": 4536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4535,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4555,
												"src": "22665:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 4534,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:12"
									},
									"scope": 5142,
									"src": "22610:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4580,
										"nodeType": "Block",
										"src": "23231:150:12",
										"statements": [
											{
												"expression": {
													"id": 4568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4563,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4561,
														"src": "23241:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4566,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4558,
																"src": "23261:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 4564,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 4569,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4570,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4561,
														"src": "23281:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4571,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4558,
														"src": "23295:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4579,
												"nodeType": "IfStatement",
												"src": "23277:98:12",
												"trueBody": {
													"id": 4578,
													"nodeType": "Block",
													"src": "23302:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 4574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 4575,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4558,
																		"src": "23358:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4573,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "23323:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4577,
															"nodeType": "RevertStatement",
															"src": "23316:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4556,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:12",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 4581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4581,
												"src": "23175:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4557,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:12"
									},
									"returnParameters": {
										"id": 4562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4561,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4581,
												"src": "23212:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 4560,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:12"
									},
									"scope": 5142,
									"src": "23157:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4606,
										"nodeType": "Block",
										"src": "23778:150:12",
										"statements": [
											{
												"expression": {
													"id": 4594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4589,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4587,
														"src": "23788:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4592,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4584,
																"src": "23808:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 4590,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 4595,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4596,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4587,
														"src": "23828:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4597,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4584,
														"src": "23842:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4605,
												"nodeType": "IfStatement",
												"src": "23824:98:12",
												"trueBody": {
													"id": 4604,
													"nodeType": "Block",
													"src": "23849:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 4600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 4601,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4584,
																		"src": "23905:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4599,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "23870:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4603,
															"nodeType": "RevertStatement",
															"src": "23863:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4582,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:12",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 4607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4607,
												"src": "23722:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4583,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:12"
									},
									"returnParameters": {
										"id": 4588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4587,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4607,
												"src": "23759:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 4586,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:12"
									},
									"scope": 5142,
									"src": "23704:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4632,
										"nodeType": "Block",
										"src": "24325:150:12",
										"statements": [
											{
												"expression": {
													"id": 4620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4615,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4613,
														"src": "24335:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4618,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4610,
																"src": "24355:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 4616,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 4621,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4622,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4613,
														"src": "24375:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4623,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4610,
														"src": "24389:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4631,
												"nodeType": "IfStatement",
												"src": "24371:98:12",
												"trueBody": {
													"id": 4630,
													"nodeType": "Block",
													"src": "24396:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 4626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 4627,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4610,
																		"src": "24452:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4625,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "24417:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4629,
															"nodeType": "RevertStatement",
															"src": "24410:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4608,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:12",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 4633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4610,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4633,
												"src": "24269:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4609,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:12"
									},
									"returnParameters": {
										"id": 4614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4613,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4633,
												"src": "24306:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 4612,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:12"
									},
									"scope": 5142,
									"src": "24251:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4658,
										"nodeType": "Block",
										"src": "24872:150:12",
										"statements": [
											{
												"expression": {
													"id": 4646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4641,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4639,
														"src": "24882:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4644,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4636,
																"src": "24902:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 4642,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 4647,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4648,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4639,
														"src": "24922:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4649,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4636,
														"src": "24936:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4657,
												"nodeType": "IfStatement",
												"src": "24918:98:12",
												"trueBody": {
													"id": 4656,
													"nodeType": "Block",
													"src": "24943:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 4652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 4653,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4636,
																		"src": "24999:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4651,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "24964:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4655,
															"nodeType": "RevertStatement",
															"src": "24957:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4634,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:12",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 4659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4659,
												"src": "24816:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4635,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:12"
									},
									"returnParameters": {
										"id": 4640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4639,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4659,
												"src": "24853:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 4638,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:12"
									},
									"scope": 5142,
									"src": "24798:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4684,
										"nodeType": "Block",
										"src": "25419:150:12",
										"statements": [
											{
												"expression": {
													"id": 4672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4667,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4665,
														"src": "25429:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4670,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4662,
																"src": "25449:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 4668,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 4673,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4674,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4665,
														"src": "25469:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4675,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4662,
														"src": "25483:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4683,
												"nodeType": "IfStatement",
												"src": "25465:98:12",
												"trueBody": {
													"id": 4682,
													"nodeType": "Block",
													"src": "25490:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 4678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 4679,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4662,
																		"src": "25546:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4677,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "25511:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4681,
															"nodeType": "RevertStatement",
															"src": "25504:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4660,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:12",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 4685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4685,
												"src": "25363:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4661,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:12"
									},
									"returnParameters": {
										"id": 4666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4665,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4685,
												"src": "25400:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 4664,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:12"
									},
									"scope": 5142,
									"src": "25345:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4710,
										"nodeType": "Block",
										"src": "25966:150:12",
										"statements": [
											{
												"expression": {
													"id": 4698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4693,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4691,
														"src": "25976:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4696,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4688,
																"src": "25996:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 4694,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4699,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4700,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4691,
														"src": "26016:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4701,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4688,
														"src": "26030:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4709,
												"nodeType": "IfStatement",
												"src": "26012:98:12",
												"trueBody": {
													"id": 4708,
													"nodeType": "Block",
													"src": "26037:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 4704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 4705,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4688,
																		"src": "26093:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4703,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "26058:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4707,
															"nodeType": "RevertStatement",
															"src": "26051:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4686,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:12",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 4711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4711,
												"src": "25910:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4687,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:12"
									},
									"returnParameters": {
										"id": 4692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4691,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4711,
												"src": "25947:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 4690,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:12"
									},
									"scope": 5142,
									"src": "25892:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4736,
										"nodeType": "Block",
										"src": "26513:150:12",
										"statements": [
											{
												"expression": {
													"id": 4724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4719,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4717,
														"src": "26523:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4722,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4714,
																"src": "26543:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 4720,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 4725,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4726,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4717,
														"src": "26563:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4727,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4714,
														"src": "26577:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4735,
												"nodeType": "IfStatement",
												"src": "26559:98:12",
												"trueBody": {
													"id": 4734,
													"nodeType": "Block",
													"src": "26584:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 4730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 4731,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4714,
																		"src": "26640:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4729,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "26605:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4733,
															"nodeType": "RevertStatement",
															"src": "26598:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4712,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:12",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 4737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4714,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4737,
												"src": "26457:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4713,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:12"
									},
									"returnParameters": {
										"id": 4718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4717,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4737,
												"src": "26494:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 4716,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:12"
									},
									"scope": 5142,
									"src": "26439:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4762,
										"nodeType": "Block",
										"src": "27060:150:12",
										"statements": [
											{
												"expression": {
													"id": 4750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4745,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4743,
														"src": "27070:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4748,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4740,
																"src": "27090:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 4746,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 4751,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4752,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4743,
														"src": "27110:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4753,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4740,
														"src": "27124:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4761,
												"nodeType": "IfStatement",
												"src": "27106:98:12",
												"trueBody": {
													"id": 4760,
													"nodeType": "Block",
													"src": "27131:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 4756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 4757,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4740,
																		"src": "27187:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4755,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "27152:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4759,
															"nodeType": "RevertStatement",
															"src": "27145:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4738,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:12",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 4763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4740,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4763,
												"src": "27004:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4739,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:12"
									},
									"returnParameters": {
										"id": 4744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4743,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4763,
												"src": "27041:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 4742,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:12"
									},
									"scope": 5142,
									"src": "26986:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4788,
										"nodeType": "Block",
										"src": "27607:150:12",
										"statements": [
											{
												"expression": {
													"id": 4776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4771,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4769,
														"src": "27617:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4774,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4766,
																"src": "27637:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 4772,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 4775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 4777,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4778,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4769,
														"src": "27657:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4779,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4766,
														"src": "27671:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4787,
												"nodeType": "IfStatement",
												"src": "27653:98:12",
												"trueBody": {
													"id": 4786,
													"nodeType": "Block",
													"src": "27678:73:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 4782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 4783,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4766,
																		"src": "27734:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4781,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "27699:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4785,
															"nodeType": "RevertStatement",
															"src": "27692:48:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4764,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:12",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 4789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4766,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4789,
												"src": "27551:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4765,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:12"
									},
									"returnParameters": {
										"id": 4770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4769,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4789,
												"src": "27588:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 4768,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:12"
									},
									"scope": 5142,
									"src": "27533:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4814,
										"nodeType": "Block",
										"src": "28147:148:12",
										"statements": [
											{
												"expression": {
													"id": 4802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4797,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4795,
														"src": "28157:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4800,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4792,
																"src": "28176:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 4798,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 4801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 4803,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4804,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4795,
														"src": "28196:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4805,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4792,
														"src": "28210:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4813,
												"nodeType": "IfStatement",
												"src": "28192:97:12",
												"trueBody": {
													"id": 4812,
													"nodeType": "Block",
													"src": "28217:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 4808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 4809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4792,
																		"src": "28272:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4807,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "28238:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4811,
															"nodeType": "RevertStatement",
															"src": "28231:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4790,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:12",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 4815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4792,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4815,
												"src": "28092:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4791,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:12"
									},
									"returnParameters": {
										"id": 4796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4795,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4815,
												"src": "28129:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 4794,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:12"
									},
									"scope": 5142,
									"src": "28075:220:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4840,
										"nodeType": "Block",
										"src": "28685:148:12",
										"statements": [
											{
												"expression": {
													"id": 4828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4823,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4821,
														"src": "28695:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4826,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4818,
																"src": "28714:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 4824,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 4827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 4829,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4830,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4821,
														"src": "28734:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4831,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4818,
														"src": "28748:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4839,
												"nodeType": "IfStatement",
												"src": "28730:97:12",
												"trueBody": {
													"id": 4838,
													"nodeType": "Block",
													"src": "28755:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 4834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 4835,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4818,
																		"src": "28810:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4833,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "28776:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4837,
															"nodeType": "RevertStatement",
															"src": "28769:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4816,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:12",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 4841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4841,
												"src": "28630:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4817,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:12"
									},
									"returnParameters": {
										"id": 4822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4821,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4841,
												"src": "28667:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 4820,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:12"
									},
									"scope": 5142,
									"src": "28613:220:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4866,
										"nodeType": "Block",
										"src": "29223:148:12",
										"statements": [
											{
												"expression": {
													"id": 4854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4849,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4847,
														"src": "29233:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4852,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4844,
																"src": "29252:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 4850,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 4853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 4855,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4856,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4847,
														"src": "29272:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4857,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4844,
														"src": "29286:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4865,
												"nodeType": "IfStatement",
												"src": "29268:97:12",
												"trueBody": {
													"id": 4864,
													"nodeType": "Block",
													"src": "29293:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 4860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 4861,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4844,
																		"src": "29348:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4859,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "29314:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4863,
															"nodeType": "RevertStatement",
															"src": "29307:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4842,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:12",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 4867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4844,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4867,
												"src": "29168:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4843,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:12"
									},
									"returnParameters": {
										"id": 4848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4847,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4867,
												"src": "29205:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 4846,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:12"
									},
									"scope": 5142,
									"src": "29151:220:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4892,
										"nodeType": "Block",
										"src": "29761:148:12",
										"statements": [
											{
												"expression": {
													"id": 4880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4875,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4873,
														"src": "29771:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4878,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4870,
																"src": "29790:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 4876,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 4879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 4881,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4882,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4873,
														"src": "29810:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4883,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4870,
														"src": "29824:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4891,
												"nodeType": "IfStatement",
												"src": "29806:97:12",
												"trueBody": {
													"id": 4890,
													"nodeType": "Block",
													"src": "29831:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4887,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4870,
																		"src": "29886:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4885,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "29852:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4889,
															"nodeType": "RevertStatement",
															"src": "29845:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4868,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:12",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4893,
												"src": "29706:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4869,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:12"
									},
									"returnParameters": {
										"id": 4874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4873,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4893,
												"src": "29743:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 4872,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:12"
									},
									"scope": 5142,
									"src": "29689:220:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4918,
										"nodeType": "Block",
										"src": "30299:148:12",
										"statements": [
											{
												"expression": {
													"id": 4906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4901,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4899,
														"src": "30309:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4904,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4896,
																"src": "30328:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 4902,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 4905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 4907,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4908,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4899,
														"src": "30348:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4909,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4896,
														"src": "30362:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4917,
												"nodeType": "IfStatement",
												"src": "30344:97:12",
												"trueBody": {
													"id": 4916,
													"nodeType": "Block",
													"src": "30369:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4913,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4896,
																		"src": "30424:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4911,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "30390:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4915,
															"nodeType": "RevertStatement",
															"src": "30383:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4894,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:12",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4896,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4919,
												"src": "30244:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4895,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:12"
									},
									"returnParameters": {
										"id": 4900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4899,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4919,
												"src": "30281:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 4898,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:12"
									},
									"scope": 5142,
									"src": "30227:220:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4944,
										"nodeType": "Block",
										"src": "30837:148:12",
										"statements": [
											{
												"expression": {
													"id": 4932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4927,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4925,
														"src": "30847:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4930,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4922,
																"src": "30866:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 4928,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 4931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 4933,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4934,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4925,
														"src": "30886:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4935,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4922,
														"src": "30900:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4943,
												"nodeType": "IfStatement",
												"src": "30882:97:12",
												"trueBody": {
													"id": 4942,
													"nodeType": "Block",
													"src": "30907:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4939,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4922,
																		"src": "30962:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4937,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "30928:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4941,
															"nodeType": "RevertStatement",
															"src": "30921:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4920,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:12",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 4945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4922,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4945,
												"src": "30782:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4921,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:12"
									},
									"returnParameters": {
										"id": 4926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4925,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4945,
												"src": "30819:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 4924,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:12"
									},
									"scope": 5142,
									"src": "30765:220:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4970,
										"nodeType": "Block",
										"src": "31375:148:12",
										"statements": [
											{
												"expression": {
													"id": 4958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4953,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4951,
														"src": "31385:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4956,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4948,
																"src": "31404:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 4954,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 4957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 4959,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4960,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4951,
														"src": "31424:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4961,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4948,
														"src": "31438:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4969,
												"nodeType": "IfStatement",
												"src": "31420:97:12",
												"trueBody": {
													"id": 4968,
													"nodeType": "Block",
													"src": "31445:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 4964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 4965,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4948,
																		"src": "31500:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4963,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "31466:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4967,
															"nodeType": "RevertStatement",
															"src": "31459:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4946,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:12",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 4971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4948,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4971,
												"src": "31320:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4947,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:12"
									},
									"returnParameters": {
										"id": 4952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4951,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4971,
												"src": "31357:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 4950,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:12"
									},
									"scope": 5142,
									"src": "31303:220:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4996,
										"nodeType": "Block",
										"src": "31913:148:12",
										"statements": [
											{
												"expression": {
													"id": 4984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4979,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4977,
														"src": "31923:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4982,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4974,
																"src": "31942:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 4980,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 4983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 4985,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4986,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4977,
														"src": "31962:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4987,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4974,
														"src": "31976:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4995,
												"nodeType": "IfStatement",
												"src": "31958:97:12",
												"trueBody": {
													"id": 4994,
													"nodeType": "Block",
													"src": "31983:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 4990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 4991,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4974,
																		"src": "32038:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4989,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "32004:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4993,
															"nodeType": "RevertStatement",
															"src": "31997:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4972,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:12",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4974,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4997,
												"src": "31858:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4973,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:12"
									},
									"returnParameters": {
										"id": 4978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4977,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 4997,
												"src": "31895:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 4976,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:12"
									},
									"scope": 5142,
									"src": "31841:220:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5022,
										"nodeType": "Block",
										"src": "32451:148:12",
										"statements": [
											{
												"expression": {
													"id": 5010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5005,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5003,
														"src": "32461:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5008,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5000,
																"src": "32480:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 5006,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 5009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 5011,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5012,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5003,
														"src": "32500:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5013,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5000,
														"src": "32514:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5021,
												"nodeType": "IfStatement",
												"src": "32496:97:12",
												"trueBody": {
													"id": 5020,
													"nodeType": "Block",
													"src": "32521:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 5016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 5017,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5000,
																		"src": "32576:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5015,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "32542:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5019,
															"nodeType": "RevertStatement",
															"src": "32535:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4998,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:12",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 5023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5000,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 5023,
												"src": "32396:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4999,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:12"
									},
									"returnParameters": {
										"id": 5004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5003,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 5023,
												"src": "32433:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 5002,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:12"
									},
									"scope": 5142,
									"src": "32379:220:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5048,
										"nodeType": "Block",
										"src": "32989:148:12",
										"statements": [
											{
												"expression": {
													"id": 5036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5031,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5029,
														"src": "32999:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5034,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5026,
																"src": "33018:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 5032,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 5035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 5037,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5038,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5029,
														"src": "33038:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5039,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5026,
														"src": "33052:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5047,
												"nodeType": "IfStatement",
												"src": "33034:97:12",
												"trueBody": {
													"id": 5046,
													"nodeType": "Block",
													"src": "33059:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 5042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 5043,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5026,
																		"src": "33114:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5041,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "33080:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5045,
															"nodeType": "RevertStatement",
															"src": "33073:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5024,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:12",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 5049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5026,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 5049,
												"src": "32934:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5025,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:12"
									},
									"returnParameters": {
										"id": 5030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5029,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 5049,
												"src": "32971:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 5028,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:12"
									},
									"scope": 5142,
									"src": "32917:220:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5074,
										"nodeType": "Block",
										"src": "33527:148:12",
										"statements": [
											{
												"expression": {
													"id": 5062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5057,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5055,
														"src": "33537:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5060,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5052,
																"src": "33556:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 5058,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 5061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 5063,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5064,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5055,
														"src": "33576:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5065,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5052,
														"src": "33590:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5073,
												"nodeType": "IfStatement",
												"src": "33572:97:12",
												"trueBody": {
													"id": 5072,
													"nodeType": "Block",
													"src": "33597:72:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 5068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 5069,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5052,
																		"src": "33652:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5067,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "33618:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5071,
															"nodeType": "RevertStatement",
															"src": "33611:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5050,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:12",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 5075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5052,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 5075,
												"src": "33472:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5051,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:12"
									},
									"returnParameters": {
										"id": 5056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5055,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 5075,
												"src": "33509:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 5054,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:12"
									},
									"scope": 5142,
									"src": "33455:220:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5100,
										"nodeType": "Block",
										"src": "34058:146:12",
										"statements": [
											{
												"expression": {
													"id": 5088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5083,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5081,
														"src": "34068:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5086,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5078,
																"src": "34086:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 5084,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:12",
																"typeDescriptions": {}
															}
														},
														"id": 5087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 5089,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5090,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5081,
														"src": "34106:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5091,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5078,
														"src": "34120:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5099,
												"nodeType": "IfStatement",
												"src": "34102:96:12",
												"trueBody": {
													"id": 5098,
													"nodeType": "Block",
													"src": "34127:71:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 5094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 5095,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5078,
																		"src": "34181:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5093,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3399,
																	"src": "34148:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5097,
															"nodeType": "RevertStatement",
															"src": "34141:46:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5076,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:12",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 5101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 5101,
												"src": "34004:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5077,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:12"
									},
									"returnParameters": {
										"id": 5082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5081,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 5101,
												"src": "34041:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 5080,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:12"
									},
									"scope": 5142,
									"src": "33988:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5130,
										"nodeType": "Block",
										"src": "34444:250:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5109,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5104,
														"src": "34557:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 5114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 5113,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:12",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 5112,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 5115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 5116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:12",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 5110,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 5117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5124,
												"nodeType": "IfStatement",
												"src": "34553:105:12",
												"trueBody": {
													"id": 5123,
													"nodeType": "Block",
													"src": "34592:66:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 5120,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5104,
																		"src": "34641:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5119,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3404,
																	"src": "34613:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 5121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5122,
															"nodeType": "RevertStatement",
															"src": "34606:41:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5127,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5104,
															"src": "34681:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 5125,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 5128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5108,
												"id": 5129,
												"nodeType": "Return",
												"src": "34667:20:12"
											}
										]
									},
									"documentation": {
										"id": 5102,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:12",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 5131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 5131,
												"src": "34398:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:12"
									},
									"returnParameters": {
										"id": 5108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5131,
												"src": "34436:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5106,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:12"
									},
									"scope": 5142,
									"src": "34380:314:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5140,
										"nodeType": "Block",
										"src": "34853:87:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:12",
													"nodeType": "YulBlock",
													"src": "34888:46:12",
													"statements": [
														{
															"nativeSrc": "34902:22:12",
															"nodeType": "YulAssignment",
															"src": "34902:22:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:12"
																		},
																		"nativeSrc": "34914:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:12"
																},
																"nativeSrc": "34907:17:12",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:12"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 5134,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:12",
														"valueSize": 1
													},
													{
														"declaration": 5137,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:12",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 5139,
												"nodeType": "InlineAssembly",
												"src": "34863:71:12"
											}
										]
									},
									"documentation": {
										"id": 5132,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:12",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 5141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5134,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 5141,
												"src": "34811:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:12"
									},
									"returnParameters": {
										"id": 5138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5137,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 5141,
												"src": "34842:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:12"
									},
									"scope": 5142,
									"src": "34795:145:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5143,
							"src": "769:34173:12",
							"usedErrors": [
								3387,
								3392,
								3399,
								3404
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SafeCast": [
							5142
						],
						"SignedMath": [
							5286
						]
					},
					"id": 5287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 5146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5287,
							"sourceUnit": 5143,
							"src": "135:40:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 5145,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5142,
										"src": "143:8:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 5147,
								"nodeType": "StructuredDocumentation",
								"src": "177:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 5286,
							"linearizedBaseContracts": [
								5286
							],
							"name": "SignedMath",
							"nameLocation": "266:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 5176,
										"nodeType": "Block",
										"src": "746:215:13",
										"statements": [
											{
												"id": 5175,
												"nodeType": "UncheckedBlock",
												"src": "756:199:13",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5159,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5154,
																"src": "894:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 5171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 5162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 5160,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5152,
																						"src": "900:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 5161,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5154,
																						"src": "904:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "900:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 5163,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "899:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 5168,
																							"name": "condition",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 5150,
																							"src": "932:9:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"expression": {
																							"id": 5166,
																							"name": "SafeCast",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 5142,
																							"src": "916:8:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeCast_$5142_$",
																								"typeString": "type(library SafeCast)"
																							}
																						},
																						"id": 5167,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "925:6:13",
																						"memberName": "toUint",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 5141,
																						"src": "916:15:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																							"typeString": "function (bool) pure returns (uint256)"
																						}
																					},
																					"id": 5169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "916:26:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 5165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "909:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 5164,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "909:6:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 5170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "909:34:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "899:44:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 5172,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "898:46:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "894:50:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"functionReturnParameters": 5158,
														"id": 5174,
														"nodeType": "Return",
														"src": "887:57:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 5148,
										"nodeType": "StructuredDocumentation",
										"src": "283:374:13",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 5177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "671:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5150,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "684:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 5177,
												"src": "679:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "679:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5152,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "702:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 5177,
												"src": "695:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5151,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "695:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5154,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "712:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 5177,
												"src": "705:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5153,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "705:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:36:13"
									},
									"returnParameters": {
										"id": 5158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5177,
												"src": "738:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5156,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "738:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:8:13"
									},
									"scope": 5286,
									"src": "662:299:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5195,
										"nodeType": "Block",
										"src": "1102:44:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5188,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5180,
																"src": "1127:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 5189,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5182,
																"src": "1131:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1127:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 5191,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5180,
															"src": "1134:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 5192,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5182,
															"src": "1137:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5187,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5177,
														"src": "1119:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 5193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5186,
												"id": 5194,
												"nodeType": "Return",
												"src": "1112:27:13"
											}
										]
									},
									"documentation": {
										"id": 5178,
										"nodeType": "StructuredDocumentation",
										"src": "967:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 5196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1047:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5180,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1058:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 5196,
												"src": "1051:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5179,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5182,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1068:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 5196,
												"src": "1061:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5181,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:20:13"
									},
									"returnParameters": {
										"id": 5186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5196,
												"src": "1094:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5184,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:8:13"
									},
									"scope": 5286,
									"src": "1038:108:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5214,
										"nodeType": "Block",
										"src": "1288:44:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5207,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5199,
																"src": "1313:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 5208,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5201,
																"src": "1317:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1313:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 5210,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5199,
															"src": "1320:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 5211,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5201,
															"src": "1323:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5206,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5177,
														"src": "1305:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 5212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1305:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5205,
												"id": 5213,
												"nodeType": "Return",
												"src": "1298:27:13"
											}
										]
									},
									"documentation": {
										"id": 5197,
										"nodeType": "StructuredDocumentation",
										"src": "1152:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 5215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "1233:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5199,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1244:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 5215,
												"src": "1237:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5198,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5201,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1254:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 5215,
												"src": "1247:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5200,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:20:13"
									},
									"returnParameters": {
										"id": 5205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5215,
												"src": "1280:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5203,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:8:13"
									},
									"scope": 5286,
									"src": "1224:108:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5258,
										"nodeType": "Block",
										"src": "1537:162:13",
										"statements": [
											{
												"assignments": [
													5226
												],
												"declarations": [
													{
														"constant": false,
														"id": 5226,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "1606:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 5258,
														"src": "1599:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 5225,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1599:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5239,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 5227,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5218,
																	"src": "1611:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 5228,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5220,
																	"src": "1615:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1611:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5230,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1610:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 5233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 5231,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5218,
																				"src": "1622:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 5232,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5220,
																				"src": "1626:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1622:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 5234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1621:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 5235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1632:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1621:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5237,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1620:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1610:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1599:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5240,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5226,
														"src": "1651:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 5248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 5245,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5226,
																						"src": "1671:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 5244,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1663:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 5243,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "1663:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 5246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1663:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 5247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1677:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "1663:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 5242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1656:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 5241,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1656:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 5249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1656:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 5252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 5250,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5218,
																				"src": "1685:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 5251,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5220,
																				"src": "1689:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1685:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 5253,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1684:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1656:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5255,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1655:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1651:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5224,
												"id": 5257,
												"nodeType": "Return",
												"src": "1644:48:13"
											}
										]
									},
									"documentation": {
										"id": 5216,
										"nodeType": "StructuredDocumentation",
										"src": "1338:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 5259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "1478:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5218,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1493:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 5259,
												"src": "1486:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5217,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5220,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1503:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 5259,
												"src": "1496:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5219,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:20:13"
									},
									"returnParameters": {
										"id": 5224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5259,
												"src": "1529:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5222,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:8:13"
									},
									"scope": 5286,
									"src": "1469:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5284,
										"nodeType": "Block",
										"src": "1843:767:13",
										"statements": [
											{
												"id": 5283,
												"nodeType": "UncheckedBlock",
												"src": "1853:751:13",
												"statements": [
													{
														"assignments": [
															5268
														],
														"declarations": [
															{
																"constant": false,
																"id": 5268,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "2424:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 5283,
																"src": "2417:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 5267,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2417:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 5272,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5269,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5262,
																"src": "2431:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "323535",
																"id": 5270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2436:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "2431:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2417:22:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 5280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 5277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 5275,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5262,
																					"src": "2576:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 5276,
																					"name": "mask",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5268,
																					"src": "2580:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "2576:8:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 5278,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2575:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 5279,
																		"name": "mask",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5268,
																		"src": "2588:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "2575:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 5274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2567:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 5273,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2567:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 5281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2567:26:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 5266,
														"id": 5282,
														"nodeType": "Return",
														"src": "2560:33:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 5260,
										"nodeType": "StructuredDocumentation",
										"src": "1705:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 5285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1797:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5262,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1808:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 5285,
												"src": "1801:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5261,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1800:10:13"
									},
									"returnParameters": {
										"id": 5266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5285,
												"src": "1834:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:9:13"
									},
									"scope": 5286,
									"src": "1788:822:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5287,
							"src": "258:2354:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:2504:13"
				},
				"id": 13
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Context": [
							1363
						],
						"ERC165": [
							1759
						],
						"ERC721": [
							1093
						],
						"ERC721Utils": [
							1333
						],
						"IERC165": [
							1771
						],
						"IERC721": [
							1210
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1256
						],
						"MyToken": [
							5300
						],
						"Strings": [
							1735
						]
					},
					"id": 5301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 5289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5301,
							"sourceUnit": 1094,
							"src": "58:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5290,
										"name": "ERC721",
										"nameLocations": [
											"137:6:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1093,
										"src": "137:6:14"
									},
									"id": 5291,
									"nodeType": "InheritanceSpecifier",
									"src": "137:6:14"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 5300,
							"linearizedBaseContracts": [
								5300,
								1093,
								89,
								1256,
								1210,
								1759,
								1771,
								1363
							],
							"name": "MyToken",
							"nameLocation": "126:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 5298,
										"nodeType": "Block",
										"src": "189:2:14",
										"statements": []
									},
									"id": 5299,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 5294,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "171:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 5295,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "182:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 5296,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 5293,
												"name": "ERC721",
												"nameLocations": [
													"164:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1093,
												"src": "164:6:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "164:24:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "161:2:14"
									},
									"returnParameters": {
										"id": 5297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "189:0:14"
									},
									"scope": 5300,
									"src": "150:41:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 5301,
							"src": "117:76:14",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1109,
								1118,
								1127
							]
						}
					],
					"src": "32:162:14"
				},
				"id": 14
			}
		}
	}
}